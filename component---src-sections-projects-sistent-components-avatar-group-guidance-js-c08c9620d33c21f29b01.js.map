{"version":3,"file":"component---src-sections-projects-sistent-components-avatar-group-guidance-js-c08c9620d33c21f29b01.js","mappings":"uKA0HA,UApH4BA,KAC1B,MAAMC,GAAWC,EAAAA,EAAAA,eAEjB,OACEC,EAAAA,cAACC,EAAAA,EAAa,CAACC,MAAM,gBACnBF,EAAAA,cAAA,OAAKG,UAAU,WACbH,EAAAA,cAAA,KAAGI,GAAG,YACJJ,EAAAA,cAAA,UAAI,iBAENA,EAAAA,cAAA,SAAG,OACGA,EAAAA,cAAA,cAAQ,eAAoB,wLAOlCA,EAAAA,cAAA,OAAKG,UAAU,cACbH,EAAAA,cAACK,EAAAA,QAAS,CACRF,UACwB,8CAAtBL,EAASQ,SACL,SACA,GAENC,QAASA,KACPC,EAAAA,EAAAA,UAAS,6CAEXN,MAAM,aAERF,EAAAA,cAACK,EAAAA,QAAS,CACRF,UAEE,uDADAL,EAASQ,SAEL,SACA,GAENC,QAASA,KACPC,EAAAA,EAAAA,UAAS,sDAEXN,MAAM,aAERF,EAAAA,cAACK,EAAAA,QAAS,CACRF,UAEE,mDADAL,EAASQ,SAEL,SACA,GAENC,QAASA,KACPC,EAAAA,EAAAA,UAAS,kDAEXN,MAAM,UAIVF,EAAAA,cAAA,OAAKG,UAAU,gBACbH,EAAAA,cAAA,UAAI,wCACJA,EAAAA,cAAA,SAAG,qBACiBA,EAAAA,cAAA,YAAM,eAAmB,oJAK7CA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,cAAQ,+CAAoD,mHAI9DA,EAAAA,cAAA,UACEA,EAAAA,cAAA,cAAQ,sCAA2C,8DACFA,EAAAA,cAAA,YAAM,OAAW,IAAI,oCACrCA,EAAAA,cAAA,YAAM,MAAS,eAElDA,EAAAA,cAAA,UACEA,EAAAA,cAAA,cAAQ,sCAA2C,sEACM,IACzDA,EAAAA,cAAA,YAAM,WAAc,gBAAaA,EAAAA,cAAA,YAAM,MAAS,6BAGlDA,EAAAA,cAAA,UACEA,EAAAA,cAAA,cAAQ,sBACaA,EAAAA,cAAA,YAAM,OAAU,UAC3B,IAAI,oGAEoBA,EAAAA,cAAA,YAAM,OAAU,YAEpDA,EAAAA,cAAA,UACEA,EAAAA,cAAA,cAAQ,kDAAwD,IAAI,8EAE1DA,EAAAA,cAAA,YAAM,YAAqB,gEAGvCA,EAAAA,cAAA,UACEA,EAAAA,cAAA,cAAQ,oBAAyB,oHAInCA,EAAAA,cAAA,UACEA,EAAAA,cAAA,cAAQ,qBAA0B,+FACgC,IAClEA,EAAAA,cAAA,YAAM,UAAa,MAIvBA,EAAAA,cAAA,SAAG,+BAC2BA,EAAAA,cAAA,YAAM,eAAkB,uHAM5C,C,6HClHpB,MAAMS,E,SAAuBC,QAAOC,IAAGC,WAAA,CAAAC,YAAA,mCAAAC,YAAA,eAAVJ,CAAU,mjCAqGvC,MA5CA,WACE,MAAM,EAACK,EAAS,EAACC,IAAeC,EAAAA,EAAAA,UAAS,KAEzCC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAUC,SAASC,iBAAiB,qBAC1CC,QAAQC,IAAIJ,GACRA,GACFH,EACEQ,MAAMC,KAAKN,GAASO,KAAKC,IAAC,CACxBvB,GAAIuB,EAAEvB,GACNwB,KAAM,IAAID,EAAEvB,KACZyB,KAAMF,EAAEvB,OAGd,GACC,IAEH,MAAM,EAAC0B,EAAS,EAACC,IAAed,EAAAA,EAAAA,UAAS,MAMzC,OALAC,EAAAA,EAAAA,YAAU,KACR,MAAMc,EAAOC,OAAOnC,SAASQ,SAC7ByB,EAAYC,EAAK,GAChB,IAGDhC,EAAAA,cAACS,EAAoB,KACnBT,EAAAA,cAAA,OAAKG,UAAU,cACbH,EAAAA,cAAA,UACGe,EAASW,KAAKQ,GACblC,EAAAA,cAAA,MAAImC,IAAKD,EAAE9B,GAAID,UAAU,QACvBH,EAAAA,cAACoC,EAAAA,KAAI,CACHC,GAAI,GAAGP,IAAWI,EAAEN,OACpBO,IAAKD,EAAE9B,GACPkC,gBAAgB,UAEfJ,EAAEL,WAQnB,EChGO,MAAM5B,EAAgBsC,IAA0B,IAAzB,MAAErC,EAAK,SAAEsC,GAAUD,EAC/C,OACEvC,EAAAA,cAACyC,EAAAA,EAAc,KACbzC,EAAAA,cAAA,OAAKG,UAAU,uBACbH,EAAAA,cAAA,UAAKE,IAEPF,EAAAA,cAAC0C,EAAAA,EAAG,MACJ1C,EAAAA,cAAA,OAAKG,UAAU,gBACbH,EAAAA,cAAC2C,EAAAA,GAAS,KACPH,EAAS,IAACxC,EAAAA,cAAC4C,EAAAA,EAAiB,OAE/B5C,EAAAA,cAAC6C,EAAS,OAEG,C","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/avatar-group/guidance.js","webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js"],"sourcesContent":["import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport { SistentLayout } from \"../../sistent-layout\";\nimport TabButton from \"../../../../../reusecore/Button\";\n\nconst AvatarGroupGuidance = () => {\n  const location = useLocation();\n\n  return (\n    <SistentLayout title=\"Avatar Group\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Avatar Group</h2>\n        </a>\n        <p>\n          The <strong>AvatarGroup</strong> component displays a compact\n          collection of avatar elements that represent a group of users or\n          entities. It’s useful in collaborative spaces, team-based features, or\n          user listings.\n        </p>\n\n        {/* Tabs */}\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/avatar-group\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/avatar-group\")\n            }\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/avatar-group/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/avatar-group/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/avatar-group/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/avatar-group/code\")\n            }\n            title=\"Code\"\n          />\n        </div>\n\n        <div className=\"main-content\">\n          <h3>Design Guidelines and Best Practices</h3>\n          <p>\n            When implementing <code>AvatarGroup</code>, it's important to\n            consider how it enhances collaboration and identity clarity without\n            overwhelming the interface. Here are key best practices:\n          </p>\n\n          <ul>\n            <li>\n              <strong>Use to represent teams or shared ownership:</strong> Ideal\n              for showing members of a project, contributors, or shared access\n              groups in apps like dashboards or chat.\n            </li>\n            <li>\n              <strong>Don’t overuse in dense interfaces:</strong> Too many\n              avatars in a group can clutter the view. Use the <code>max</code>{\" \"}\n              prop to collapse overflow into a <code>+N</code> indicator.\n            </li>\n            <li>\n              <strong>Use consistent sizing and spacing:</strong> Align all\n              avatars to the same size to maintain visual harmony. Use{\" \"}\n              <code>spacing</code> options (or <code>sx</code>) for controlled\n              overlap.\n            </li>\n            <li>\n              <strong>\n                Provide accessible <code>alt</code> text:\n              </strong>{\" \"}\n              Each avatar should have meaningful alternative text for screen\n              readers. Avoid empty or redundant <code>alt</code> values.\n            </li>\n            <li>\n              <strong>Avoid interactive behavior within AvatarGroup:</strong>{\" \"}\n              The component is for display only. If avatars must be clickable,\n              wrap each <code>&lt;Avatar&gt;</code> individually in buttons or\n              links outside the group context.\n            </li>\n            <li>\n              <strong>Keep it compact:</strong> AvatarGroup is not meant for\n              long lists. For large user sets, link to a full view or show\n              summary avatars only.\n            </li>\n            <li>\n              <strong>Fallbacks matter:</strong> Always account for broken\n              images by using initials or icons as fallback content within each{\" \"}\n              <code>Avatar</code>.\n            </li>\n          </ul>\n\n          <p>\n            These practices ensure that <code>AvatarGroup</code> remains a\n            helpful, visually tidy, and accessible interface element wherever\n            user identity grouping is necessary.\n          </p>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default AvatarGroupGuidance;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n"],"names":["AvatarGroupGuidance","location","useLocation","React","SistentLayout","title","className","id","TabButton","pathname","onClick","navigate","JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","contents","setContents","useState","useEffect","anchors","document","querySelectorAll","console","log","Array","from","map","a","link","text","intapath","setIntapath","path","window","x","key","Link","to","activeClassName","_ref","children","SistentWrapper","TOC","Container","SistentPagination","IntraPage"],"sourceRoot":""}