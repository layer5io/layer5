{"version":3,"file":"component---src-sections-projects-sistent-components-switch-guidance-js-5735184c77030b154ca4.js","mappings":"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","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/switch/guidance.js","webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js"],"sourcesContent":["import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport { Row } from \"../../../../../reusecore/Layout\";\nimport {\n  SistentThemeProvider,\n  Switch,\n  FormControlLabel,\n} from \"@sistent/sistent\";\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\nimport { SistentLayout } from \"../../sistent-layout\";\n\nconst SwitchGuidance = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n\n  return (\n    <SistentLayout title=\"Switch\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Switch</h2>\n        </a>\n        <p>\n          The Switch is a toggle component used to instantly turn\n          features on or off. Its binary nature makes it ideal for\n          preferences and settings panels where real-time toggling is expected.\n        </p>\n\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/switch\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/switch\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/switch/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/switch/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/switch/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/switch/code\")}\n            title=\"Code\"\n          />\n        </div>\n\n        <div className=\"main-content\">\n\n          <a id=\"Function\">\n            <h2>Function</h2>\n          </a>\n\n          <h3>State Representation</h3>\n          <p>\n            A Switch reflects its state visually, using a track and thumb\n            indicator. When toggled, the thumb slides across the track to\n            communicate the new value. This feedback is direct and immediate.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Switch checked />\n            </SistentThemeProvider>\n          </Row>\n\n          <h3>State Variants</h3>\n          <p>\n            A Switch can be active, inactive, or disabled. Use the disabled\n            state to communicate unavailable features or settings that require\n            prerequisites.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Switch checked={false} disabled />\n            </SistentThemeProvider>\n          </Row>\n\n          <a id=\"Labeling\">\n            <h2>Labeling</h2>\n          </a>\n          <p>\n            Every Switch should be paired with a visible label. Use <code>FormControlLabel</code> to\n            visually bind labels to toggles for clarity and context.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={true}\n                    inputProps={{ \"aria-label\": \"Enable dark mode\" }}\n                  />\n                }\n                label=\"Enable Dark Mode\"\n              />\n            </SistentThemeProvider>\n          </Row>\n\n          <h3>Label Placement</h3>\n          <p>\n            Labels can be placed beside the Switch horizontally. For forms or\n            settings pages, maintaining vertical spacing with consistent margins\n            is recommended to improve readability and alignment.\n          </p>\n\n          <a id=\"Sizing\">\n            <h2>Sizing</h2>\n          </a>\n          <p>\n            The default Switch size is medium, which fits most use cases. Use <code>size=\"small\"</code> when you have limited space or need to place toggles inside compact UI elements like tables, cards, or toolbars.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Switch size=\"small\" checked={false} />\n            </SistentThemeProvider>\n          </Row>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default SwitchGuidance;","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n"],"names":["SwitchGuidance","location","useLocation","isDark","useStyledDarkMode","React","SistentLayout","title","className","id","TabButton","pathname","onClick","navigate","Row","$Hcenter","SistentThemeProvider","initialMode","Switch","checked","disabled","FormControlLabel","control","inputProps","label","size","JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","contents","setContents","useState","useEffect","anchors","document","querySelectorAll","console","log","Array","from","map","a","link","text","intapath","setIntapath","path","window","x","key","Link","to","activeClassName","_ref","children","SistentWrapper","TOC","Container","SistentPagination","IntraPage"],"sourceRoot":""}