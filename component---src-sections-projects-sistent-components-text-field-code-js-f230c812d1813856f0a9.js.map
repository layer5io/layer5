{"version":3,"file":"component---src-sections-projects-sistent-components-text-field-code-js-f230c812d1813856f0a9.js","mappings":"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","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/button/code-block.js","webpack://Layer5/./src/sections/Projects/Sistent/components/text-field/code.js","webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Code from \"../../../../../components/CodeBlock\";\n\nexport const CodeBlock = ({ name, code }) => {\n  const [showCode, setShowCode] = useState(false);\n  const onChange = () => {\n    setShowCode((prev) => !prev);\n  };\n  return (\n    <div className=\"show-code\">\n      <input type=\"checkbox\" name={name} id={name} onChange={onChange} />\n      <label htmlFor={name} className=\"label\">\n        Show Code\n      </label>\n      {showCode && (\n        <Code codeString={code} language=\"javascript\" />\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport { Box, SistentThemeProvider, TextField } from \"@sistent/sistent\";\nimport { CodeBlock } from \"../button/code-block\";\nimport { SistentLayout } from \"../../sistent-layout\";\n\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\nconst codes = [\n  `<Box\n    component=\"form\"\n    sx={{ '& .MuiTextField-root': { m: 1, width: '25ch' } }}\n    noValidate\n    autoComplete=\"off\"\n  >\n    <div>\n      <TextField\n        required\n        id=\"outlined-required\"\n        label=\"Required\"\n        defaultValue=\"Hello World\"\n      />\n      <TextField\n        disabled\n        id=\"outlined-disabled\"\n        label=\"Disabled\"\n        defaultValue=\"Hello World\"\n      />\n      <TextField\n        id=\"outlined-password-input\"\n        label=\"Password\"\n        type=\"password\"\n        autoComplete=\"current-password\"\n      />\n      <TextField\n        id=\"outlined-number\"\n        label=\"Number\"\n        type=\"number\"\n      />\n      <TextField id=\"outlined-search\" label=\"Search field\" type=\"search\" />\n      <TextField\n        id=\"outlined-helperText\"\n        label=\"Helper text\"\n        defaultValue=\"Default Value\"\n        helperText=\"Some important text\"\n      />\n    </div>\n    <div>\n      <TextField\n        required\n        id=\"filled-required\"\n        label=\"Required\"\n        defaultValue=\"Hello World\"\n        variant=\"filled\"\n      />\n      <TextField\n        disabled\n        id=\"filled-disabled\"\n        label=\"Disabled\"\n        defaultValue=\"Hello World\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-password-input\"\n        label=\"Password\"\n        type=\"password\"\n        autoComplete=\"current-password\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-number\"\n        label=\"Number\"\n        type=\"number\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-search\"\n        label=\"Search field\"\n        type=\"search\"\n        variant=\"filled\"\n      />\n      <TextField\n        id=\"filled-helperText\"\n        label=\"Helper text\"\n        defaultValue=\"Default Value\"\n        helperText=\"Some important text\"\n        variant=\"filled\"\n      />\n    </div>\n    <div>\n      <TextField\n        required\n        id=\"standard-required\"\n        label=\"Required\"\n        defaultValue=\"Hello World\"\n        variant=\"standard\"\n      />\n      <TextField\n        disabled\n        id=\"standard-disabled\"\n        label=\"Disabled\"\n        defaultValue=\"Hello World\"\n        variant=\"standard\"\n      />\n      <TextField\n        id=\"standard-password-input\"\n        label=\"Password\"\n        type=\"password\"\n        autoComplete=\"current-password\"\n        variant=\"standard\"\n      />\n      <TextField\n        id=\"standard-number\"\n        label=\"Number\"\n        type=\"number\"\n        variant=\"standard\"\n      />\n      <TextField\n        id=\"standard-search\"\n        label=\"Search field\"\n        type=\"search\"\n        variant=\"standard\"\n      />\n      <TextField\n        id=\"standard-helperText\"\n        label=\"Helper text\"\n        defaultValue=\"Default Value\"\n        helperText=\"Some important text\"\n        variant=\"standard\"\n      />\n    </div>\n  </Box>`,\n  `  <Box\n      component=\"form\"\n      sx={{ '& .MuiTextField-root': { m: 1, width: '25ch' } }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <div>\n        <TextField\n          error\n          id=\"outlined-error\"\n          label=\"Error\"\n          defaultValue=\"Hello World\"\n        />\n        <TextField\n          error\n          id=\"outlined-error-helper-text\"\n          label=\"Error\"\n          defaultValue=\"Hello World\"\n          helperText=\"Incorrect entry.\"\n        />\n      </div>\n      <div>\n        <TextField\n          error\n          id=\"filled-error\"\n          label=\"Error\"\n          defaultValue=\"Hello World\"\n          variant=\"filled\"\n        />\n        <TextField\n          error\n          id=\"filled-error-helper-text\"\n          label=\"Error\"\n          defaultValue=\"Hello World\"\n          helperText=\"Incorrect entry.\"\n          variant=\"filled\"\n        />\n      </div>\n      <div>\n        <TextField\n          error\n          id=\"standard-error\"\n          label=\"Error\"\n          defaultValue=\"Hello World\"\n          variant=\"standard\"\n        />\n        <TextField\n          error\n          id=\"standard-error-helper-text\"\n          label=\"Error\"\n          defaultValue=\"Hello World\"\n          helperText=\"Incorrect entry.\"\n          variant=\"standard\"\n        />\n      </div>\n    </Box>`,\n  `  <Box\n      component=\"form\"\n      sx={{ '& .MuiTextField-root': { m: 1, width: '25ch' } }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <div>\n        <TextField\n          id=\"outlined-multiline-flexible\"\n          label=\"Multiline\"\n          multiline\n          maxRows={4}\n        />\n        <TextField\n          id=\"outlined-textarea\"\n          label=\"Multiline Placeholder\"\n          placeholder=\"Placeholder\"\n          multiline\n        />\n        <TextField\n          id=\"outlined-multiline-static\"\n          label=\"Multiline\"\n          multiline\n          rows={4}\n          defaultValue=\"Default Value\"\n        />\n      </div>\n      <div>\n        <TextField\n          id=\"filled-multiline-flexible\"\n          label=\"Multiline\"\n          multiline\n          maxRows={4}\n          variant=\"filled\"\n        />\n        <TextField\n          id=\"filled-textarea\"\n          label=\"Multiline Placeholder\"\n          placeholder=\"Placeholder\"\n          multiline\n          variant=\"filled\"\n        />\n        <TextField\n          id=\"filled-multiline-static\"\n          label=\"Multiline\"\n          multiline\n          rows={4}\n          defaultValue=\"Default Value\"\n          variant=\"filled\"\n        />\n      </div>\n      <div>\n        <TextField\n          id=\"standard-multiline-flexible\"\n          label=\"Multiline\"\n          multiline\n          maxRows={4}\n          variant=\"standard\"\n        />\n        <TextField\n          id=\"standard-textarea\"\n          label=\"Multiline Placeholder\"\n          placeholder=\"Placeholder\"\n          multiline\n          variant=\"standard\"\n        />\n        <TextField\n          id=\"standard-multiline-static\"\n          label=\"Multiline\"\n          multiline\n          rows={4}\n          defaultValue=\"Default Value\"\n          variant=\"standard\"\n        />\n      </div>\n    </Box>`,\n  `  <Box\n      component=\"form\"\n      sx={{ '& .MuiTextField-root': { m: 1, width: '25ch' } }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <div>\n        <TextField\n          label=\"Size\"\n          id=\"outlined-size-small\"\n          defaultValue=\"Small\"\n          size=\"small\"\n        />\n        <TextField label=\"Size\" id=\"outlined-size-normal\" defaultValue=\"Normal\" />\n      </div>\n      <div>\n        <TextField\n          label=\"Size\"\n          id=\"filled-size-small\"\n          defaultValue=\"Small\"\n          variant=\"filled\"\n          size=\"small\"\n        />\n        <TextField\n          label=\"Size\"\n          id=\"filled-size-normal\"\n          defaultValue=\"Normal\"\n          variant=\"filled\"\n        />\n      </div>\n      <div>\n        <TextField\n          label=\"Size\"\n          id=\"standard-size-small\"\n          defaultValue=\"Small\"\n          size=\"small\"\n          variant=\"standard\"\n        />\n        <TextField\n          label=\"Size\"\n          id=\"standard-size-normal\"\n          defaultValue=\"Normal\"\n          variant=\"standard\"\n        />\n      </div>\n    </Box>`,\n  ` <Box sx={{ width: 600, maxWidth: '100%' }}>\n      <TextField fullWidth label=\"fullWidth\" id=\"fullWidth\" />\n  </Box>`,\n];\n\nconst TextFieldCode = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n\n  return (\n    <SistentLayout title=\"TextField\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Text Field</h2>\n        </a>\n        <p>\n          The TextField component is a versatile input field used to capture\n          user input in forms and user interfaces. It can handle a variety of\n          input types, such as text, numbers, emails, and passwords, and offers\n          built-in styling and validation features.\n        </p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/text-field\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/text-field\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/text-field/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/text-field/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/text-field/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/identity/color/code\")}\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <p>\n            A TextField allow user to enter and edit any text. It mostly present\n            in Forms or dialogue box in UI. TextField are crucial and integral\n            elements in an interface. It allows to get data from enetered user.\n          </p>\n          <a id=\"Form Props\">\n            <h2>Form Props</h2>\n          </a>\n          <p>\n            Standard form attributes are supported, for example required,\n            disabled, type, etc. HelperText attributes is used to give context\n            about a field's input, such as how the input will be used.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"tf-items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box\n                  component=\"form\"\n                  sx={{ \"& .MuiTextField-root\": { m: 1, width: \"25ch\" } }}\n                  noValidate\n                  autoComplete=\"off\"\n                >\n                  <div>\n                    <TextField\n                      required\n                      id=\"outlined-required\"\n                      label=\"Required\"\n                      defaultValue=\"Hello World\"\n                    />\n                    <TextField\n                      disabled\n                      id=\"outlined-disabled\"\n                      label=\"Disabled\"\n                      defaultValue=\"Hello World\"\n                    />\n                    <TextField\n                      id=\"outlined-password-input\"\n                      label=\"Password\"\n                      type=\"password\"\n                      autoComplete=\"current-password\"\n                    />\n                    <TextField\n                      id=\"outlined-number\"\n                      label=\"Number\"\n                      type=\"number\"\n                    />\n                    <TextField\n                      id=\"outlined-search\"\n                      label=\"Search field\"\n                      type=\"search\"\n                    />\n                    <TextField\n                      id=\"outlined-helperText\"\n                      label=\"Helper text\"\n                      defaultValue=\"Default Value\"\n                      helperText=\"Some important text\"\n                    />\n                  </div>\n                  <div>\n                    <TextField\n                      required\n                      id=\"filled-required\"\n                      label=\"Required\"\n                      defaultValue=\"Hello World\"\n                      variant=\"filled\"\n                    />\n                    <TextField\n                      disabled\n                      id=\"filled-disabled\"\n                      label=\"Disabled\"\n                      defaultValue=\"Hello World\"\n                      variant=\"filled\"\n                    />\n                    <TextField\n                      id=\"filled-password-input\"\n                      label=\"Password\"\n                      type=\"password\"\n                      autoComplete=\"current-password\"\n                      variant=\"filled\"\n                    />\n                    <TextField\n                      id=\"filled-number\"\n                      label=\"Number\"\n                      type=\"number\"\n                      variant=\"filled\"\n                    />\n                    <TextField\n                      id=\"filled-search\"\n                      label=\"Search field\"\n                      type=\"search\"\n                      variant=\"filled\"\n                    />\n                    <TextField\n                      id=\"filled-helperText\"\n                      label=\"Helper text\"\n                      defaultValue=\"Default Value\"\n                      helperText=\"Some important text\"\n                      variant=\"filled\"\n                    />\n                  </div>\n                  <div>\n                    <TextField\n                      required\n                      id=\"standard-required\"\n                      label=\"Required\"\n                      defaultValue=\"Hello World\"\n                      variant=\"standard\"\n                    />\n                    <TextField\n                      disabled\n                      id=\"standard-disabled\"\n                      label=\"Disabled\"\n                      defaultValue=\"Hello World\"\n                      variant=\"standard\"\n                    />\n                    <TextField\n                      id=\"standard-password-input\"\n                      label=\"Password\"\n                      type=\"password\"\n                      autoComplete=\"current-password\"\n                      variant=\"standard\"\n                    />\n                    <TextField\n                      id=\"standard-number\"\n                      label=\"Number\"\n                      type=\"number\"\n                      variant=\"standard\"\n                    />\n                    <TextField\n                      id=\"standard-search\"\n                      label=\"Search field\"\n                      type=\"search\"\n                      variant=\"standard\"\n                    />\n                    <TextField\n                      id=\"standard-helperText\"\n                      label=\"Helper text\"\n                      defaultValue=\"Default Value\"\n                      helperText=\"Some important text\"\n                      variant=\"standard\"\n                    />\n                  </div>\n                </Box>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"form-props\" code={codes[0]} />\n          </div>\n          <a id=\"Validation\">\n            <h2>Validation</h2>\n          </a>\n          <p>\n            The error property toggles the error state. The helperText prop can\n            then be used to provide feedback to the user about the error. As\n            shown below it can be used with variant such as outlined (default),\n            filled, and standard.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"tf-items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box\n                  component=\"form\"\n                  sx={{ \"& .MuiTextField-root\": { m: 1, width: \"25ch\" } }}\n                  noValidate\n                  autoComplete=\"off\"\n                >\n                  <div>\n                    <TextField\n                      error\n                      id=\"outlined-error\"\n                      label=\"Error\"\n                      defaultValue=\"Hello World\"\n                    />\n                    <TextField\n                      error\n                      id=\"outlined-error-helper-text\"\n                      label=\"Error\"\n                      defaultValue=\"Hello World\"\n                      helperText=\"Incorrect entry.\"\n                    />\n                  </div>\n                  <div>\n                    <TextField\n                      error\n                      id=\"filled-error\"\n                      label=\"Error\"\n                      defaultValue=\"Hello World\"\n                      variant=\"filled\"\n                    />\n                    <TextField\n                      error\n                      id=\"filled-error-helper-text\"\n                      label=\"Error\"\n                      defaultValue=\"Hello World\"\n                      helperText=\"Incorrect entry.\"\n                      variant=\"filled\"\n                    />\n                  </div>\n                  <div>\n                    <TextField\n                      error\n                      id=\"standard-error\"\n                      label=\"Error\"\n                      defaultValue=\"Hello World\"\n                      variant=\"standard\"\n                    />\n                    <TextField\n                      error\n                      id=\"standard-error-helper-text\"\n                      label=\"Error\"\n                      defaultValue=\"Hello World\"\n                      helperText=\"Incorrect entry.\"\n                      variant=\"standard\"\n                    />\n                  </div>\n                </Box>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"validation\" code={codes[0]} />\n          </div>\n          <a id=\"Multiline\">\n            <h2>Multiline</h2>\n          </a>\n          <p>\n            The multiline prop transforms the text field into a TextareaAutosize\n            element. Unless the rows prop is set, the height of the text field\n            dynamically matches its content (using TextareaAutosize). You can\n            use the minRows and maxRows props to bound it.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"tf-items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box\n                  component=\"form\"\n                  sx={{ \"& .MuiTextField-root\": { m: 1, width: \"25ch\" } }}\n                  noValidate\n                  autoComplete=\"off\"\n                >\n                  <div>\n                    <TextField\n                      id=\"outlined-multiline-flexible\"\n                      label=\"Multiline\"\n                      multiline\n                      maxRows={4}\n                    />\n                    <TextField\n                      id=\"outlined-textarea\"\n                      label=\"Multiline Placeholder\"\n                      placeholder=\"Placeholder\"\n                      multiline\n                    />\n                    <TextField\n                      id=\"outlined-multiline-static\"\n                      label=\"Multiline\"\n                      multiline\n                      rows={4}\n                      defaultValue=\"Default Value\"\n                    />\n                  </div>\n                  <div>\n                    <TextField\n                      id=\"filled-multiline-flexible\"\n                      label=\"Multiline\"\n                      multiline\n                      maxRows={4}\n                      variant=\"filled\"\n                    />\n                    <TextField\n                      id=\"filled-textarea\"\n                      label=\"Multiline Placeholder\"\n                      placeholder=\"Placeholder\"\n                      multiline\n                      variant=\"filled\"\n                    />\n                    <TextField\n                      id=\"filled-multiline-static\"\n                      label=\"Multiline\"\n                      multiline\n                      rows={4}\n                      defaultValue=\"Default Value\"\n                      variant=\"filled\"\n                    />\n                  </div>\n                  <div>\n                    <TextField\n                      id=\"standard-multiline-flexible\"\n                      label=\"Multiline\"\n                      multiline\n                      maxRows={4}\n                      variant=\"standard\"\n                    />\n                    <TextField\n                      id=\"standard-textarea\"\n                      label=\"Multiline Placeholder\"\n                      placeholder=\"Placeholder\"\n                      multiline\n                      variant=\"standard\"\n                    />\n                    <TextField\n                      id=\"standard-multiline-static\"\n                      label=\"Multiline\"\n                      multiline\n                      rows={4}\n                      defaultValue=\"Default Value\"\n                      variant=\"standard\"\n                    />\n                  </div>\n                </Box>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"multi-line\" code={codes[2]} />\n          </div>\n          <a id=\"Sizes\">\n            <h2>Sizes</h2>\n          </a>\n          <p>\n            TextField can have small or normal field sizes. According the\n            requirement it can be adjusted.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"tf-items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box\n                  component=\"form\"\n                  sx={{ \"& .MuiTextField-root\": { m: 1, width: \"25ch\" } }}\n                  noValidate\n                  autoComplete=\"off\"\n                >\n                  <div>\n                    <TextField\n                      label=\"Size\"\n                      id=\"outlined-size-small\"\n                      defaultValue=\"Small\"\n                      size=\"small\"\n                    />\n                    <TextField\n                      label=\"Size\"\n                      id=\"outlined-size-normal\"\n                      defaultValue=\"Normal\"\n                    />\n                  </div>\n                  <div>\n                    <TextField\n                      label=\"Size\"\n                      id=\"filled-size-small\"\n                      defaultValue=\"Small\"\n                      variant=\"filled\"\n                      size=\"small\"\n                    />\n                    <TextField\n                      label=\"Size\"\n                      id=\"filled-size-normal\"\n                      defaultValue=\"Normal\"\n                      variant=\"filled\"\n                    />\n                  </div>\n                  <div>\n                    <TextField\n                      label=\"Size\"\n                      id=\"standard-size-small\"\n                      defaultValue=\"Small\"\n                      size=\"small\"\n                      variant=\"standard\"\n                    />\n                    <TextField\n                      label=\"Size\"\n                      id=\"standard-size-normal\"\n                      defaultValue=\"Normal\"\n                      variant=\"standard\"\n                    />\n                  </div>\n                </Box>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"sizes\" code={codes[3]} />\n          </div>\n          <a id=\"Full Width\">\n            <h2>Full Width</h2>\n          </a>\n          <p>\n            FullWidth attribute can be used to make the input take up the full\n            width of its container.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"tf-items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box sx={{ width: 600, maxWidth: \"100%\" }}>\n                  <TextField fullWidth label=\"fullWidth\" id=\"fullWidth\" />\n                </Box>\n              </SistentThemeProvider>\n            </div>\n\n            <CodeBlock name=\"filled-button\" code={codes[4]} />\n          </div>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default TextFieldCode;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n"],"names":["CodeBlock","_ref","name","code","showCode","setShowCode","useState","React","className","type","id","onChange","prev","htmlFor","Code","codeString","language","codes","TextFieldCode","location","useLocation","isDark","useStyledDarkMode","SistentLayout","title","TabButton","pathname","onClick","navigate","SistentThemeProvider","initialMode","Box","component","sx","m","width","noValidate","autoComplete","TextField","required","label","defaultValue","disabled","helperText","variant","error","multiline","maxRows","placeholder","rows","size","maxWidth","fullWidth","JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","contents","setContents","useEffect","anchors","document","querySelectorAll","console","log","Array","from","map","a","link","text","intapath","setIntapath","path","window","x","key","Link","to","activeClassName","children","SistentWrapper","TOC","Container","SistentPagination","IntraPage"],"sourceRoot":""}