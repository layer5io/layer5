{"version":3,"file":"component---src-templates-blog-category-list-js-9f9325059f073b296612.js","mappings":"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","sources":["webpack://Layer5/./src/sections/Blog/Blog-list/blogList.style.js","webpack://Layer5/./src/sections/Blog/Blog-list/index.js","webpack://Layer5/./src/templates/blog-category-list.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const BlogPageWrapper = styled.div`\n\t.blog-list-wrapper {\n\t\tmargin: 5rem auto;\n\t}\n\t.blog-lists{\n\t\tmargin-top: 5rem;\n\t}\n\n\t.tooltip-search{\n\t\tmargin-bottom: 0.8rem;\n\t}\n\t.post-block{\n\t\tbackground-color: ${props => props.theme.grey212121ToWhite};\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\ttransition: 0.8s cubic-bezier(0.2, 0.8, 0.2, 1);\n\t}\n\t.post-thumb-block{\n\t\theight: 8rem;\n\t\twidth: 25%;\n\t\timg{\n\t\t\tpadding: 0px;\n\t\t\tmargin-left: 0.5rem;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t}\n\t}\n\n\t.post-content-block{\n\t\theight: 8.5rem;\n\t\twidth: 75%;\n\t}\n\n\t.post-title{\n\t\tfont-size: 1.5rem;\n\t}\n\n\t.post-meta-block{\n\t\tflex-direction: row-reverse;\n\t\tp{\n\t\t\tfont-size: 1rem;\n\t\t\ttext-align: end;\n\t\t}\n\t\t.author{\n\t\t\tfont-size: 1rem;\n\t\t\ttext-align: start;\n\t\t\tmargin-bottom:0;\n\t\t}\n\t}\n\n\t@media screen and (max-width:1200px){\n\t\t.post-block{\n\t\t\theight: auto;\n\t\t}\n\t\t.post-thumb-block{\n\t\t\theight: 8rem;\n\t\t}\n\n\t}\n\n\t@media screen and (max-width:992px){\n\t\t.post-block{\n\t\t\tflex-direction: row;\n\t\t}\n\t\t.post-thumb-block{\n\t\t\theight: 8rem;\n\t\t\twidth: 25%;\n\t\t\tmargin-right: 1rem;\n\t\n\t\t\timg{\n\t\t\t\tobject-fit: cover;\n\t\t\t\tmargin: 0;\n\t\t\t\tflex: 1;\n\t\t\t}\n\t\t}\n\t\t.post-content-block{\n\t\t\twidth: 70%;\n\t\t\tpadding: 0.5rem;\n\t\t}\n\t}\n\n\t@media screen and (max-width:576px){\n\t\t.post-block{\n\t\t\tflex-direction: column;\n\t\t}\n\t\t.blog-list-wrapper{\n\t\t\tmargin: 1.5rem auto 5rem;\n\t\t}\n\t\t.blog-lists{\n\t\t\tmargin-top: 0;\n\t\t}\n\t\t.post-thumb-block{\n\t\t\twidth: 100%;\n\t\t\theight: 12rem;\n\t\t\tmargin-right: 0;\n\t\t\t\n\t\t\timg{\n\t\t\t\tobject-fit: cover;\n\t\t\t\tpadding: 0;\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t}\n\t\t.post-content-block{\n\t\t\twidth: 100%;\n\t\t\tpadding: 0.75rem 0.5rem;\n\t\t}\n\t\t.tooltip-search{\n\t\t\tdisplay: block;\n\t\t}\n\t}\n\n\t@media only screen and (min-width: 577px) {\n    .tooltip-search {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 0;\n    }\n  }\n  \n`;\n","import React from \"react\";\nimport BlogViewToolTip from \"../../../components/blog-view-tooltip\";\nimport { Container, Row, Col } from \"../../../reusecore/Layout\";\nimport PageHeader from \"../../../reusecore/PageHeader\";\nimport Sidebar from \"../Blog-sidebar\";\nimport Card from \"../../../components/Card\";\nimport { BlogPageWrapper } from \"./blogList.style\";\nimport RssFeedIcon from \"../../../assets/images/socialIcons/rss-sign.svg\";\nimport Pagination from \"../../Resources/Resources-grid/paginate\";\nimport SearchBox from \"../../../reusecore/Search\";\n\nconst BlogList = ({\n  isListView,\n  setListView,\n  setGridView,\n  pageContext,\n  currentPage,\n  searchQuery,\n  searchData,\n  setCurrentPage,\n  queryResults,\n  postsPerPage,\n  searchedPosts,\n}) => {\n  const category = pageContext.category ? pageContext.category : null;\n  const tag = pageContext.tag ? pageContext.tag : null;\n  const totalCount = queryResults.length;\n  const header = tag\n    ? `${totalCount} post${totalCount === 1 ? \"\" : \"s\"} tagged with \"${tag}\"`\n    : category\n      ? `${totalCount} post${totalCount === 1 ? \"\" : \"s\"\n      } categorized as \"${category}\"`\n      : \"Blog\";\n\n  // Change page\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <BlogPageWrapper>\n      <PageHeader\n        title={header}\n        path=\"Blog\"\n        img={RssFeedIcon}\n        feedlink=\"/blog/feed.xml\"\n      />\n      <div className=\"blog-page-wrapper\">\n        <Container>\n          <Row style={{\n            flexWrap: \"wrap\"\n          }}>\n            <Col $xs={12} $lg={8}>\n              {!pageContext.tag && !pageContext.category ? (\n                <div className=\"tooltip-search\">\n                  <BlogViewToolTip\n                    isListView={isListView}\n                    setListView={setListView}\n                    setGridView={setGridView}\n                  />\n                  <SearchBox\n                    searchQuery={searchQuery}\n                    searchData={searchData}\n                    paginate={paginate} currentPage={currentPage}\n                    focusSearch={true}\n                  />\n                </div>\n              ) : (\n                <SearchBox searchQuery={searchQuery} searchData={searchData} paginate={paginate} currentPage={currentPage} focusSearch={true} />\n              )}\n              <div className=\"blog-list-wrapper\">\n                <Row style={{\n                  flexWrap: \"wrap\"\n                }}\n                className=\"blog-lists\">\n                  {searchedPosts.length > 0 &&\n                    searchedPosts?.map(({ id, frontmatter, fields }) => (\n                      <Col $xs={12} key={id}>\n                        <Card frontmatter={frontmatter} fields={fields} />\n                      </Col>\n                    ))}\n                  <Col>\n                    {searchedPosts.length > 0 && (\n                      <Pagination\n                        postsPerPage={postsPerPage}\n                        totalPosts={queryResults.length}\n                        currentPage={currentPage}\n                        paginate={paginate}\n                      />\n                    )}\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n            <Col $xs={12} $lg={4}>\n              <Sidebar pageContext={pageContext} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </BlogPageWrapper>\n  );\n};\n\nexport default BlogList;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport useDataList from \"../utils/usedataList\";\nimport SEO from \"../components/seo\";\nimport BlogList from \"../sections/Blog/Blog-list\";\nimport { graphql } from \"gatsby\";\n\nexport const query = graphql`query BlogsByCategory($category: String!) {\n  allMdx(\n    sort: {frontmatter: {date: DESC}}\n    filter: {fields: {collection: {eq: \"blog\"}}, frontmatter: {category: {eq: $category}, published: {eq: true}}}\n  ) {\n    nodes {\n      id\n      body\n      frontmatter {\n        title\n        subtitle\n        date(formatString: \"MMMM Do, YYYY\")\n        author\n        thumbnail {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH)\n          }\n          extension\n          publicURL\n        }\n        darkthumbnail {\n          childImageSharp {\n            gatsbyImageData(width: 500, layout: CONSTRAINED)\n          }\n          extension\n          publicURL\n        }\n      }\n      fields {\n        slug\n      }\n    }\n  }\n}`;\n\nconst BlogListPage = ({ pageContext, data }) => {\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  let { nodes } = data.allMdx;\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const { queryResults, searchData } = useDataList(\n    nodes,\n    setSearchQuery,\n    searchQuery,\n    [\"frontmatter\", \"title\"],\n    \"id\"\n  );\n  const searchedPosts = queryResults.slice(indexOfFirstPost, indexOfLastPost);\n  return (\n\n    <>\n\n\n      <BlogList\n        data={data}\n        pageContext={pageContext}\n        searchedPosts={searchedPosts}\n        setCurrentPage={setCurrentPage}\n        postsPerPage={postsPerPage}\n        searchData={searchData}\n        searchQuery={searchQuery}\n        setSearchQuery={setSearchQuery}\n        currentPage={currentPage}\n        queryResults={queryResults}\n      />\n\n    </>\n\n  );\n};\nexport default BlogListPage;\n\nexport const Head = () => {\n  return  <SEO\n    title=\"Blog\"\n    description=\"Articles on how to develop and operatate cloud native infrastucture and microservices.\"\n    canonical=\"https://layer5.io/blog\"\n  />;\n};"],"names":["BlogPageWrapper","styled","div","withConfig","displayName","componentId","props","theme","grey212121ToWhite","_ref","isListView","setListView","setGridView","pageContext","currentPage","searchQuery","searchData","setCurrentPage","queryResults","postsPerPage","searchedPosts","category","tag","totalCount","length","header","paginate","pageNumber","React","PageHeader","title","path","img","RssFeedIcon","feedlink","className","Container","Row","style","flexWrap","Col","$xs","$lg","SearchBox","focusSearch","BlogViewToolTip","map","_ref2","id","frontmatter","fields","key","Card","Pagination","totalPosts","Sidebar","data","useState","indexOfLastPost","indexOfFirstPost","nodes","allMdx","setSearchQuery","useDataList","slice","BlogList","Head","SEO","description","canonical"],"sourceRoot":""}