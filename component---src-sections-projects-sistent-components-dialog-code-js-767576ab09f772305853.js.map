{"version":3,"file":"component---src-sections-projects-sistent-components-dialog-code-js-767576ab09f772305853.js","mappings":"gKAGO,MAAMA,EAAYC,IAAqB,IAApB,KAAEC,EAAI,KAAEC,GAAMF,EACtC,MAAM,EAACG,EAAS,EAACC,IAAeC,EAAAA,EAAAA,WAAS,GAIzC,OACEC,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,SAAOE,KAAK,WAAWP,KAAMA,EAAMQ,GAAIR,EAAMS,SALhCA,KACfN,GAAaO,IAAUA,GAAK,IAK1BL,EAAAA,cAAA,SAAOM,QAASX,EAAMM,UAAU,SAAQ,aAGvCJ,GACCG,EAAAA,cAACO,EAAAA,GAAI,CAACC,WAAYZ,EAAMa,SAAS,eAE/B,C,yHC6HV,UA3GmBC,KACjB,MAAMC,GAAWC,EAAAA,EAAAA,gBACX,OAAEC,IAAWC,EAAAA,EAAAA,MACb,EAACC,EAAK,EAACC,IAAWjB,EAAAA,EAAAA,WAAS,IAC3B,EAACkB,EAAS,EAACC,IAAenB,EAAAA,EAAAA,WAAS,IACnC,EAACoB,EAAS,EAACC,IAAerB,EAAAA,EAAAA,WAAS,GAGnCsB,EAAcA,IAAML,GAAQ,GAElC,OACEhB,EAAAA,cAACsB,EAAAA,EAAa,CAACC,MAAM,wBACnBvB,EAAAA,cAAA,OAAKC,UAAU,WACbD,EAAAA,cAAA,KAAGG,GAAG,eACJH,EAAAA,cAAA,UAAI,+BAENA,EAAAA,cAAA,SAAG,sQAMHA,EAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,cAACwB,EAAAA,QAAS,CACRD,MAAM,WACNtB,UAAiC,wCAAtBU,EAASc,SAAqD,SAAW,GACpFC,QAASA,KAAMC,EAAAA,EAAAA,UAAS,yCAE1B3B,EAAAA,cAACwB,EAAAA,QAAS,CACRD,MAAM,WACNtB,UAAiC,iDAAtBU,EAASc,SAA8D,SAAW,GAC7FC,QAASA,KAAMC,EAAAA,EAAAA,UAAS,kDAE1B3B,EAAAA,cAACwB,EAAAA,QAAS,CACRD,MAAM,OACNtB,UAAiC,6CAAtBU,EAASc,SAA0D,SAAW,GACzFC,QAASA,KAAMC,EAAAA,EAAAA,UAAS,+CAI5B3B,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAAA,SAAG,6DACHA,EAAAA,cAAC4B,EAAAA,qBAAoB,CAACC,YAAahB,EAAS,OAAS,SACnDb,EAAAA,cAAC8B,EAAAA,OAAM,CAACJ,QApCCK,IAAMf,GAAQ,IAoCM,eAC7BhB,EAAAA,cAACgC,EAAAA,OAAM,CAACjB,KAAMA,EAAMkB,QAASZ,GAC3BrB,EAAAA,cAACkC,EAAAA,YAAW,KAAC,kBACblC,EAAAA,cAACmC,EAAAA,cAAa,KAAC,4CACfnC,EAAAA,cAACoC,EAAAA,cAAa,KACZpC,EAAAA,cAAC8B,EAAAA,OAAM,CAACJ,QAASL,GAAa,UAC9BrB,EAAAA,cAAC8B,EAAAA,OAAM,CAACO,MAAM,UAAUX,QAASL,GAAa,cAKpDrB,EAAAA,cAAA,MAAIsC,MAAO,CAAEC,UAAW,SAAU,gBAClCvC,EAAAA,cAACP,EAAAA,EAAS,CAACE,KAAK,eAAeC,KAxEf,wfA2EhBI,EAAAA,cAAA,MAAIsC,MAAO,CAAEC,UAAW,SAAU,8BAClCvC,EAAAA,cAAC4B,EAAAA,qBAAoB,CAACC,YAAahB,EAAS,OAAS,SACnDb,EAAAA,cAAC8B,EAAAA,OAAM,CAACJ,QAASA,IAAMR,GAAY,IAAO,2BAC1ClB,EAAAA,cAACgC,EAAAA,OAAM,CACLjB,KAAME,EACNgB,QAASA,IAAMf,GAAY,GAC3BoB,MAAO,CAAEE,MAAO,OAAQC,OAAQ,QAASC,SAAU,SAEnD1C,EAAAA,cAACkC,EAAAA,YAAW,KAAC,sBACblC,EAAAA,cAACmC,EAAAA,cAAa,KACZnC,EAAAA,cAAA,SAAG,2FAELA,EAAAA,cAACoC,EAAAA,cAAa,KACZpC,EAAAA,cAAC8B,EAAAA,OAAM,CAACJ,QAASA,IAAMR,GAAY,IAAQ,UAC3ClB,EAAAA,cAAC8B,EAAAA,OAAM,CAACO,MAAM,UAAUX,QAASA,IAAMR,GAAY,IAAQ,WAMjElB,EAAAA,cAAA,MAAIsC,MAAO,CAAEC,UAAW,SAAU,4BAClCvC,EAAAA,cAAC4B,EAAAA,qBAAoB,CAACC,YAAahB,EAAS,OAAS,SACnDb,EAAAA,cAAC8B,EAAAA,OAAM,CAACJ,QAASA,IAAMN,GAAY,IAAO,oBAC1CpB,EAAAA,cAACgC,EAAAA,OAAM,CAACjB,KAAMI,EAAUc,QAASA,IAAMb,GAAY,IACjDpB,EAAAA,cAACkC,EAAAA,YAAW,KAAC,aACblC,EAAAA,cAACmC,EAAAA,cAAa,KACZnC,EAAAA,cAAA,QAAMsC,MAAO,CAAEK,QAAS,OAAQC,cAAe,SAAUC,IAAK,SAC5D7C,EAAAA,cAAA,aAAO,iBAELA,EAAAA,cAAA,SAAOE,KAAK,QAAQ4C,YAAY,kBAAkBR,MAAO,CAAEE,MAAO,OAAQO,QAAS,aAErF/C,EAAAA,cAAA,aAAO,QAELA,EAAAA,cAAA,SAAOE,KAAK,OAAO4C,YAAY,WAAWR,MAAO,CAAEE,MAAO,OAAQO,QAAS,eAIjF/C,EAAAA,cAACoC,EAAAA,cAAa,KACZpC,EAAAA,cAAC8B,EAAAA,OAAM,CAACJ,QAASA,IAAMN,GAAY,IAAQ,UAC3CpB,EAAAA,cAAC8B,EAAAA,OAAM,CAACO,MAAM,UAAUX,QAASA,IAAMN,GAAY,IAAQ,kBAMvD,C","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/button/code-block.js","webpack://Layer5/./src/sections/Projects/Sistent/components/dialog/code.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Code from \"../../../../../components/CodeBlock\";\n\nexport const CodeBlock = ({ name, code }) => {\n  const [showCode, setShowCode] = useState(false);\n  const onChange = () => {\n    setShowCode((prev) => !prev);\n  };\n  return (\n    <div className=\"show-code\">\n      <input type=\"checkbox\" name={name} id={name} onChange={onChange} />\n      <label htmlFor={name} className=\"label\">\n        Show Code\n      </label>\n      {showCode && (\n        <Code codeString={code} language=\"javascript\" />\n      )}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  SistentThemeProvider\n} from \"@sistent/sistent\";\n\nimport { SistentLayout } from \"../../sistent-layout\";\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { CodeBlock } from \"../button/code-block\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\nconst dialogCodeExample = `\nconst [open, setOpen] = useState(false);\n\nconst handleOpen = () => setOpen(true);\nconst handleClose = () => setOpen(false);\n\n<Button onClick={handleOpen}>Open Dialog</Button>\n<Dialog open={open} onClose={handleClose}>\n  <DialogTitle>Dialog Title</DialogTitle>\n  <DialogContent>This is a dialog example.</DialogContent>\n  <DialogActions>\n    <Button onClick={handleClose}>Cancel</Button>\n    <Button color=\"primary\" onClick={handleClose}>Confirm</Button>\n  </DialogActions>\n</Dialog>\n`;\n\nconst DialogCode = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n  const [open, setOpen] = useState(false);\n  const [openFull, setOpenFull] = useState(false);\n  const [openForm, setOpenForm] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <SistentLayout title=\"Dialog Code Examples\">\n      <div className=\"content\">\n        <a id=\"Dialog Code\">\n          <h2>Dialog Code Implementation</h2>\n        </a>\n        <p>\n          The code section demonstrates how to use the Dialog component programmatically. We define state variables\n          to control its visibility and bind open/close handlers to button actions. This is the typical pattern when\n          using modal components in React applications.\n        </p>\n\n        <div className=\"filterBtns\">\n          <TabButton\n            title=\"Overview\"\n            className={location.pathname === \"/projects/sistent/components/dialog\" ? \"active\" : \"\"}\n            onClick={() => navigate(\"/projects/sistent/components/dialog\")}\n          />\n          <TabButton\n            title=\"Guidance\"\n            className={location.pathname === \"/projects/sistent/components/dialog/guidance\" ? \"active\" : \"\"}\n            onClick={() => navigate(\"/projects/sistent/components/dialog/guidance\")}\n          />\n          <TabButton\n            title=\"Code\"\n            className={location.pathname === \"/projects/sistent/components/dialog/code\" ? \"active\" : \"\"}\n            onClick={() => navigate(\"/projects/sistent/components/dialog/code\")}\n          />\n        </div>\n\n        <div className=\"main-content\">\n          <p>Here is a live example of the Dialog component in action:</p>\n          <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n            <Button onClick={handleOpen}>Open Dialog</Button>\n            <Dialog open={open} onClose={handleClose}>\n              <DialogTitle>Confirm Action</DialogTitle>\n              <DialogContent>Do you want to proceed with this action?</DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose}>Cancel</Button>\n                <Button color=\"primary\" onClick={handleClose}>Confirm</Button>\n              </DialogActions>\n            </Dialog>\n          </SistentThemeProvider>\n\n          <h3 style={{ marginTop: \"2rem\" }}>Code Snippet</h3>\n          <CodeBlock name=\"dialog-basic\" code={dialogCodeExample} />\n\n          {/* Full Screen Dialog */}\n          <h3 style={{ marginTop: \"3rem\" }}>Full-Screen Dialog Example</h3>\n          <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n            <Button onClick={() => setOpenFull(true)}>Open Full-Screen Dialog</Button>\n            <Dialog\n              open={openFull}\n              onClose={() => setOpenFull(false)}\n              style={{ width: \"100%\", height: \"100vh\", maxWidth: \"none\" }}\n            >\n              <DialogTitle>Full-Screen Dialog</DialogTitle>\n              <DialogContent>\n                <p>This dialog stretches to full screen. Use it when the user's full attention is needed.</p>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={() => setOpenFull(false)}>Cancel</Button>\n                <Button color=\"primary\" onClick={() => setOpenFull(false)}>Save</Button>\n              </DialogActions>\n            </Dialog>\n          </SistentThemeProvider>\n\n          {/* Form Inside Dialog */}\n          <h3 style={{ marginTop: \"3rem\" }}>Dialog with Form Example</h3>\n          <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n            <Button onClick={() => setOpenForm(true)}>Open Form Dialog</Button>\n            <Dialog open={openForm} onClose={() => setOpenForm(false)}>\n              <DialogTitle>Subscribe</DialogTitle>\n              <DialogContent>\n                <form style={{ display: \"flex\", flexDirection: \"column\", gap: \"1rem\" }}>\n                  <label>\n                    Email Address:\n                    <input type=\"email\" placeholder=\"you@example.com\" style={{ width: \"100%\", padding: \"0.5rem\" }} />\n                  </label>\n                  <label>\n                    Name:\n                    <input type=\"text\" placeholder=\"John Doe\" style={{ width: \"100%\", padding: \"0.5rem\" }} />\n                  </label>\n                </form>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={() => setOpenForm(false)}>Cancel</Button>\n                <Button color=\"primary\" onClick={() => setOpenForm(false)}>Subscribe</Button>\n              </DialogActions>\n            </Dialog>\n          </SistentThemeProvider>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default DialogCode;\n"],"names":["CodeBlock","_ref","name","code","showCode","setShowCode","useState","React","className","type","id","onChange","prev","htmlFor","Code","codeString","language","DialogCode","location","useLocation","isDark","useStyledDarkMode","open","setOpen","openFull","setOpenFull","openForm","setOpenForm","handleClose","SistentLayout","title","TabButton","pathname","onClick","navigate","SistentThemeProvider","initialMode","Button","handleOpen","Dialog","onClose","DialogTitle","DialogContent","DialogActions","color","style","marginTop","width","height","maxWidth","display","flexDirection","gap","placeholder","padding"],"sourceRoot":""}