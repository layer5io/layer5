{"version":3,"file":"component---src-sections-projects-sistent-components-tabs-code-js-9748bf6b4708cabc7b4c.js","mappings":"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","sources":["webpack://Layer5/./node_modules/@mui/icons-material/esm/Favorite.js","webpack://Layer5/./node_modules/@mui/icons-material/esm/Home.js","webpack://Layer5/./node_modules/@mui/icons-material/esm/Person.js","webpack://Layer5/./node_modules/@mui/icons-material/esm/Search.js","webpack://Layer5/./src/sections/Projects/Sistent/components/button/code-block.js","webpack://Layer5/./src/sections/Projects/Sistent/components/tabs/code.js","webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"m12 21.35-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54z\"\n}), 'Favorite');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\"\n}), 'Home');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4\"\n}), 'Person');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","import React, { useState } from \"react\";\nimport Code from \"../../../../../components/CodeBlock\";\n\nexport const CodeBlock = ({ name, code }) => {\n  const [showCode, setShowCode] = useState(false);\n  const onChange = () => {\n    setShowCode((prev) => !prev);\n  };\n  return (\n    <div className=\"show-code\">\n      <input type=\"checkbox\" name={name} id={name} onChange={onChange} />\n      <label htmlFor={name} className=\"label\">\n        Show Code\n      </label>\n      {showCode && (\n        <Code codeString={code} language=\"javascript\" />\n      )}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport { SistentThemeProvider, Tabs, Tab, Box, Typography } from \"@sistent/sistent\";\nimport { CodeBlock } from \"../button/code-block\";\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { SistentLayout } from \"../../sistent-layout\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport PersonIcon from \"@mui/icons-material/Person\";\n\nfunction TabPanel({ children, value, index, ...other }) {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`code-tabpanel-${index}`}\n      aria-labelledby={`code-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nconst codes = {\n  basic: `import { Tabs, Tab, Box, Typography } from \"@sistent/sistent\";\n\nfunction BasicTabs() {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Tabs value={value} onChange={handleChange}>\n        <Tab label=\"Dashboard\" />\n        <Tab label=\"Analytics\" />\n        <Tab label=\"Settings\" />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        Dashboard Content\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        Analytics Content\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        Settings Content\n      </TabPanel>\n    </Box>\n  );\n}`,\n\n  scrollable: `import { Tabs, Tab, Box } from \"@sistent/sistent\";\n\nfunction ScrollableTabs() {\n  const [value, setValue] = useState(0);\n\n  return (\n    <Box sx={{ maxWidth: 400 }}>\n      <Tabs \n        value={value} \n        onChange={(e, newValue) => setValue(newValue)}\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n      >\n        <Tab label=\"Overview\" />\n        <Tab label=\"Performance\" />\n        <Tab label=\"Security\" />\n        <Tab label=\"Integrations\" />\n        <Tab label=\"Billing\" />\n        <Tab label=\"Team\" />\n      </Tabs>\n    </Box>\n  );\n}`,\n\n  fullWidth: `import { Tabs, Tab, Box } from \"@sistent/sistent\";\n\nfunction FullWidthTabs() {\n  const [value, setValue] = useState(0);\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Tabs \n        value={value} \n        onChange={(e, newValue) => setValue(newValue)}\n        variant=\"fullWidth\"\n      >\n        <Tab label=\"Profile\" />\n        <Tab label=\"Account\" />\n        <Tab label=\"Preferences\" />\n      </Tabs>\n    </Box>\n  );\n}`,\n\n  vertical: `import { Tabs, Tab, Box } from \"@sistent/sistent\";\n\nfunction VerticalTabs() {\n  const [value, setValue] = useState(0);\n\n  return (\n    <Box sx={{ \n      flexGrow: 1, \n      bgcolor: 'background.paper', \n      display: 'flex', \n      height: 300 \n    }}>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={(e, newValue) => setValue(newValue)}\n        sx={{ borderRight: 1, borderColor: 'divider' }}\n      >\n        <Tab label=\"General\" />\n        <Tab label=\"Privacy\" />\n        <Tab label=\"Security\" />\n        <Tab label=\"Notifications\" />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        General Settings\n      </TabPanel>\n    </Box>\n  );\n}`,\n\n  icon: `import { Tabs, Tab, Box } from \"@sistent/sistent\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport PersonIcon from \"@mui/icons-material/Person\";\n\nfunction IconTabs() {\n  const [value, setValue] = useState(0);\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Tabs value={value} onChange={(e, newValue) => setValue(newValue)}>\n        <Tab icon={<HomeIcon />} label=\"Home\" />\n        <Tab icon={<SearchIcon />} label=\"Search\" />\n        <Tab icon={<FavoriteIcon />} label=\"Favorites\" />\n        <Tab icon={<PersonIcon />} label=\"Profile\" />\n      </Tabs>\n    </Box>\n  );\n}`,\n\n  disabled: `import { Tabs, Tab } from \"@sistent/sistent\";\n\nfunction DisabledTabs() {\n  const [value, setValue] = useState(0);\n\n  return (\n    <Tabs value={value} onChange={(e, newValue) => setValue(newValue)}>\n      <Tab label=\"Basic Plan\" />\n      <Tab label=\"Pro Features\" disabled />\n      <Tab label=\"Enterprise\" disabled />\n      <Tab label=\"Support\" />\n    </Tabs>\n  );\n}`,\n\n  colors: `import { Tabs, Tab, Box } from \"@sistent/sistent\";\n\nfunction ColoredTabs() {\n  const [value, setValue] = useState(0);\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Tabs \n        value={value} \n        onChange={(e, newValue) => setValue(newValue)}\n        indicatorColor=\"secondary\"\n        textColor=\"secondary\"\n        sx={{\n          '& .MuiTab-root': {\n            color: '#1976d2', // Custom blue color\n          },\n          '& .Mui-selected': {\n            color: '#d81b60', // Custom pink color for selected\n          },\n          '& .MuiTabs-indicator': {\n            backgroundColor: '#d81b60', // Pink indicator\n          }\n        }}\n      >\n        <Tab label=\"Home\" />\n        <Tab label=\"Profile\" />\n        <Tab label=\"Settings\" />\n      </Tabs>\n    </Box>\n  );\n}`,\n\n  controlled: `import { Tabs, Tab, Box, Button } from \"@sistent/sistent\";\n\nfunction ControlledTabs() {\n  const [value, setValue] = useState(0);\n\n  const handleNext = () => {\n    setValue((prev) => (prev + 1) % 3);\n  };\n\n  return (\n    <Box>\n      <Tabs value={value} onChange={(e, newValue) => setValue(newValue)}>\n        <Tab label=\"Step 1\" />\n        <Tab label=\"Step 2\" />\n        <Tab label=\"Step 3\" />\n      </Tabs>\n      <Box sx={{ mt: 2 }}>\n        <Button onClick={handleNext}>Next Step</Button>\n      </Box>\n    </Box>\n  );\n}`,\n\n  wrapped: `import { Tabs, Tab, Box } from \"@sistent/sistent\";\n\nfunction WrappedLabelTabs() {\n  const [value, setValue] = useState(0);\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Tabs \n        value={value} \n        onChange={(e, newValue) => setValue(newValue)}\n        sx={{\n          '& .MuiTab-root': {\n            minHeight: 72,\n            alignItems: 'center',\n            whiteSpace: 'normal',\n            textAlign: 'center'\n          }\n        }}\n      >\n        <Tab label=\"User Management and Permissions\" />\n        <Tab label=\"Data Analytics and Reporting\" />\n        <Tab label=\"System Configuration\" />\n      </Tabs>\n    </Box>\n  );\n}`\n};\n\nconst SistentTabsCode = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n\n  // State for different tab examples\n  const [basicValue, setBasicValue] = useState(0);\n  const [scrollableValue, setScrollableValue] = useState(0);\n  const [fullWidthValue, setFullWidthValue] = useState(0);\n  const [verticalValue, setVerticalValue] = useState(0);\n  const [iconValue, setIconValue] = useState(0);\n  const [disabledValue, setDisabledValue] = useState(0);\n  const [colorValue, setColorValue] = useState(0);\n  const [controlledValue, setControlledValue] = useState(0);\n  const [wrappedValue, setWrappedValue] = useState(0);\n\n  const handleControlledNext = () => {\n    setControlledValue((prev) => (prev + 1) % 3);\n  };\n\n  return (\n    <SistentLayout title=\"Tabs\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Tabs</h2>\n        </a>\n        <p>\n          Here are code examples for all different variations and props of the Tabs component.\n          Each example shows the implementation with a live preview and copyable code.\n        </p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/tabs\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/tabs\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/tabs/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/tabs/guidance\")}\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/tabs/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/tabs/code\")}\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n\n          <a id=\"Basic Tabs\">\n            <h2>Basic Tabs</h2>\n          </a>\n          <p>\n            Standard horizontal tabs with controlled state and content panels.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box sx={{ width: \"100%\", maxWidth: 500 }}>\n                  <Tabs value={basicValue} onChange={(e, newValue) => setBasicValue(newValue)}>\n                    <Tab label=\"Dashboard\" />\n                    <Tab label=\"Analytics\" />\n                    <Tab label=\"Settings\" />\n                  </Tabs>\n                  <TabPanel value={basicValue} index={0}>\n                    Dashboard Content\n                  </TabPanel>\n                  <TabPanel value={basicValue} index={1}>\n                    Analytics Content\n                  </TabPanel>\n                  <TabPanel value={basicValue} index={2}>\n                    Settings Content\n                  </TabPanel>\n                </Box>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"basic-tabs\" code={codes.basic} />\n          </div>\n\n          <a id=\"Scrollable Tabs\">\n            <h2>Scrollable Tabs</h2>\n          </a>\n          <p>\n            Tabs that can scroll horizontally when content overflows the container width.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box sx={{ maxWidth: 400 }}>\n                  <Tabs\n                    value={scrollableValue}\n                    onChange={(e, newValue) => setScrollableValue(newValue)}\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                  >\n                    <Tab label=\"Overview\" />\n                    <Tab label=\"Performance\" />\n                    <Tab label=\"Security\" />\n                    <Tab label=\"Integrations\" />\n                    <Tab label=\"Billing\" />\n                    <Tab label=\"Team\" />\n                  </Tabs>\n                </Box>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"scrollable-tabs\" code={codes.scrollable} />\n          </div>\n\n          <a id=\"Full Width Tabs\">\n            <h2>Full Width Tabs</h2>\n          </a>\n          <p>\n            Tabs that expand to fill the entire width of their container.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box sx={{ width: \"100%\", maxWidth: 600 }}>\n                  <Tabs\n                    value={fullWidthValue}\n                    onChange={(e, newValue) => setFullWidthValue(newValue)}\n                    variant=\"fullWidth\"\n                  >\n                    <Tab label=\"Profile\" />\n                    <Tab label=\"Account\" />\n                    <Tab label=\"Preferences\" />\n                  </Tabs>\n                </Box>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"fullwidth-tabs\" code={codes.fullWidth} />\n          </div>\n\n          <a id=\"Vertical Tabs\">\n            <h2>Vertical Tabs</h2>\n          </a>\n          <p>\n            Tabs arranged vertically, perfect for sidebar navigation.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box sx={{\n                  flexGrow: 1,\n                  bgcolor: \"background.paper\",\n                  display: \"flex\",\n                  height: 250,\n                  border: 1,\n                  borderColor: \"divider\",\n                  borderRadius: 1\n                }}>\n                  <Tabs\n                    orientation=\"vertical\"\n                    variant=\"scrollable\"\n                    value={verticalValue}\n                    onChange={(e, newValue) => setVerticalValue(newValue)}\n                    sx={{ borderRight: 1, borderColor: \"divider\", minWidth: 140 }}\n                  >\n                    <Tab label=\"General\" />\n                    <Tab label=\"Privacy\" />\n                    <Tab label=\"Security\" />\n                    <Tab label=\"Notifications\" />\n                  </Tabs>\n                  <TabPanel value={verticalValue} index={0}>General Settings</TabPanel>\n                  <TabPanel value={verticalValue} index={1}>Privacy Settings</TabPanel>\n                  <TabPanel value={verticalValue} index={2}>Security Settings</TabPanel>\n                  <TabPanel value={verticalValue} index={3}>Notification Settings</TabPanel>\n                </Box>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"vertical-tabs\" code={codes.vertical} />\n          </div>\n\n          <a id=\"Icon Tabs\">\n            <h2>Icon Tabs</h2>\n          </a>\n          <p>\n            Tabs enhanced with icons for better visual context and usability.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box sx={{ width: \"100%\", maxWidth: 500 }}>\n                  <Tabs value={iconValue} onChange={(e, newValue) => setIconValue(newValue)}>\n                    <Tab icon={<HomeIcon />} label=\"Home\" />\n                    <Tab icon={<SearchIcon />} label=\"Search\" />\n                    <Tab icon={<FavoriteIcon />} label=\"Favorites\" />\n                    <Tab icon={<PersonIcon />} label=\"Profile\" />\n                  </Tabs>\n                  <TabPanel value={iconValue} index={0}>\n                    Home Content\n                  </TabPanel>\n                  <TabPanel value={iconValue} index={1}>\n                    Search Content\n                  </TabPanel>\n                  <TabPanel value={iconValue} index={2}>\n                    Favorites Content\n                  </TabPanel>\n                  <TabPanel value={iconValue} index={3}>\n                    Profile Content\n                  </TabPanel>\n                </Box>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"icon-tabs\" code={codes.icon} />\n          </div>\n\n          <a id=\"Disabled Tabs\">\n            <h2>Disabled Tabs</h2>\n          </a>\n          <p>\n            Individual tabs can be disabled to indicate unavailable functionality.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Tabs value={disabledValue} onChange={(e, newValue) => setDisabledValue(newValue)}>\n                  <Tab label=\"Basic Plan\" />\n                  <Tab label=\"Pro Features\" disabled />\n                  <Tab label=\"Enterprise\" disabled />\n                  <Tab label=\"Support\" />\n                </Tabs>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"disabled-tabs\" code={codes.disabled} />\n          </div>\n\n          <a id=\"Colored Tabs\">\n            <h2>Colored Tabs</h2>\n          </a>\n          <p>\n            Customize the indicator and text colors to match your design system.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box sx={{ width: \"100%\", maxWidth: 500 }}>\n                  <Tabs\n                    value={colorValue}\n                    onChange={(e, newValue) => setColorValue(newValue)}\n                    indicatorColor=\"secondary\"\n                    textColor=\"secondary\"\n                    sx={{\n                      \"& .MuiTab-root\": {\n                        color: isDark ? \"#90caf9\" : \"#1976d2\",\n                      },\n                      \"& .Mui-selected\": {\n                        color: isDark ? \"#f48fb1\" : \"#d81b60\",\n                      },\n                      \"& .MuiTabs-indicator\": {\n                        backgroundColor: isDark ? \"#f48fb1\" : \"#d81b60\",\n                      }\n                    }}\n                  >\n                    <Tab label=\"Home\" />\n                    <Tab label=\"Profile\" />\n                    <Tab label=\"Settings\" />\n                  </Tabs>\n                  <TabPanel value={colorValue} index={0}>\n                    Home Content with Custom Colors\n                  </TabPanel>\n                  <TabPanel value={colorValue} index={1}>\n                    Profile Content with Custom Colors\n                  </TabPanel>\n                  <TabPanel value={colorValue} index={2}>\n                    Settings Content with Custom Colors\n                  </TabPanel>\n                </Box>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"colored-tabs\" code={codes.colors} />\n          </div>\n\n          <a id=\"Controlled Tabs\">\n            <h2>Controlled Tabs with External Controls</h2>\n          </a>\n          <p>\n            Programmatically control which tab is active using external buttons or logic.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box>\n                  <Tabs value={controlledValue} onChange={(e, newValue) => setControlledValue(newValue)}>\n                    <Tab label=\"Step 1\" />\n                    <Tab label=\"Step 2\" />\n                    <Tab label=\"Step 3\" />\n                  </Tabs>\n                  <Box sx={{ mt: 2 }}>\n                    <TabButton\n                      onClick={handleControlledNext}\n                    >\n                      Next Step\n                    </TabButton>\n                  </Box>\n                  <TabPanel value={controlledValue} index={0}>\n                    Step 1 Content\n                  </TabPanel>\n                  <TabPanel value={controlledValue} index={1}>\n                    Step 2 Content\n                  </TabPanel>\n                  <TabPanel value={controlledValue} index={2}>\n                    Step 3 Content\n                  </TabPanel>\n                </Box>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"controlled-tabs\" code={codes.controlled} />\n          </div>\n\n          <a id=\"Wrapped Labels Tabs\">\n            <h2>Wrapped Labels Tabs</h2>\n          </a>\n          <p>\n            Tabs with longer labels that can wrap to multiple lines when needed.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box sx={{ width: \"100%\", maxWidth: 500 }}>\n                  <Tabs\n                    value={wrappedValue}\n                    onChange={(e, newValue) => setWrappedValue(newValue)}\n                    sx={{\n                      \"& .MuiTab-root\": {\n                        minHeight: 72,\n                        alignItems: \"center\",\n                        whiteSpace: \"normal\",\n                        textAlign: \"center\"\n                      }\n                    }}\n                  >\n                    <Tab label=\"User Management and Permissions\" />\n                    <Tab label=\"Data Analytics and Reporting\" />\n                    <Tab label=\"System Configuration\" />\n                  </Tabs>\n                  <TabPanel value={wrappedValue} index={0}>\n                    User Management Content\n                  </TabPanel>\n                  <TabPanel value={wrappedValue} index={1}>\n                    Analytics Content\n                  </TabPanel>\n                  <TabPanel value={wrappedValue} index={2}>\n                    Configuration Content\n                  </TabPanel>\n                </Box>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"wrapped-tabs\" code={codes.wrapped} />\n          </div>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default SistentTabsCode;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n"],"names":["d","CodeBlock","_ref","name","code","showCode","setShowCode","useState","React","className","type","id","onChange","prev","htmlFor","Code","codeString","language","TabPanel","children","value","index","other","_objectWithoutProperties","_excluded","Object","assign","role","hidden","Box","sx","p","Typography","codes","basic","scrollable","fullWidth","vertical","icon","disabled","colors","controlled","wrapped","SistentTabsCode","location","useLocation","isDark","useStyledDarkMode","basicValue","setBasicValue","scrollableValue","setScrollableValue","fullWidthValue","setFullWidthValue","verticalValue","setVerticalValue","iconValue","setIconValue","disabledValue","setDisabledValue","colorValue","setColorValue","controlledValue","setControlledValue","wrappedValue","setWrappedValue","SistentLayout","title","TabButton","pathname","onClick","navigate","SistentThemeProvider","initialMode","width","maxWidth","Tabs","e","newValue","Tab","label","variant","scrollButtons","flexGrow","bgcolor","display","height","border","borderColor","borderRadius","orientation","borderRight","minWidth","HomeIcon","SearchIcon","FavoriteIcon","PersonIcon","indicatorColor","textColor","color","backgroundColor","mt","handleControlledNext","minHeight","alignItems","whiteSpace","textAlign","JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","contents","setContents","useEffect","anchors","document","querySelectorAll","console","log","Array","from","map","a","link","text","intapath","setIntapath","path","window","x","key","Link","to","activeClassName","SistentWrapper","TOC","Container","SistentPagination","IntraPage"],"sourceRoot":""}