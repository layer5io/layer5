{"version":3,"file":"component---src-sections-projects-sistent-components-tooltip-guidance-js-12d48b1549884113c954.js","mappings":"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","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/tooltip/guidance.js"],"sourcesContent":["import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport { SistentLayout } from \"../../sistent-layout\";\nimport {\n  SistentThemeProvider,\n  Button,\n  Typography,\n  CustomTooltip,\n  Grid,\n} from \"@sistent/sistent\";\nimport { Row } from \"../../../../../reusecore/Layout\";\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\nconst TooltipGuidance = () => {\n  const { isDark } = useStyledDarkMode();\n  const location = useLocation();\n\n  return (\n    <SistentLayout title=\"Tooltip\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Tooltip</h2>\n        </a>\n        <p>\n          The Tooltip component displays informative text when users hover over,\n          focus on, or tap an element. Tooltips are designed to enhance\n          accessibility and user understanding of interface elements.\n        </p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/tooltip\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/tooltip\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/tooltip/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/tooltip/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/tooltip/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/tooltip/code\")\n            }\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <p>\n            The Tooltip component displays informative text when users hover\n            over, focus on, or tap an element. Tooltips are designed to enhance\n            accessibility and user understanding of interface elements.\n          </p>\n\n          <a id=\"Positioning\">\n            <h2>Positioning</h2>\n          </a>\n          <p>\n            The positioning of the Tooltip is critical for usability. Use the\n            `placement` prop to control where the Tooltip appears relative to\n            its anchor element. Options include:\n          </p>\n          <ul>\n            <li>top</li>\n            <li>bottom</li>\n            <li>left</li>\n            <li>right</li>\n            <li>top-start</li>\n            <li>top-end</li>\n            <li>bottom-start</li>\n            <li>bottom-end</li>\n            <li>left-start</li>\n            <li>left-end</li>\n            <li>right-start</li>\n            <li>right-end</li>\n          </ul>\n          <p>\n            Choosing the right position helps to prevent overlap with other\n            interface elements and improves readability.\n          </p>\n\n          <a id=\"Styling\">\n            <h2>Styling</h2>\n          </a>\n          <p>\n            The Tooltip component inherits styles from the Sistent theme. You\n            can customize the appearance by applying styles to the content\n            inside the Tooltip. For instance:\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <CustomTooltip\n                title={<Typography color=\"GrayText\">Custom Tooltip</Typography>}\n              >\n                <span>\n                  <Button variant=\"text\" label=\"Button\" size=\"medium\" />\n                </span>\n              </CustomTooltip>\n            </SistentThemeProvider>\n          </Row>\n\n          <h3>HTML Support</h3>\n          <p>\n            The Tooltip component supports HTML content, allowing you to include\n            rich text, links, and other elements inside the tooltip. By passing\n            HTML content as the title prop, you can create more engaging and\n            informative tooltips.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <CustomTooltip\n                title={\n                  <React.Fragment>\n                    <Typography color=\"inherit\">\n                      Tooltip with HTML Support\n                    </Typography>\n                    <em>{\"And here's\"}</em> <b>{\"some\"}</b>{\" \"}\n                    <a href=\"#\">{\"amazing content\"}</a>. {\"It's very engaging. Right?\"}\n                  </React.Fragment>\n                }\n              >\n                <span>\n                  <Button variant=\"text\" label=\"Customize\" size=\"medium\" />\n                </span>\n              </CustomTooltip>\n            </SistentThemeProvider>\n          </Row>\n\n          <h3>Markdown Support</h3>\n          <p>\n            The Tooltip component supports Markdown content, allowing you to\n            include rich text, links, and other elements inside the tooltip. By\n            passing Markdown content as the title prop, you can create more\n            engaging and informative tooltips.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <CustomTooltip\n                title={`### Tooltip with Markdown \n*And here's* **some** [amazing content](#) \nIt's very engaging. Right?`}\n              >\n                <span>\n                  <Button variant=\"text\" label=\"Customize\" size=\"medium\" />\n                </span>\n              </CustomTooltip>\n            </SistentThemeProvider>\n          </Row>\n\n          <h2>Triggers</h2>\n          <p>\n            The Tooltip component can be triggered by various user actions,\n            including hover, focus, and click. By default, the Tooltip appears\n            when the user hovers over the anchor element. You can customize the\n            trigger behavior using the following props:\n          </p>\n          <ul>\n            <li>\n              <code>disableHoverListener</code>: Disables the hover trigger.\n            </li>\n            <li>\n              <code>disableFocusListener</code>: Disables the focus trigger.\n            </li>\n            <li>\n              <code>disableTouchListener</code>: Disables the touch trigger.\n            </li>\n          </ul>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Grid container sx={{ justifyContent: \"space-evenly\" }}>\n                <Grid item>\n                  <CustomTooltip disableFocusListener title=\"Add\">\n                    <span>\n                      <Button variant=\"contained\" size=\"medium\">\n                        Hover or touch\n                      </Button>\n                    </span>\n                  </CustomTooltip>\n                </Grid>\n                <Grid item>\n                  <CustomTooltip disableHoverListener title=\"Add\">\n                    <span>\n                      <Button variant=\"contained\" size=\"medium\">\n                        Focus or touch\n                      </Button>\n                    </span>\n                  </CustomTooltip>\n                </Grid>\n                <Grid item>\n                  <CustomTooltip disableTouchListener title=\"Add\">\n                    <span>\n                      <Button variant=\"contained\" size=\"medium\">\n                        Hover or Focus\n                      </Button>\n                    </span>\n                  </CustomTooltip>\n                </Grid>\n              </Grid>\n            </SistentThemeProvider>\n          </Row>\n\n          <a id=\"Accessibility\">\n            <h2>Accessibility</h2>\n          </a>\n          <p>\n            It’s important to ensure that the Tooltip component is accessible to\n            all users. Here are some key considerations:\n          </p>\n          <ul>\n            <li>\n              By default, tooltips are designed to label their child element\n              rather than describe it. This differs from the <code>title</code>{\" \"}\n              attribute, which can either label or describe the child element\n              based on whether it already has an accessible label.\n            </li>\n            <li>\n              Using <code>describeChild</code> : When you want the tooltip to\n              act as an accessible description (adding additional context), you\n              can enable the describeChild prop. Use describeChild only if the\n              tooltip provides supplementary information and the child element\n              already has an accessible label.\n            </li>\n            <li>\n              Avoiding Accessibility Violations: Do not use describeChild if the\n              tooltip is the only visible label for the child element, as this\n              would prevent the child from having an accessible name.\n            </li>\n          </ul>\n\n          <a id=\"Performance\">\n            <h2>Performance Tips</h2>\n          </a>\n          <p>\n            When using the Tooltip component, consider the following to optimize\n            performance:\n          </p>\n          <ul>\n            <li>\n              Use the `placement` prop to control the position of the Tooltip\n              and prevent overlap with other interface elements.\n            </li>\n            <li>\n              Ensure that the Tooltip is keyboard navigable, allowing users to\n              open/close it using keyboard shortcuts.\n            </li>\n          </ul>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default TooltipGuidance;\n"],"names":["TooltipGuidance","isDark","useStyledDarkMode","location","useLocation","React","SistentLayout","title","className","id","TabButton","pathname","onClick","navigate","Row","$Hcenter","SistentThemeProvider","initialMode","CustomTooltip","Typography","color","Button","variant","label","size","href","Grid","container","sx","justifyContent","item","disableFocusListener","disableHoverListener","disableTouchListener"],"sourceRoot":""}