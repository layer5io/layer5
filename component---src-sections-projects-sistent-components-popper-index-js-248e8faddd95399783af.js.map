{"version":3,"file":"component---src-sections-projects-sistent-components-popper-index-js-248e8faddd95399783af.js","mappings":"yMA8IA,UArIsBA,KACpB,MAAMC,GAAWC,EAAAA,EAAAA,gBACX,OAAEC,IAAWC,EAAAA,EAAAA,MAEb,EAACC,EAAS,EAACC,IAAeC,EAAAA,EAAAA,UAAS,OACnC,EAACC,EAAU,EAACC,IAAgBF,EAAAA,EAAAA,UAAS,WACrC,EAACG,EAAK,EAACC,IAAWJ,EAAAA,EAAAA,WAAS,GAE3BK,EAAeC,GAAkBC,IACrCR,EAAYQ,EAAMC,eAClBJ,GAASK,GAASR,IAAcK,IAAiBG,IACjDP,EAAaI,EAAa,EAG5B,OACEI,EAAAA,cAACC,EAAAA,EAAa,CAACC,MAAM,UACnBF,EAAAA,cAAA,OAAKG,UAAU,WACbH,EAAAA,cAAA,KAAGI,GAAG,YACJJ,EAAAA,cAAA,UAAI,WAENA,EAAAA,cAAA,SAAG,kRAMHA,EAAAA,cAAA,OAAKG,UAAU,cACbH,EAAAA,cAACK,EAAAA,QAAS,CACRF,UACwB,wCAAtBnB,EAASsB,SACL,SACA,GAENC,QAASA,KAAMC,EAAAA,EAAAA,UAAS,uCACxBN,MAAM,aAERF,EAAAA,cAACK,EAAAA,QAAS,CACRF,UAEE,iDADAnB,EAASsB,SAEL,SACA,GAENC,QAASA,KACPC,EAAAA,EAAAA,UAAS,gDAEXN,MAAM,aAERF,EAAAA,cAACK,EAAAA,QAAS,CACRF,UACwB,6CAAtBnB,EAASsB,SACL,SACA,GAENC,QAASA,KAAMC,EAAAA,EAAAA,UAAS,4CACxBN,MAAM,UAGVF,EAAAA,cAAA,OAAKG,UAAU,gBACbH,EAAAA,cAAA,SAAG,+QAMHA,EAAAA,cAAA,KAAGI,GAAG,SACJJ,EAAAA,cAAA,UAAI,UAENA,EAAAA,cAAA,SAAG,6HAIHA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,0DACJA,EAAAA,cAAA,UAAI,gDACJA,EAAAA,cAAA,UAAI,oDAENA,EAAAA,cAAA,KAAGI,GAAG,iBACJJ,EAAAA,cAAA,UAAI,kBAENA,EAAAA,cAAA,SAAG,yGAIHA,EAAAA,cAACS,EAAAA,qBAAoB,CAACC,YAAaxB,EAAS,OAAS,SACnDc,EAAAA,cAACW,EAAAA,OAAM,CAAClB,KAAMA,EAAML,SAAUA,EAAUG,UAAWA,GACjDS,EAAAA,cAACY,EAAAA,IAAG,CAACC,GAAI,CAAEC,OAAQ,EAAGC,EAAG,EAAGC,QAAS,qBAAsB,gCAK/DhB,EAAAA,cAACiB,EAAAA,GAAG,CAACC,UAAQ,EAACf,UAAU,mBACtBH,EAAAA,cAACS,EAAAA,qBAAoB,CAACC,YAAaxB,EAAS,OAAS,SACnDc,EAAAA,cAACmB,EAAAA,OAAM,CACLC,QAAQ,YACRC,MAAM,gBACNC,KAAK,SACLf,QAASZ,EAAY,cAI3BK,EAAAA,cAAA,SAAG,4HAIHA,EAAAA,cAAA,KAAGI,GAAG,2BACJJ,EAAAA,cAAA,UAAI,4BAENA,EAAAA,cAAA,SAAG,iJAKHA,EAAAA,cAACiB,EAAAA,GAAG,CAACC,UAAQ,EAACf,UAAU,mBACtBH,EAAAA,cAACS,EAAAA,qBAAoB,CAACC,YAAaxB,EAAS,OAAS,SACnDc,EAAAA,cAACmB,EAAAA,OAAM,CACLC,QAAQ,YACRC,MAAM,gBACNC,KAAK,SACLf,QAASZ,EAAY,aAI3BK,EAAAA,cAAA,SAAG,4HAMO,C,6HCtIpB,MAAMuB,E,SAAuBC,QAAOC,IAAGC,WAAA,CAAAC,YAAA,mCAAAC,YAAA,eAAVJ,CAAU,mjCAqGvC,MA5CA,WACE,MAAM,EAACK,EAAS,EAACC,IAAexC,EAAAA,EAAAA,UAAS,KAEzCyC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAUC,SAASC,iBAAiB,qBAC1CC,QAAQC,IAAIJ,GACRA,GACFF,EACEO,MAAMC,KAAKN,GAASO,KAAKC,IAAC,CACxBpC,GAAIoC,EAAEpC,GACNqC,KAAM,IAAID,EAAEpC,KACZsC,KAAMF,EAAEpC,OAGd,GACC,IAEH,MAAM,EAACuC,EAAS,EAACC,IAAetD,EAAAA,EAAAA,UAAS,MAMzC,OALAyC,EAAAA,EAAAA,YAAU,KACR,MAAMc,EAAOC,OAAO9D,SAASsB,SAC7BsC,EAAYC,EAAK,GAChB,IAGD7C,EAAAA,cAACuB,EAAoB,KACnBvB,EAAAA,cAAA,OAAKG,UAAU,cACbH,EAAAA,cAAA,UACG6B,EAASU,KAAKQ,GACb/C,EAAAA,cAAA,MAAIgD,IAAKD,EAAE3C,GAAID,UAAU,QACvBH,EAAAA,cAACiD,EAAAA,KAAI,CACHC,GAAI,GAAGP,IAAWI,EAAEN,OACpBO,IAAKD,EAAE3C,GACP+C,gBAAgB,UAEfJ,EAAEL,WAQnB,EChGO,MAAMzC,EAAgBmD,IAA0B,IAAzB,MAAElD,EAAK,SAAEmD,GAAUD,EAC/C,OACEpD,EAAAA,cAACsD,EAAAA,EAAc,KACbtD,EAAAA,cAAA,OAAKG,UAAU,uBACbH,EAAAA,cAAA,UAAKE,IAEPF,EAAAA,cAACuD,EAAAA,EAAG,MACJvD,EAAAA,cAAA,OAAKG,UAAU,gBACbH,EAAAA,cAACwD,EAAAA,GAAS,KACPH,EAAS,IAACrD,EAAAA,cAACyD,EAAAA,EAAiB,OAE/BzD,EAAAA,cAAC0D,EAAS,OAEG,C","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/popper/index.js","webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport { SistentThemeProvider, Popper, Button, Box } from \"@sistent/sistent\";\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { SistentLayout } from \"../../sistent-layout\";\nimport { Row } from \"../../../../../reusecore/Layout\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\nconst SistentPopper = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [placement, setPlacement] = useState(\"bottom\");\n  const [open, setOpen] = useState(false);\n\n  const handleClick = (newPlacement) => (event) => {\n    setAnchorEl(event.currentTarget);\n    setOpen((prev) => placement !== newPlacement || !prev);\n    setPlacement(newPlacement);\n  };\n\n  return (\n    <SistentLayout title=\"Popper\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Popper</h2>\n        </a>\n        <p>\n          The Popper component provides a mechanism for positioning content\n          dynamically relative to a reference element. It is commonly used for\n          tooltips, dropdowns, and modals, enhancing the user experience by\n          presenting contextual information without overcrowding the interface.\n        </p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/popper\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/popper\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/popper/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/popper/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/popper/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/popper/code\")}\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <p>\n            Poppers are critical for displaying information dynamically and can\n            be used in various scenarios like tooltips, dropdowns, and menus. By\n            anchoring the content to a reference element, Poppers provide users\n            with relevant information as they interact with the interface.\n          </p>\n          <a id=\"Usage\">\n            <h2>Usage</h2>\n          </a>\n          <p>\n            The Popper component should be used in cases where context-sensitive\n            information is necessary. Here are common use cases:\n          </p>\n          <ul>\n            <li>Tooltips that provide additional information on hover.</li>\n            <li>Dropdown menus for navigation or selections.</li>\n            <li>Modals for confirmations or additional content.</li>\n          </ul>\n          <a id=\"Basic Example\">\n            <h3>Basic Example</h3>\n          </a>\n          <p>\n            Below is a simple example of how to use the Popper component to\n            display content relative to a button.\n          </p>\n          <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n            <Popper open={open} anchorEl={anchorEl} placement={placement}>\n              <Box sx={{ border: 1, p: 1, bgcolor: \"background.paper\" }}>\n                The content of the Popper.\n              </Box>\n            </Popper>\n          </SistentThemeProvider>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Button\n                variant=\"contained\"\n                label=\"Toggle Popper\"\n                size=\"medium\"\n                onClick={handleClick(\"bottom\")}\n              />\n            </SistentThemeProvider>\n          </Row>\n          <p>\n            The `anchorEl` prop specifies the element to which the Popper will\n            be anchored. The `open` prop controls its visibility.\n          </p>\n          <a id=\"Styling and Positioning\">\n            <h3>Styling and Positioning</h3>\n          </a>\n          <p>\n            You can customize the positioning of the Popper using the\n            `placement` prop to define where the Popper appears relative to the\n            anchor element.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Button\n                variant=\"contained\"\n                label=\"Toggle Popper\"\n                size=\"medium\"\n                onClick={handleClick(\"right\")}\n              />\n            </SistentThemeProvider>\n          </Row>\n          <p>\n            The above example demonstrates a Popper positioned right the\n            reference button, providing flexibility in its placement.\n          </p>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default SistentPopper;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n"],"names":["SistentPopper","location","useLocation","isDark","useStyledDarkMode","anchorEl","setAnchorEl","useState","placement","setPlacement","open","setOpen","handleClick","newPlacement","event","currentTarget","prev","React","SistentLayout","title","className","id","TabButton","pathname","onClick","navigate","SistentThemeProvider","initialMode","Popper","Box","sx","border","p","bgcolor","Row","$Hcenter","Button","variant","label","size","JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","contents","setContents","useEffect","anchors","document","querySelectorAll","console","log","Array","from","map","a","link","text","intapath","setIntapath","path","window","x","key","Link","to","activeClassName","_ref","children","SistentWrapper","TOC","Container","SistentPagination","IntraPage"],"sourceRoot":""}