{"version":3,"file":"component---src-sections-projects-sistent-components-backdrop-code-js-ec66fcaab80f29e57da1.js","mappings":"uMAaA,MAAMA,EAAQ,CACZ,imBA+GF,UAtFqBC,KACnB,MAAMC,GAAWC,EAAAA,EAAAA,gBACX,OAAEC,IAAWC,EAAAA,EAAAA,MAEZC,EAAMC,GAAWC,EAAAA,UAAe,GAIvC,OACEA,EAAAA,cAACC,EAAAA,EAAa,CAACC,MAAM,YACnBF,EAAAA,cAAA,OAAKG,UAAU,WACbH,EAAAA,cAAA,KAAGI,GAAG,YACJJ,EAAAA,cAAA,UAAI,aAENA,EAAAA,cAAA,UACAA,EAAAA,cAAA,OAAKG,UAAU,cACbH,EAAAA,cAACK,EAAAA,QAAS,CACRF,UACwB,0CAAtBT,EAASY,SACL,SACA,GAENC,QAASA,KAAMC,EAAAA,EAAAA,UAAS,yCACxBN,MAAM,aAERF,EAAAA,cAACK,EAAAA,QAAS,CACRF,UAEE,mDADAT,EAASY,SAEL,SACA,GAENC,QAASA,KACPC,EAAAA,EAAAA,UAAS,kDAEXN,MAAM,aAERF,EAAAA,cAACK,EAAAA,QAAS,CACRF,UACwB,+CAAtBT,EAASY,SACL,SACA,GAENC,QAASA,KACPC,EAAAA,EAAAA,UAAS,8CAEXN,MAAM,UAGVF,EAAAA,cAAA,OAAKG,UAAU,gBACbH,EAAAA,cAAA,SAAG,mVAOHA,EAAAA,cAAA,KAAGI,GAAG,YACJJ,EAAAA,cAAA,UAAI,qBAENA,EAAAA,cAAA,OAAKG,UAAU,YACbH,EAAAA,cAAA,OAAKG,UAAU,SACbH,EAAAA,cAACS,EAAAA,qBAAoB,CAACC,YAAad,EAAS,OAAS,SACnDI,EAAAA,cAACW,EAAAA,UAAS,CAACC,SAAS,MAClBZ,EAAAA,cAACa,EAAAA,OAAM,CAACN,QA1DLO,IAAMf,GAAQ,IA0DY,iBAC7BC,EAAAA,cAACe,EAAAA,SAAQ,CACPC,GAAKC,IAAK,CACRC,MAAO,OACPC,OAAQF,EAAME,OAAOC,OAAS,IAEhCtB,KAAMA,EACNS,QAlEEc,IAAMtB,GAAQ,IAoEhBC,EAAAA,cAACsB,EAAAA,iBAAgB,CAACJ,MAAM,gBAKhClB,EAAAA,cAACuB,EAAAA,EAAS,CAACC,KAAK,qBAAqBC,KAAMjC,EAAM,QAIzC,C,iFCtHb,MAAM+B,EAAYG,IAAqB,IAApB,KAAEF,EAAI,KAAEC,GAAMC,EACtC,MAAM,EAACC,EAAS,EAACC,IAAeC,EAAAA,EAAAA,WAAS,GAIzC,OACE7B,EAAAA,cAAA,OAAKG,UAAU,aACbH,EAAAA,cAAA,SAAO8B,KAAK,WAAWN,KAAMA,EAAMpB,GAAIoB,EAAMO,SALhCA,KACfH,GAAaI,IAAUA,GAAK,IAK1BhC,EAAAA,cAAA,SAAOiC,QAAST,EAAMrB,UAAU,SAAQ,aAGvCwB,GACC3B,EAAAA,cAACkC,EAAAA,GAAI,CAACC,WAAYV,EAAMW,SAAS,eAE/B,C","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/backdrop/code.js","webpack://Layer5/./src/sections/Projects/Sistent/components/button/code-block.js"],"sourcesContent":["import { useLocation } from \"@reach/router\";\nimport { navigate } from \"gatsby\";\nimport React from \"react\";\n\nimport { Container, SistentThemeProvider } from \"@sistent/sistent\";\nimport { SistentLayout } from \"../../sistent-layout\";\nimport { CodeBlock } from \"../button/code-block\";\n\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\nimport { Backdrop, Button, CircularProgress } from \"@sistent/sistent\";\n\nconst codes = [\n  `\n  import { Backdrop, Button, CircularProgress } from \"@sistent/sistent\";\n\n  // declare states and functions to handle open and close operation\n\n  /*\n  const [open, setOpen] = React.useState(false);\n  const handleClose = () => setOpen(false);\n  const handleOpen = () => setOpen(true);\n  */\n  <div>\n    <Button onClick={handleOpen}>Show backdrop</Button>\n    <Backdrop\n      sx={(theme) => ({\n        color: \"#fff\",\n        zIndex: theme.zIndex.drawer + 1,\n      })}\n      open={open}\n      onClick={handleClose}\n    >\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n</div>`,\n];\n\nconst BackdropCode = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n\n  const [open, setOpen] = React.useState(false);\n  const handleClose = () => setOpen(false);\n  const handleOpen = () => setOpen(true);\n\n  return (\n    <SistentLayout title=\"Backdrop\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Backdrop</h2>\n        </a>\n        <p></p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/backdrop\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/backdrop\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/backdrop/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/backdrop/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/backdrop/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/backdrop/code\")\n            }\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <p>\n            The Backdrop component overlays a dimmed background across the\n            screen to direct focus to specific content in the foreground, like\n            loading indicators, modals, or dialogs. It visually signals that the\n            background content is temporarily inaccessible. The Backdrop can be\n            closed when clicked, depending on the close action set in its props.\n          </p>\n          <a id=\"Backdrop\">\n            <h2>Backdrop Example</h2>\n          </a>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Container maxWidth=\"sm\">\n                  <Button onClick={handleOpen}>Show backdrop</Button>\n                  <Backdrop\n                    sx={(theme) => ({\n                      color: \"#fff\",\n                      zIndex: theme.zIndex.drawer + 1,\n                    })}\n                    open={open}\n                    onClick={handleClose}\n                  >\n                    <CircularProgress color=\"inherit\" />\n                  </Backdrop>\n                </Container>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"container-fluid-sm\" code={codes[0]} />\n          </div>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default BackdropCode;","import React, { useState } from \"react\";\nimport Code from \"../../../../../components/CodeBlock\";\n\nexport const CodeBlock = ({ name, code }) => {\n  const [showCode, setShowCode] = useState(false);\n  const onChange = () => {\n    setShowCode((prev) => !prev);\n  };\n  return (\n    <div className=\"show-code\">\n      <input type=\"checkbox\" name={name} id={name} onChange={onChange} />\n      <label htmlFor={name} className=\"label\">\n        Show Code\n      </label>\n      {showCode && (\n        <Code codeString={code} language=\"javascript\" />\n      )}\n    </div>\n  );\n};\n"],"names":["codes","BackdropCode","location","useLocation","isDark","useStyledDarkMode","open","setOpen","React","SistentLayout","title","className","id","TabButton","pathname","onClick","navigate","SistentThemeProvider","initialMode","Container","maxWidth","Button","handleOpen","Backdrop","sx","theme","color","zIndex","drawer","handleClose","CircularProgress","CodeBlock","name","code","_ref","showCode","setShowCode","useState","type","onChange","prev","htmlFor","Code","codeString","language"],"sourceRoot":""}