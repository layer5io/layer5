{"version":3,"file":"component---src-sections-projects-sistent-components-modal-guidance-js-9b8266709ca24133ae69.js","mappings":"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","sources":["webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js","webpack://Layer5/./src/sections/Projects/Sistent/components/modal/guidance.js","webpack://Layer5/./node_modules/@mui/icons-material/esm/Info.js","webpack://Layer5/./node_modules/@mui/icons-material/esm/PersonAdd.js","webpack://Layer5/./node_modules/@mui/icons-material/esm/Error.js","webpack://Layer5/./node_modules/@mui/icons-material/esm/CheckCircle.js","webpack://Layer5/./node_modules/@mui/icons-material/esm/Warning.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n","import React, { useState } from \"react\";\nimport { SistentLayout } from \"../../sistent-layout\";\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport {\n  Box,\n  Button,\n  Modal,\n  ModalBody,\n  ModalButtonDanger,\n  ModalButtonPrimary,\n  ModalButtonSecondary,\n  ModalFooter,\n  SistentThemeProvider,\n  TextField,\n  Typography,\n} from \"@sistent/sistent\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\nimport { ActionBox } from \"../../sistent.style\";\nimport WarningIcon from \"@mui/icons-material/Warning\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport ErrorIcon from \"@mui/icons-material/Error\";\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\n\nconst CustomInput = ({ label, placeholder }) => (\n  <Box sx={{ mb: 2 }}>\n    <Typography variant=\"subtitle1\" gutterBottom>\n      {label}\n    </Typography>\n    <TextField label={placeholder} variant=\"outlined\" fullWidth />\n  </Box>\n);\n\nconst ModalGuidance = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n  const [activeModal, setActiveModal] = useState(null);\n  const [nestedModal, setNestedModal] = useState(false);\n\n  return (\n    <SistentLayout title=\"Modal\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Modal</h2>\n        </a>\n        <p>\n          This guide provides comprehensive information on when and how to use different types of modals effectively in your applications.\n        </p>\n\n        <div className=\"filterBtns\">\n          <TabButton\n            className={location.pathname === \"/projects/sistent/components/modal\" ? \"active\" : \"\"}\n            onClick={() => navigate(\"/projects/sistent/components/modal\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={location.pathname === \"/projects/sistent/components/modal/guidance\" ? \"active\" : \"\"}\n            onClick={() => navigate(\"/projects/sistent/components/modal/guidance\")}\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={location.pathname === \"/projects/sistent/components/modal/code\" ? \"active\" : \"\"}\n            onClick={() => navigate(\"/projects/sistent/components/modal/code\")}\n            title=\"Code\"\n          />\n        </div>\n\n        <div className=\"main-content\">\n          <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n\n            <a id=\"basic-modal\">\n              <h2>Basic Modal</h2>\n            </a>\n            <p>Use for simple information display or read-only content. Keep content concise and provide clear dismiss options.</p>\n            <div className=\"showcase\">\n              <div className=\"items\">\n                <Button variant=\"contained\" onClick={() => setActiveModal(\"basic\")}>\n                  Open Basic Modal\n                </Button>\n                <Modal\n                  open={activeModal === \"basic\"}\n                  closeModal={() => setActiveModal(null)}\n                  title=\"Basic Modal\"\n                >\n                  <ModalBody>\n                    <Typography>\n                      This is a basic modal with simple content for displaying information.\n                    </Typography>\n                  </ModalBody>\n                  <ModalFooter variant=\"filled\">\n                    <ActionBox>\n                      <ModalButtonSecondary onClick={() => setActiveModal(null)}>\n                        Close\n                      </ModalButtonSecondary>\n                    </ActionBox>\n                  </ModalFooter>\n                </Modal>\n              </div>\n            </div>\n\n            <a id=\"confirmation-modal\">\n              <h2>Confirmation Modal</h2>\n            </a>\n            <p>Essential for destructive actions. Always use warning icons, specific button labels, and clearly explain consequences.</p>\n            <div className=\"showcase\">\n              <div className=\"items\">\n                <Button variant=\"contained\" color=\"error\" onClick={() => setActiveModal(\"confirmation\")}>\n                  Delete Account\n                </Button>\n                <Modal\n                  open={activeModal === \"confirmation\"}\n                  closeModal={() => setActiveModal(null)}\n                  title=\"Confirm Account Deletion\"\n                >\n                  <ModalBody>\n                    <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\n                      <WarningIcon sx={{ color: \"warning.main\", fontSize: 32 }} />\n                      <Box>\n                        <Typography variant=\"body1\" paragraph>\n                          <strong>This action cannot be undone.</strong> Deleting your account will permanently remove all your data.\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </ModalBody>\n                  <ModalFooter variant=\"filled\">\n                    <ActionBox>\n                      <ModalButtonSecondary onClick={() => setActiveModal(null)}>\n                        Keep Account\n                      </ModalButtonSecondary>\n                      <ModalButtonDanger onClick={() => setActiveModal(null)}>\n                        Delete Account\n                      </ModalButtonDanger>\n                    </ActionBox>\n                  </ModalFooter>\n                </Modal>\n              </div>\n            </div>\n\n            <a id=\"action-modal\">\n              <h2>Action Modal</h2>\n            </a>\n            <p>Perfect for task completion with forms. Use contextual icons and provide clear primary/secondary actions.</p>\n            <div className=\"showcase\">\n              <div className=\"items\">\n                <Button variant=\"contained\" onClick={() => setActiveModal(\"action\")}>\n                  Add New User\n                </Button>\n                <Modal\n                  open={activeModal === \"action\"}\n                  closeModal={() => setActiveModal(null)}\n                  title=\"Add New User\"\n                >\n                  <ModalBody>\n                    <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2, mb: 3 }}>\n                      <PersonAddIcon color=\"primary\" />\n                      <Typography variant=\"body1\">\n                        Create a new user account:\n                      </Typography>\n                    </Box>\n                    <CustomInput label=\"Full Name\" placeholder=\"Enter user's full name\" />\n                    <CustomInput label=\"Email Address\" placeholder=\"Enter email address\" />\n                    <CustomInput label=\"Role\" placeholder=\"Select user role\" />\n                  </ModalBody>\n                  <ModalFooter variant=\"filled\">\n                    <ActionBox>\n                      <ModalButtonSecondary onClick={() => setActiveModal(null)}>\n                        Cancel\n                      </ModalButtonSecondary>\n                      <ModalButtonPrimary onClick={() => setActiveModal(null)}>\n                        Create User\n                      </ModalButtonPrimary>\n                    </ActionBox>\n                  </ModalFooter>\n                </Modal>\n              </div>\n            </div>\n\n            <a id=\"informational-modal\">\n              <h2>Informational Modal</h2>\n            </a>\n            <p>Use for help content and contextual information. Structure content clearly and keep it scannable.</p>\n            <div className=\"showcase\">\n              <div className=\"items\">\n                <Button variant=\"contained\" onClick={() => setActiveModal(\"informational\")}>\n                  View Information\n                </Button>\n                <Modal\n                  open={activeModal === \"informational\"}\n                  closeModal={() => setActiveModal(null)}\n                  title=\"System Information\"\n                >\n                  <ModalBody>\n                    <Box sx={{ display: \"flex\", alignItems: \"flex-start\", gap: 2 }}>\n                      <InfoIcon color=\"info\" />\n                      <Box>\n                        <Typography variant=\"h6\" gutterBottom>\n                          About This Feature\n                        </Typography>\n                        <Typography variant=\"body1\" paragraph>\n                          This feature helps you manage your workflow efficiently with automated tools.\n                        </Typography>\n                        <Typography variant=\"body2\">\n                          Last updated: January 2025 • Version 2.1.0\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </ModalBody>\n                  <ModalFooter variant=\"filled\">\n                    <ActionBox>\n                      <ModalButtonSecondary onClick={() => setActiveModal(null)}>\n                        Got it\n                      </ModalButtonSecondary>\n                    </ActionBox>\n                  </ModalFooter>\n                </Modal>\n              </div>\n            </div>\n\n            <a id=\"warning-modal\">\n              <h2>Warning Modal</h2>\n            </a>\n            <p>Alert users to potential issues before proceeding. Use warning colors and provide helpful context.</p>\n            <div className=\"showcase\">\n              <div className=\"items\">\n                <Button\n                  variant=\"contained\"\n                  sx={{ backgroundColor: \"warning.main\", color: \"white\" }}\n                  onClick={() => setActiveModal(\"warning\")}\n                >\n                  Proceed with Caution\n                </Button>\n                <Modal\n                  open={activeModal === \"warning\"}\n                  closeModal={() => setActiveModal(null)}\n                  title=\"Warning\"\n                >\n                  <ModalBody>\n                    <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\n                      <WarningIcon sx={{ color: \"warning.main\", fontSize: 32 }} />\n                      <Box>\n                        <Typography variant=\"body1\" paragraph>\n                          This action may affect system performance and could take several minutes.\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          Consider performing this during off-peak hours.\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </ModalBody>\n                  <ModalFooter variant=\"filled\">\n                    <ActionBox>\n                      <ModalButtonSecondary onClick={() => setActiveModal(null)}>\n                        Cancel\n                      </ModalButtonSecondary>\n                      <ModalButtonPrimary onClick={() => setActiveModal(null)}>\n                        Continue Anyway\n                      </ModalButtonPrimary>\n                    </ActionBox>\n                  </ModalFooter>\n                </Modal>\n              </div>\n            </div>\n\n            <a id=\"success-modal\">\n              <h2>Success Modal</h2>\n            </a>\n            <p>Celebrate user achievements and provide positive feedback. Include relevant metrics when helpful.</p>\n            <div className=\"showcase\">\n              <div className=\"items\">\n                <Button variant=\"contained\" color=\"success\" onClick={() => setActiveModal(\"success\")}>\n                  Complete Action\n                </Button>\n                <Modal\n                  open={activeModal === \"success\"}\n                  closeModal={() => setActiveModal(null)}\n                  title=\"Success!\"\n                >\n                  <ModalBody>\n                    <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2, textAlign: \"center\" }}>\n                      <CheckCircleIcon color=\"success\" sx={{ fontSize: 48 }} />\n                      <Box>\n                        <Typography variant=\"h6\" gutterBottom>\n                          Operation Completed Successfully\n                        </Typography>\n                        <Typography variant=\"body1\">\n                          Your changes have been saved and are now active.\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </ModalBody>\n                  <ModalFooter variant=\"filled\">\n                    <ActionBox>\n                      <ModalButtonPrimary onClick={() => setActiveModal(null)}>\n                        Continue\n                      </ModalButtonPrimary>\n                    </ActionBox>\n                  </ModalFooter>\n                </Modal>\n              </div>\n            </div>\n\n            <a id=\"error-modal\">\n              <h2>Error Modal</h2>\n            </a>\n            <p>Communicate failures clearly with friendly language. Provide specific solutions and avoid technical jargon.</p>\n            <div className=\"showcase\">\n              <div className=\"items\">\n                <Button variant=\"contained\" color=\"error\" onClick={() => setActiveModal(\"error\")}>\n                  Trigger Error\n                </Button>\n                <Modal\n                  open={activeModal === \"error\"}\n                  closeModal={() => setActiveModal(null)}\n                  title=\"Upload Failed\"\n                >\n                  <ModalBody>\n                    <Box sx={{ display: \"flex\", alignItems: \"flex-start\", gap: 2 }}>\n                      <ErrorIcon color=\"error\" sx={{ fontSize: 32 }} />\n                      <Box>\n                        <Typography variant=\"h6\" gutterBottom>\n                          File Upload Failed\n                        </Typography>\n                        <Typography variant=\"body1\" paragraph>\n                          The file could not be uploaded due to a network connectivity issue.\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          <strong>What you can do:</strong> Check your internet connection and try again.\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </ModalBody>\n                  <ModalFooter variant=\"filled\">\n                    <ActionBox>\n                      <ModalButtonSecondary onClick={() => setActiveModal(null)}>\n                        Cancel\n                      </ModalButtonSecondary>\n                      <ModalButtonPrimary onClick={() => setActiveModal(null)}>\n                        Try Again\n                      </ModalButtonPrimary>\n                    </ActionBox>\n                  </ModalFooter>\n                </Modal>\n              </div>\n            </div>\n\n\n            <a id=\"nested-modal\">\n              <h2>Nested Modal</h2>\n            </a>\n            <p>Use sparingly for multi-step workflows. Maintain clear navigation and ensure users understand the hierarchy.</p>\n            <div className=\"showcase\">\n              <div className=\"items\">\n                <Button variant=\"contained\" onClick={() => setActiveModal(\"nested\")}>\n                  Open Parent Modal\n                </Button>\n                <Modal\n                  open={activeModal === \"nested\"}\n                  closeModal={() => setActiveModal(null)}\n                  title=\"Parent Modal\"\n                >\n                  <ModalBody>\n                    <Typography paragraph>\n                      This is the parent modal. You can open a nested modal from here.\n                    </Typography>\n                    <Button variant=\"outlined\" onClick={() => setNestedModal(true)}>\n                      Open Nested Modal\n                    </Button>\n                  </ModalBody>\n                  <ModalFooter variant=\"filled\">\n                    <ActionBox>\n                      <ModalButtonSecondary onClick={() => setActiveModal(null)}>\n                        Close\n                      </ModalButtonSecondary>\n                    </ActionBox>\n                  </ModalFooter>\n                </Modal>\n\n                <Modal\n                  open={nestedModal}\n                  closeModal={() => setNestedModal(false)}\n                  title=\"Nested Modal\"\n                >\n                  <ModalBody>\n                    <Typography>\n                      This is a nested modal that appears on top of the parent modal.\n                    </Typography>\n                  </ModalBody>\n                  <ModalFooter variant=\"filled\">\n                    <ActionBox>\n                      <ModalButtonSecondary onClick={() => setNestedModal(false)}>\n                        Close Nested\n                      </ModalButtonSecondary>\n                    </ActionBox>\n                  </ModalFooter>\n                </Modal>\n              </div>\n            </div>\n\n          </SistentThemeProvider>\n\n          <a id=\"Usage Guidelines\">\n            <h2>When to Use Modals</h2>\n          </a>\n          <ul>\n            <li><p>Requiring immediate user attention for critical information or decisions</p></li>\n            <li><p>Collecting user input without navigating away from the current context</p></li>\n            <li><p>Confirming destructive or irreversible actions before execution</p></li>\n            <li><p>Displaying detailed information that doesn't warrant a separate page</p></li>\n            <li><p>Presenting workflows that need to maintain the underlying page state</p></li>\n          </ul>\n\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default ModalGuidance;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-6h2zm0-8h-2V7h2z\"\n}), 'Info');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m-9-2V7H4v3H1v2h3v3h2v-3h3v-2zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4\"\n}), 'PersonAdd');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-2h2zm0-4h-2V7h2z\"\n}), 'Error');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckCircle');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M1 21h22L12 2zm12-3h-2v-2h2zm0-4h-2v-4h2z\"\n}), 'Warning');"],"names":["JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","contents","setContents","useState","useEffect","anchors","document","querySelectorAll","console","log","Array","from","map","a","id","link","text","intapath","setIntapath","path","window","location","pathname","React","className","x","key","Link","to","activeClassName","SistentLayout","_ref","title","children","SistentWrapper","TOC","Container","SistentPagination","IntraPage","CustomInput","label","placeholder","Box","sx","mb","Typography","variant","gutterBottom","TextField","fullWidth","ModalGuidance","useLocation","isDark","useStyledDarkMode","activeModal","setActiveModal","nestedModal","setNestedModal","TabButton","onClick","navigate","SistentThemeProvider","initialMode","Button","Modal","open","closeModal","ModalBody","ModalFooter","ActionBox","ModalButtonSecondary","color","display","alignItems","gap","WarningIcon","fontSize","paragraph","ModalButtonDanger","PersonAddIcon","ModalButtonPrimary","InfoIcon","backgroundColor","textAlign","CheckCircleIcon","ErrorIcon","d"],"sourceRoot":""}