"use strict";(self.webpackChunkLayer5=self.webpackChunkLayer5||[]).push([[8447],{491:function(e,t,a){a.r(t);var n=a(96540),i=a(64810),l=a(86462),c=a(66054),s=a(48995),r=a(96044),o=a(92121),m=a(9184);t.default=()=>{const e=(0,l.useLocation)(),{isDark:t}=(0,o.G)();return n.createElement(m.p,{title:"Switch"},n.createElement("div",{className:"content"},n.createElement("a",{id:"Identity"},n.createElement("h2",null,"Switch")),n.createElement("p",null,"The Switch is a toggle component used to instantly turn features on or off. Its binary nature makes it ideal for preferences and settings panels where real-time toggling is expected."),n.createElement("div",{className:"filterBtns"},n.createElement(r.default,{className:"/projects/sistent/components/switch"===e.pathname?"active":"",onClick:()=>(0,i.navigate)("/projects/sistent/components/switch"),title:"Overview"}),n.createElement(r.default,{className:"/projects/sistent/components/switch/guidance"===e.pathname?"active":"",onClick:()=>(0,i.navigate)("/projects/sistent/components/switch/guidance"),title:"Guidance"}),n.createElement(r.default,{className:"/projects/sistent/components/switch/code"===e.pathname?"active":"",onClick:()=>(0,i.navigate)("/projects/sistent/components/switch/code"),title:"Code"})),n.createElement("div",{className:"main-content"},n.createElement("a",{id:"Function"},n.createElement("h2",null,"Function")),n.createElement("h3",null,"State Representation"),n.createElement("p",null,"A Switch reflects its state visually, using a track and thumb indicator. When toggled, the thumb slides across the track to communicate the new value. This feedback is direct and immediate."),n.createElement(c.fI,{$Hcenter:!0,className:"image-container"},n.createElement(s.SistentThemeProvider,{initialMode:t?"dark":"light"},n.createElement(s.Switch,{checked:!0}))),n.createElement("h3",null,"State Variants"),n.createElement("p",null,"A Switch can be active, inactive, or disabled. Use the disabled state to communicate unavailable features or settings that require prerequisites."),n.createElement(c.fI,{$Hcenter:!0,className:"image-container"},n.createElement(s.SistentThemeProvider,{initialMode:t?"dark":"light"},n.createElement(s.Switch,{checked:!1,disabled:!0}))),n.createElement("a",{id:"Labeling"},n.createElement("h2",null,"Labeling")),n.createElement("p",null,"Every Switch should be paired with a visible label. Use ",n.createElement("code",null,"FormControlLabel")," to visually bind labels to toggles for clarity and context."),n.createElement(c.fI,{$Hcenter:!0,className:"image-container"},n.createElement(s.SistentThemeProvider,{initialMode:t?"dark":"light"},n.createElement(s.FormControlLabel,{control:n.createElement(s.Switch,{checked:!0,inputProps:{"aria-label":"Enable dark mode"}}),label:"Enable Dark Mode"}))),n.createElement("h3",null,"Label Placement"),n.createElement("p",null,"Labels can be placed beside the Switch horizontally. For forms or settings pages, maintaining vertical spacing with consistent margins is recommended to improve readability and alignment."),n.createElement("a",{id:"Sizing"},n.createElement("h2",null,"Sizing")),n.createElement("p",null,"The default Switch size is medium, which fits most use cases. Use ",n.createElement("code",null,'size="small"')," when you have limited space or need to place toggles inside compact UI elements like tables, cards, or toolbars."),n.createElement(c.fI,{$Hcenter:!0,className:"image-container"},n.createElement(s.SistentThemeProvider,{initialMode:t?"dark":"light"},n.createElement(s.Switch,{size:"small",checked:!1}))))))}}}]);
//# sourceMappingURL=component---src-sections-projects-sistent-components-switch-guidance-js-ef379ad690c838f0df15.js.map