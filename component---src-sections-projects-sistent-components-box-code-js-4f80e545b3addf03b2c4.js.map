{"version":3,"file":"component---src-sections-projects-sistent-components-box-code-js-4f80e545b3addf03b2c4.js","mappings":"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","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/box/code.js","webpack://Layer5/./src/sections/Projects/Sistent/components/button/code-block.js","webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js"],"sourcesContent":["import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport { SistentThemeProvider, Box } from \"@sistent/sistent\";\nimport { CodeBlock } from \"../button/code-block\";\nimport { SistentLayout } from \"../../sistent-layout\";\n\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\nconst codes = [\n  `<Box sx={{ bgcolor: \"#ffeb3b\", padding: 4, height: \"50vh\" }}>\n    <p>\n      This is a Box component with custom background and padding.\n    </p>\n</Box>`,\n  `<Box\n    sx={{\n      bgcolor: { xs: \"#cfe8fc\", md: \"#ffeb3b\" },\n      padding: { xs: 2, md: 4 },\n      height: \"50vh\",\n    }}\n  >\n    <p style={{ color: \"black\" }}>\n      This Box is responsive, changing style based on screen size.\n    </p>\n</Box>`,\n  `<Box\n    sx={{\n      bgcolor: { xs: \"#cfe8fc\", md: \"#ffeb3b\" },\n      padding: { xs: 2, md: 4 },\n      height: \"50vh\",\n    }}\n    >\n    <p style={{ color: \"black\" }}>\n      This Box is responsive, changing style based on screen size.\n    </p>\n</Box>`,\n  `<Box\n    sx={{\n      bgcolor: \"#cfe8fc\",\n      height: \"50vh\",\n      padding: 4,\n      transition: \"0.3s\",\n      \"&:hover\": {\n        bgcolor: \"#ffeb3b\",\n        cursor: \"pointer\",\n      },\n    }}\n    >\n      <p style={{ color: \"black\" }}>Hover over this Box to see the interactive effect.</p>\n</Box>`,\n];\n\nconst BoxCode = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n\n  return (\n    <SistentLayout title=\"Box\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Box</h2>\n        </a>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/box\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/box\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/box/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/box/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/box/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/box/code\")}\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <p>\n            The <code>Box</code> component is a flexible and foundational\n            container in Sistent, designed to structure and style content. It\n            provides quick access to the theme and CSS utilities, allowing for\n            easy customization and responsive design. Using the sx prop,\n            developers can apply CSS styles directly with theme-aware\n            properties, making Box ideal for layouts, spacing, and other UI\n            adjustments. It can render as any HTML element using the component\n            prop, offering high versatility in both structure and styling.\n          </p>\n          <a id=\"Basic Box\">\n            <h2>Basic Box Example</h2>\n          </a>\n          <p>\n            A simple Box component can be used to contain and structure other\n            elements. Here, the Box serves as a basic container without any\n            styling applied.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box>\n                  <p>This is a basic Box component.</p>\n                </Box>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"box-basic\" code={codes[0]} />\n          </div>\n          <a id=\"Styled Box\">\n            <h2>Styled Box Example</h2>\n          </a>\n          <p>\n            You can add custom styles to a Box component by applying{\" \"}\n            <code>sx</code>\n            properties. In this example, the Box has a background color,\n            padding, and a defined height.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box sx={{ bgcolor: \"#ffeb3b\", padding: 4, height: \"50vh\" }}>\n                  <p style={{ color: \"black\" }}>\n                    This is a Box component with custom background and padding.\n                  </p>\n                </Box>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"box-styled\" code={codes[1]} />\n          </div>\n          <a id=\"Responsive Box\">\n            <h2>Responsive Box Example</h2>\n          </a>\n          <p>\n            The Box component also supports responsive styling using the{\" \"}\n            <code>sx</code> prop. In this example, the Box adjusts its padding\n            and background color based on screen size.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box\n                  sx={{\n                    bgcolor: { xs: \"#cfe8fc\", md: \"#ffeb3b\" },\n                    padding: { xs: 2, md: 4 },\n                    height: \"50vh\",\n                  }}\n                >\n                  <p style={{ color: \"black\" }}>\n                    This Box is responsive, changing style based on screen size.\n                  </p>\n                </Box>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"box-responsive\" code={codes[2]} />\n          </div>\n          <a id=\"Interactive Box\">\n            <h2>Interactive Box Example</h2>\n          </a>\n          <p>\n            Here’s an example where the Box component includes hover effects to\n            create a more interactive experience. This is useful for buttons,\n            cards, and other clickable elements.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box\n                  sx={{\n                    bgcolor: \"#cfe8fc\",\n                    height: \"50vh\",\n                    padding: 4,\n                    transition: \"0.3s\",\n                    \"&:hover\": {\n                      bgcolor: \"#ffeb3b\",\n                      cursor: \"pointer\",\n                    },\n                  }}\n                >\n                  <p style={{ color: \"black\" }}>\n                    Hover over this Box to see the interactive effect.\n                  </p>\n                </Box>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"box-interactive\" code={codes[3]} />\n          </div>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default BoxCode;","import React, { useState } from \"react\";\nimport Code from \"../../../../../components/CodeBlock\";\n\nexport const CodeBlock = ({ name, code }) => {\n  const [showCode, setShowCode] = useState(false);\n  const onChange = () => {\n    setShowCode((prev) => !prev);\n  };\n  return (\n    <div className=\"show-code\">\n      <input type=\"checkbox\" name={name} id={name} onChange={onChange} />\n      <label htmlFor={name} className=\"label\">\n        Show Code\n      </label>\n      {showCode && (\n        <Code codeString={code} language=\"javascript\" />\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n"],"names":["codes","BoxCode","location","useLocation","isDark","useStyledDarkMode","React","SistentLayout","title","className","id","TabButton","pathname","onClick","navigate","SistentThemeProvider","initialMode","Box","CodeBlock","name","code","sx","bgcolor","padding","height","style","color","xs","md","transition","cursor","_ref","showCode","setShowCode","useState","type","onChange","prev","htmlFor","Code","codeString","language","JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","contents","setContents","useEffect","anchors","document","querySelectorAll","console","log","Array","from","map","a","link","text","intapath","setIntapath","path","window","x","key","Link","to","activeClassName","children","SistentWrapper","TOC","Container","SistentPagination","IntraPage"],"sourceRoot":""}