{"componentChunkName":"component---src-templates-program-multiple-js","path":"/programs/lfx.html","result":{"data":{"allMdx":{"nodes":[{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Linux Foundation 2025\",\n  \"thumbnail\": \"./Linux_Foundation_logo.svg\",\n  \"darkthumbnail\": \"./lfx-white.svg\",\n  \"permalink\": \"lfx/2025\",\n  \"program\": \"Linux Foundation\",\n  \"programSlug\": \"lfx\",\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ProgramsWrapper, {\n    mdxType: \"ProgramsWrapper\"\n  }, mdx(LfxLogo, {\n    alt: \"lfx_logo\",\n    className: \"lfx_logo\",\n    mdxType: \"LfxLogo\"\n  }), mdx(\"h3\", null, \"Linux Foundation 2025 Program Timeline\"), mdx(\"div\", null, mdx(\"h4\", null, mdx(\"strong\", null, \"Full-Time Terms:\")), mdx(\"ul\", null, mdx(\"li\", {\n    className: \"lfx-timeline_terms\"\n  }, mdx(\"strong\", null, \"Spring Term: March 3rd - May 30th\")), mdx(\"ul\", null, mdx(\"li\", null, \"mentorships available on LFX Mentorship: Feb 5th, 2025\"), mdx(\"li\", null, \"applications open: Feb 5th - Feb 18th (2 weeks)\"), mdx(\"li\", null, \"application review/admission decisions/HR paperwork: Feb 19th - Feb 25th\"))), mdx(\"ul\", null, mdx(\"li\", {\n    className: \"lfx-timeline_terms\"\n  }, mdx(\"strong\", null, \"Summer Term: June 9th - August 29th\")), mdx(\"ul\", null, mdx(\"li\", null, \"mentorships available on LFX Mentorship: April 16th, 2025\"), mdx(\"li\", null, \"applications open: May 14th - May 27th (2 weeks)\"), mdx(\"li\", null, \"application review/admission decisions/HR paperwork: May 28th - June 3rd\"))), mdx(\"ul\", null, mdx(\"li\", {\n    className: \"lfx-timeline_terms\"\n  }, mdx(\"strong\", null, \"Fall Term: September 8th - Nov 28th\")), mdx(\"ul\", null, mdx(\"li\", null, \"mentorships available on LFX Mentorship: July 2nd, 2025\"), mdx(\"li\", null, \"applications open: July 30th - August 12th (2 weeks)\"), mdx(\"li\", null, \"application review/admission decisions/HR paperwork: August 13th - August 26th\"))), \"Part-time terms will start on the same schedule and last six versus three months.\"), mdx(\"h3\", null, \"About Layer5 and its projects\"), mdx(\"p\", null, \"The Layer5 community embraces developer-defined infrastructure. We empower developers to change how they write applications, support operators in rethinking how they run modern infrastructure, and enable product owners to regain full-control over their product portfolio. Our cloud native application and infrastructure management software enables organizations to expect more from their infrastructure.\"), mdx(\"p\", null, \"Our inclusive and diverse community stewards projects to provide learning environments, create and implement cloud native industry standards, deployment and operational best practices, benchmarks and abstractions, and more. Our pay-it-forward mentality with every contributor (mentee or not) is a shared commitment by all maintainers (and MeshMates - contributor onboarding buddies) to the open source spirit that pushes Layer5 projects like Meshery forward. New members are always welcome.\"), mdx(\"h3\", null, \"About Meshery\"), mdx(\"p\", null, \"Meshery is the open source, service mesh management plane for enabling the adoption, operation, and management of any service mesh and their workloads. There are many service meshes available. Software-defined networking is difficult to understand. Meshery\\u2019s aim is to make the power of the network available to the rest of us.\"), mdx(\"h3\", null, \"About our Community\"), \"Layer5 is all about \", mdx(Link, {\n    to: \"/community\",\n    mdxType: \"Link\"\n  }, \"its community\"), \" of contributors. We have designed an onboarding program customized to \", mdx(Link, {\n    to: \"/community/newcomers\",\n    mdxType: \"Link\"\n  }, \"meet newcomers\"), \" where they\\u2019re at and developed an onboarding buddy program, \", mdx(Link, {\n    to: \"/community/meshmates\",\n    mdxType: \"Link\"\n  }, \"MeshMates\"), \" with individuals dedicated to assisting contributors. The Layer5 community and its open source projects are thriving.\", mdx(\"p\", null, \"Technical writers and other contributors are what comprise Layer5 - an open organization, built by the community for the community. Our vibrant community has seen many talented student contributors go on to secure exciting job opportunities with renowned technology companies such as Red Hat, Microsoft, and VMware, just to name a few. At Layer5, we have high expectations from our interns, and in return, we provide them with incredible opportunities to showcase their work on prestigious stages like DockerCon and KubeCon. We actively promote and uplift our interns, and many of them have gone on to become project maintainers. There are \", mdx(\"a\", {\n    href: \"https://www.linkedin.com/company/layer5\",\n    rel: \"nofollow\"\n  }, \"many\"), \", \", mdx(Link, {\n    to: \"https://layer5.io/blog/category/community\",\n    mdxType: \"Link\"\n  }, \"many examples\"), \" of this on the layer5.io websites.\"), mdx(\"h2\", null, \"LFX Mentorship 2025 Fall Projects\"), mdx(\"br\", null), mdx(\"h3\", null, \"Meshery\"), mdx(\"br\", null), mdx(\"h4\", null, \"Meshery: Solutions architecture for cloud-native deployments\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \": Learning paths with hands-on labs are a crucial resource for DevOps engineers and cloud-native practitioners. The Meshery Playground provides a live cluster environment, making it an ideal platform for learning every kind of cloud and cloud native technology. Meshery Docs is in need of comprehensive tutorials and scenarios covering common infrastructure management use cases. Mission is to create and publish a series of hands-on tutorials using Meshery Playground. Each tutorial will include step-by-step guides, live demonstrations, and interactive labs using the Playground allowing learners to apply their knowledge directly without the hassle of any configuration.These tutorials will be reviewed by various project maintainers and then published in guides/tutorials.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Expected Outcome: \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"10+ new solution architectures (designs) published in Meshery Catalog\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Each design is ideally adjoined with an interactive tutorial (using Meshery Playground), guiding users through infrastructure.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tutorials should vary in complexity, catering to beginners and advanced learners.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended written English, Markdown, Kubernetes, DevOps, and hands-on experience with cloud-native tools\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"\",\n    mdxType: \"Link\"\n  }, \"Rian Cteulp\"), \", \", mdx(Link, {\n    to: \"/community/members/sangram-rath\",\n    mdxType: \"Link\"\n  }, \"Sangram Rath\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Upstream Issue: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/15532\"\n  }, \"https://github.com/meshery/meshery/issues/15532\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/a183c51e-22c6-473b-93f4-6c286993e435\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/a183c51e-22c6-473b-93f4-6c286993e435\"))), mdx(\"h4\", null, \"Meshery: Relationships for AWS services\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \": Meshery Models are declarative representations of infrastructure and applications. Within these models, Relationships define how different Components (e.g., Kubernetes resources, Cloud services) interact and depend on each other. These relationships are crucial for visualizing, understanding, and managing complex cloud native systems.\"), mdx(\"br\", null), \"This internship focuses on significantly expanding the breadth and depth of Meshery Relationships across a wide array of technologies supported by Meshery. As Meshery continues to integrate with more cloud-native technologies (Kubernetes, public clouds, and all CNCF projects), there's a growing need to accurately model the intricate relationships between their components - vital for providing users with comprehensive insights and control over their deployments. - Expected Outcome: - A multitude of new relationships defined both intra and inter AWS services. - Policy Contribution: For advanced interns, there may be opportunities to contribute to the Rego policies that evaluate and enforce these relationships. - Recommended Skills:DevOps, systems administration, solutions architecture. Experience with Kubernetes, AWS and its services. - Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"/community/members/sangram-rath\",\n    mdxType: \"Link\"\n  }, \"Sangram Rath\"), \", \", mdx(Link, {\n    to: \"community/members/mia-grenell\",\n    mdxType: \"Link\"\n  }, \"Mia Grenell\"), \"- Upstream Issue: https://github.com/meshery/meshery/issues/15531 - LFX URL: https://mentorship.lfx.linuxfoundation.org/project/ed9d4af5-823a-4127-afdf-643c2b623f22\", mdx(\"h4\", null, \"Meshery: Relationships for GCP services\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \": Meshery Models are declarative representations of infrastructure and applications. Within these models, Relationships define how different Components (e.g., Kubernetes resources, Cloud services) interact and depend on each other. These relationships are crucial for visualizing, understanding, and managing complex cloud native systems.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Expected Outcome: \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A multitude of new relationships defined both intra and inter GCP services.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Policy Contribution: For advanced interns, there may be opportunities to contribute to the Rego policies that evaluate and enforce these relationships.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills:DevOps, systems administration, solutions architecture. Experience with Kubernetes, GCP and its services.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"\",\n    mdxType: \"Link\"\n  }, \"James Horton\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Upstream Issue: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/15531\"\n  }, \"https://github.com/meshery/meshery/issues/15531\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/ed9d4af5-823a-4127-afdf-643c2b623f22\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/ed9d4af5-823a-4127-afdf-643c2b623f22\"))), mdx(\"h2\", null, \"LFX Mentorship 2025 Spring Projects\"), mdx(\"br\", null), mdx(\"h3\", null, \"Meshery\"), mdx(\"br\", null), mdx(\"h4\", null, \"Meshery Model Support for kro ResourceGraphDefinitions (RGDs)\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \": Enhance Meshery's existing orchestration capabilities to include support for kro ResourceGraphDefinitions (RGDs) as first-class \", mdx(\"a\", {\n    href: \"https://docs.meshery.io/concepts/logical/models\"\n  }, \"Meshery Models\"), \". This involves enabling Meshery to manage and orchestrate RGDs, similar to how it handles other Kubernetes resources. The project will also include generating support for ResourceGraphDefinition in Meshery's Model generator.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Expected Outcome: \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Meshery will be able to orchestrate and manage kro RGDs. This includes the ability to deploy, configure, and manage the lifecycle of RGDs through Meshery.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The Meshery Model generator will be updated to automatically generate models for kro RGDs, simplifying their integration and management within Meshery. This will be an officially supported feature of Meshery.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills:Golang, Cuelang, Well-written and well-spoken English, Kubernetes, DevOps\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"/community/members/mia-grenell\",\n    mdxType: \"Link\"\n  }, \"Mia Grenell\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Upstream Issue: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/13521\"\n  }, \"https://github.com/meshery/meshery/issues/13521\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://crowdfunding.lfx.linuxfoundation.org/projects/2ce4cf0b-05e0-430a-b9e1-3df46d917ef6\"\n  }, \"https://crowdfunding.lfx.linuxfoundation.org/projects/2ce4cf0b-05e0-430a-b9e1-3df46d917ef6\"))), mdx(\"h4\", null, \"Hands-on tutorials using Meshery Playground\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \": Learning paths with hands-on labs are a crucial resource for DevOps engineers and cloud-native practitioners. The Meshery Playground provides a live cluster environment, making it an ideal platform for learning every kind of cloud and cloud native technology. Meshery Docs is in need of comprehensive tutorials and scenarios covering common infrastructure management use cases. Mission is to create and publish a series of hands-on tutorials using Meshery Playground. Each tutorial will include step-by-step guides, live demonstrations, and interactive labs using the Playground allowing learners to apply their knowledge directly without the hassle of any configuration.These tutorials will be reviewed by various project maintainers and then published in \", mdx(\"a\", {\n    href: \"https://docs.meshery.io/guides/tutorials\"\n  }, \"guides/tutorials\"), \".\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Expected Outcome: \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"10+ new tutorials published in Meshery Docs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Each tutorial should be interactive, guiding users through infrastructure.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tutorials should vary in complexity, catering to beginners and advanced learners.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: written English, Markdown, Kubernetes, DevOps, and hands-on experience with cloud-native tools\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"mailto:james.horton2337@gmail.com\",\n    mdxType: \"Link\"\n  }, \"James Hortison\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Upstream Issue:  \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/13521\"\n  }, \"https://github.com/meshery/meshery/issues/13521\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://crowdfunding.lfx.linuxfoundation.org/projects/4cca92b8-ede6-4396-8d3f-68cfa2ec911c\"\n  }, \"https://crowdfunding.lfx.linuxfoundation.org/projects/4cca92b8-ede6-4396-8d3f-68cfa2ec911c\"))), mdx(\"h4\", null, \"Expanding end-to-end test coverage in Meshery using Playwright\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \":  Meshery integrates with many other CNCF projects and technologies. Sustaining those integrations is only possible through automation. To automate functional integration and end-to-end testing, Meshery now uses Playwright as one of the tools for browser testing. End-to-end tests run with each pull request to ensure that changes do not break existing functionality. Expanding the coverage of E2E tests is crucial to improving the reliability of Meshery\\u2019s UI and workflows. This project focuses on writing Playwright-based tests for more Meshery components, ensuring robust test coverage across the platform.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Expected Outcome: Development of comprehensive E2E test cases for additional Meshery components using Playwright.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills:  JavaScript, Playwright, GitHub Workflows, familiarity with React or Nextjs would be helpful, CI/CD\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \",\", mdx(Link, {\n    to: \"/community/members/aabid-sofi\",\n    mdxType: \"Link\"\n  }, \"Aabid Sofi\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Upstream Issue: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/13514\"\n  }, \"https://github.com/meshery/meshery/issues/13514\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://crowdfunding.lfx.linuxfoundation.org/projects/abd10fed-e03f-4425-863e-157accfe354f\"\n  }, \"https://crowdfunding.lfx.linuxfoundation.org/projects/abd10fed-e03f-4425-863e-157accfe354f\"))), mdx(\"h2\", null, \"LFX Mentorship 2025 Summer Projects\"), mdx(\"br\", null), mdx(\"h3\", null, \"Meshery\"), mdx(\"br\", null), mdx(\"h4\", null, \"Model relationships for Azure services\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description:\"), \" Meshery Models are declarative representations of infrastructure and applications. Within these models, Relationships define how different Components (e.g., Kubernetes resources, Cloud services) interact and depend on each other. These relationships are crucial for visualizing, understanding, and managing complex cloud native systems.\"), mdx(\"p\", null, \"This internship focuses on significantly expanding the breadth and depth of Meshery Relationships across a wide array of technologies supported by Meshery. As Meshery continues to integrate with more cloud-native technologies (Kubernetes, public clouds, and all CNCF projects), there's a growing need to accurately model the intricate relationships between their components - vital for providing users with comprehensive insights and control over their deployments.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: DevOps, systems administration, solutions architecture. Experience with Kubernetes, Azure and its services.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Responsibilities:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Research and Analyze Technologies: Dive deep into various cloud-native technologies (e.g., different compute services, databases, messaging systems, network services, etc.) to understand their components and how they interconnect.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Develop Relationship Definitions: Create and contribute relationship definitions, typically in JSON or YAML format, to the Meshery models. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Model Inter-Technology Interactions: Focus particularly on defining relationships between components from different technologies (e.g., how a Kubernetes deployment relates to an AWS RDS instance, or how a Linkerd service interacts with a Prometheus monitoring component).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Document New Relationships: Clearly document the newly defined relationships, their purpose, and how they are represented within Meshery designs, contributing to the official Meshery documentation.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Expected Outcome:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A multitude of new relationships defined both intra and inter Azure services.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Policy Contribution: For advanced interns, there may be opportunities to contribute to the Rego policies that evaluate and enforce these relationships.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"/community/members/sangram-rath\",\n    mdxType: \"Link\"\n  }, \"Sangram Rath\"), \", \", mdx(Link, {\n    to: \"/community/members/mia-grenell\",\n    mdxType: \"Link\"\n  }, \"Mia Grenell\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Issue: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/14793\"\n  }, \"https://github.com/meshery/meshery/issues/14793\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/8a048110-059d-4928-bd94-00fd5f5e500d\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/8a048110-059d-4928-bd94-00fd5f5e500d\"))), mdx(\"h4\", null, \"Model relationships for AWS services\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Description:\\nMeshery Models are declarative representations of infrastructure and applications. Within these models, Relationships define how different Components (e.g., Kubernetes resources, Cloud services) interact and depend on each other. These relationships are crucial for visualizing, understanding, and managing complex cloud native systems.\")), mdx(\"p\", null, \"This internship focuses on significantly expanding the breadth and depth of Meshery Relationships across a wide array of technologies supported by Meshery. As Meshery continues to integrate with more cloud-native technologies (Kubernetes, public clouds, and all CNCF projects), there's a growing need to accurately model the intricate relationships between their components - vital for providing users with comprehensive insights and control over their deployments.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: DevOps, systems administration, solutions architecture. Experience with Kubernetes, AWS and its services.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Responsibilities:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Research and Analyze Technologies: Dive deep into various cloud-native technologies (e.g., different compute services, databases, messaging systems, network services, etc.) to understand their components and how they interconnect.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Develop Relationship Definitions: Create and contribute relationship definitions, typically in JSON or YAML format, to the Meshery models. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Model Inter-Technology Interactions: Focus particularly on defining relationships between components from different technologies (e.g., how a Kubernetes deployment relates to an AWS RDS instance, or how a Linkerd service interacts with a Prometheus monitoring component).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Document New Relationships: Clearly document the newly defined relationships, their purpose, and how they are represented within Meshery designs, contributing to the official Meshery documentation.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Expected Outcome:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A multitude of new relationships defined both intra and inter AWS services.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Policy Contribution: For advanced interns, there may be opportunities to contribute to the Rego policies that evaluate and enforce these relationships.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"/community/members/sangram-rath\",\n    mdxType: \"Link\"\n  }, \"Sangram Rath\"), \", \", mdx(Link, {\n    to: \"/community/members/mia-grenell\",\n    mdxType: \"Link\"\n  }, \"Mia Grenell\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Issue: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/14793\"\n  }, \"https://github.com/meshery/meshery/issues/14793\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Issue: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/14794\"\n  }, \"https://github.com/meshery/meshery/issues/14794\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/d548f403-0d7f-4ca5-88f1-393ae592a05a\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/d548f403-0d7f-4ca5-88f1-393ae592a05a\"))), mdx(\"h4\", null, \"Meshery Model Support for kro ResourceGraphDefinitions (RGDs)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Description: Enhance Meshery's existing orchestration capabilities to include support for kro ResourceGraphDefinitions (RGDs) as first-class Meshery Models. This involves enabling Meshery to manage and orchestrate RGDs, similar to how it handles other Kubernetes resources. The project will also include generating support for ResourceGraphDefinition in Meshery's Model generator.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Expected Outcome:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Meshery will be able to orchestrate and manage kro RGDs. This includes the ability to deploy, configure, and manage the lifecycle of RGDs through Meshery. The Meshery Model generator will be updated to automatically generate models for kro RGDs, simplifying their integration and management within Meshery. This will be an officially supported feature of Meshery.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: Golang, well-written and well-spoken English, Kubernetes, DevOps\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentors: \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"/community/members/aabid-sofi\",\n    mdxType: \"Link\"\n  }, \"Aabid Sofi\"), \", \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Issue: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/14793\"\n  }, \"https://github.com/meshery/meshery/issues/14793\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Issue: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/13520\"\n  }, \"https://github.com/meshery/meshery/issues/13520\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/b993ee7d-6b52-47e8-a651-e1c6c91e5d2b\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/b993ee7d-6b52-47e8-a651-e1c6c91e5d2b\"))), mdx(\"h4\", null, \"Workflow Engine in Meshery\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Description: Integrate a new architectural component into Meshery: a workflow engine, using Temporal. This project involves shifting Meshery off of sqlite over to postgres using gorm (golang). Interns will familiarize with concepts of orchestration engines, including chaining workflows, and content lifecycle management.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: Golang, Temporal, ReactJS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"mailto:rian.cteulp@gmail.com\",\n    mdxType: \"Link\"\n  }, \" Rian Cteulp \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Issue: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/14795\"\n  }, \"https://github.com/meshery/meshery/issues/14795\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/6244b48c-1fc6-4b1c-b965-7df7e117b06d\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/6244b48c-1fc6-4b1c-b965-7df7e117b06d\"))), mdx(\"h4\", null, \"Solutions Architecture of Popular Cloud Native Deployments\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Description: Learning paths with hands-on labs are a crucial resource for DevOps engineers and cloud-native practitioners. The Meshery Playground provides a live cluster environment, making it an ideal platform for learning every kind of cloud and cloud native technology. Meshery Docs is in need of comprehensive tutorials and scenarios covering common infrastructure management use cases. Mission is to create and publish a series of hands-on tutorials using Meshery Playground. Each tutorial will include step-by-step guides, live demonstrations, and interactive labs using the Playground allowing learners to apply their knowledge directly without the hassle of any configuration.These tutorials will be reviewed by various project maintainers and then published in guides/tutorials.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Expected Outcome:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"10+ new solution architectures (designs) published in Meshery Catalog\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Each design is ideally adjoined with an interactive tutorial (using Meshery Playground), guiding users through infrastructure.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tutorials should vary in complexity, catering to beginners and advanced learners.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: written English, Markdown, Kubernetes, DevOps, and hands-on experience with cloud-native tools\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/sangram-rath\",\n    mdxType: \"Link\"\n  }, \"Sangram Rath\"), \", \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Issue: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/14796\"\n  }, \"https://github.com/meshery/meshery/issues/14796\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/b1fcdcd9-0066-4a9a-a879-7d5624b02727\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/b1fcdcd9-0066-4a9a-a879-7d5624b02727\"))), mdx(\"h2\", null, \"Additional information\"), mdx(\"br\", null), mdx(\"h3\", null, \"Previous experience with technical writers or documentation\"), mdx(\"p\", null, \"Our mentors have managed teams of technical writers working on documenting enterprise-grade software at large technology companies (Cisco, Seagate, SolarWinds). During the span of time, they have worked with technical writers in DITA and post-DITA environments (from Word to FrameMaker, structured writing, online help, various CMSes, git). Our mentors have worked with technical writers on documentation strategy, creating document sets, covering the full spectrum of reader personas.\"), mdx(\"p\", null, \"We interact daily over Slack, and have an open source project \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://layer5.io/community/calendar\"\n  }, \"meeting everyday\"), \", which are posted to the community \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.youtube.com/c/Layer5io?sub_confirmation=1\"\n  }, \"YouTube channel\"), \".\"), mdx(\"div\", {\n    className: \"apply-button\"\n  }, mdx(\"h3\", null, mdx(Button, {\n    $primary: true,\n    title: \"Participate\",\n    $url: \"https://slack.layer5.io\",\n    $external: true,\n    mdxType: \"Button\"\n  })))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Linux Foundation 2025","program":"Linux Foundation"}},{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Linux Foundation 2024\",\n  \"thumbnail\": \"./Linux_Foundation_logo.svg\",\n  \"darkthumbnail\": \"./lfx-white.svg\",\n  \"permalink\": \"lfx/2024\",\n  \"program\": \"Linux Foundation\",\n  \"programSlug\": \"lfx\",\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ProgramsWrapper, {\n    mdxType: \"ProgramsWrapper\"\n  }, mdx(LfxLogo, {\n    alt: \"lfx_logo\",\n    className: \"lfx_logo\",\n    mdxType: \"LfxLogo\"\n  }), mdx(\"h3\", null, \"Linux Foundation 2024 Program Timeline\"), mdx(\"div\", null, mdx(\"h4\", null, mdx(\"strong\", null, \"Full-Time Terms:\")), mdx(\"ul\", null, mdx(\"li\", {\n    className: \"lfx-timeline_terms\"\n  }, mdx(\"strong\", null, \"Spring Term: March 1st - May 31st\")), mdx(\"ul\", null, mdx(\"li\", null, \"mentorships available on LFX Mentorship: Jan 15th, 2024\"), mdx(\"li\", null, \"applications open: Jan 29th - Feb 13th (2 weeks)\"), mdx(\"li\", null, \"application review/admission decisions/HR paperwork: Feb 14th - Feb 27th\"))), mdx(\"ul\", null, mdx(\"li\", {\n    className: \"lfx-timeline_terms\"\n  }, mdx(\"strong\", null, \"Summer Term: June 1st - August  31st\")), mdx(\"ul\", null, mdx(\"li\", null, \"mentorships available on LFX Mentorship: April 15th, 2024\"), mdx(\"li\", null, \"applications open: April 29th - May 14th (2 weeks)\"), mdx(\"li\", null, \"application review/admission decisions/HR paperwork: May 15th - June 29th\"))), mdx(\"ul\", null, mdx(\"li\", {\n    className: \"lfx-timeline_terms\"\n  }, mdx(\"strong\", null, \"Fall Term: September 1st - Nov 30th\")), mdx(\"ul\", null, mdx(\"li\", null, \"mentorships available on LFX Mentorship: July 27th, 2024\"), mdx(\"li\", null, \"applications open: August 2nd - August 15th (2 weeks)\"), mdx(\"li\", null, \"application review/admission decisions/HR paperwork: August 16th - August 29th\"))), \"Part-time terms will start on the same schedule and last six versus three months.\"), mdx(\"h3\", null, \"About Layer5 and its projects\"), mdx(\"p\", null, \"At Layer5, we champion developer-defined infrastructure, giving engineers the power to reshape application delivery. We empower operators in reimagining how they manage modern infrastructure: collaboratively.\"), mdx(\"p\", null, \"Our inclusive and diverse community stewards projects to provide learning environments, create and implement cloud native industry standards, deployment and operational best practices, benchmarks and abstractions, and more. Our pay-it-forward mentality with every contributor (mentee or not) is a shared commitment by all maintainers (and MeshMates - contributor onboarding buddies) to the open source spirit that pushes Layer5 projects like Meshery forward. New members are always welcome.\"), mdx(\"h3\", null, \"About Meshery\"), mdx(\"p\", null, \"As a self-service engineering platform, Meshery enables collaborative design and operation of cloud and cloud native infrastructure.\"), mdx(\"h3\", null, \"About our Community\"), \"Layer5 is all about \", mdx(Link, {\n    to: \"/community\",\n    mdxType: \"Link\"\n  }, \"its community\"), \" of contributors. We have designed an onboarding program customized to \", mdx(Link, {\n    to: \"/community/newcomers\",\n    mdxType: \"Link\"\n  }, \"meet newcomers\"), \" where they\\u2019re at and developed an onboarding buddy program, \", mdx(Link, {\n    to: \"/community/meshmates\",\n    mdxType: \"Link\"\n  }, \"MeshMates\"), \" with individuals dedicated to assisting contributors. The Layer5 community and its open source projects are thriving.\", mdx(\"p\", null, \"Technical writers and other contributors are what comprise Layer5 - an open organization, built by the community for the community. Our vibrant community has seen many talented student contributors go on to secure exciting job opportunities with renowned technology companies such as Red Hat, Microsoft, and VMware, just to name a few. At Layer5, we have high expectations from our interns, and in return, we provide them with incredible opportunities to showcase their work on prestigious stages like DockerCon and KubeCon. We actively promote and uplift our interns, and many of them have gone on to become project maintainers. There are \", mdx(\"a\", {\n    href: \"https://www.linkedin.com/company/layer5\",\n    rel: \"nofollow\"\n  }, \"many\"), \", \", mdx(Link, {\n    to: \"https://layer5.io/blog/category/community\",\n    mdxType: \"Link\"\n  }, \"many examples\"), \" of this on the layer5.io websites.\"), mdx(\"h2\", null, \"LFX Mentorship 2024 Spring Projects\"), mdx(\"br\", null), mdx(\"h3\", null, \"Meshery\"), mdx(\"br\", null), mdx(\"h4\", null, \"UI Migration from MUI v4 to MUI v5 and NextjS 13\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \": Meshery's UI is powerful and utilizes frameworks like Next.js and Material-UI. However, it relies on outdated technology stacks, resulting in performance inefficiencies and increased maintenance overhead.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Expected Outcome: Migrate from MUI v4 to MUI v5 and fully utilize features of Nextjs v13. Migrate all class based components to function based component. Reduced code complexity and improved maintainability for long-term sustainability. Responsive and accessible UI that adapts to diverse devices and user needs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: ReactJs, NextJs, familiarity with Material UI, Redux and Redux Toolkit\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"/community/members/aabid-sofi\",\n    mdxType: \"Link\"\n  }, \"Aabid Sofi\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Upstream Issue: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/6680\"\n  }, \"https://github.com/meshery/meshery/issues/6680\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/9dc784dd-dbfb-4d60-81ce-4da95e0b48a0\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/9dc784dd-dbfb-4d60-81ce-4da95e0b48a0\"))), mdx(\"h4\", null, \"Expand Meshery CLI capabilities for registry management\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \": Meshery CLI is a powerful tool to manage all your cloud native resources, Meshery has internal capability called Registry to store and manage models, categories, component and relationship, presently Meshery\\u2019s v0.7 release allow users to view all this information from Mehery UI. We also need to expose Meshery\\u2019s registry capability through mesheryctl\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Expected Outcome: Design mesheryctl subcommands and flags for registering, listing, retrieving, updating, and deleting models, components and relationships. Implement validation and error handling for user input and API responses. Integrate with relevant Meshery APIs to interact with the registry backend.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: Golang, familiarity with Golang CLI framework Cobra\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \",\", mdx(Link, {\n    to: \"/community/members/pranav-singh\",\n    mdxType: \"Link\"\n  }, \"Pranav Singh\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Upstream Issue: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/8176\"\n  }, \"https://github.com/meshery/meshery/issues/8176\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/441ebbbd-8084-4e4c-b072-bc78112502ef\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/441ebbbd-8084-4e4c-b072-bc78112502ef\"))), mdx(\"h4\", null, \"Expand integration of Meshery with Artifact Hub\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \": While Meshery has made significant strides, its integration with Artifact Hub requires expansion and enhancement to maximize users experience. The goal is expand integration between Meshery and Artifact Hub which starts with making Meshery designs as a new Artifact Hub kind.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Expected Outcome: Definition and implementation of Meshery patterns as a distinct category within Artifact Hub. Design features to showcase Meshery's unique design patterns, enhancing visibility and accessibility. Collaborate with select publishers to integrate Meshery snapshots into Artifact Hub entries. Enhance user experience by providing visual representations of Meshery-related artifacts.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: Familiarity with Helm charts and Artifact Hub, basic familiarity with Kubernetes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \",\", mdx(Link, {\n    to: \"/community/members/pranav-singh\",\n    mdxType: \"Link\"\n  }, \"Pranav Singh\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Upstream Issue: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/9966\"\n  }, \"https://github.com/meshery/meshery/issues/9966\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/83c60c5f-3e79-4532-8ee6-1266e30d21e0\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/83c60c5f-3e79-4532-8ee6-1266e30d21e0\"))), mdx(\"h3\", null, \"Service Mesh Performance\"), mdx(\"br\", null), mdx(\"h4\", null, \"Nighthawk Advanced Load Controller\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \": The adaptive load controller operates by iteratively running optimization routines to ascertain the maximum load a system can sustain. Typically, this maximum load is determined by the system's capacity to handle requests per second (rps). The metrics, such as CPU usage and latency, collected from the system under test (SUT) serve as constraints to assess whether the SUT can sustain the imposed load. However, it lacks comprehensive lifecycle management functionalities. This hinders its adoption and limits its potential for continuous performance monitoring and optimization.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Expected outcome: Implement mechanisms to trigger alerts and notifications based on performance thresholds or significant changes in key metrics.\\nIntegrate Nighthawk testing with existing CI/CD pipelines for automated performance validation and optimization as part of the development and deployment process.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: Golang, familiarity with Service Mesh, grpc, docker, kubernetes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"/community/members/xin-huang\",\n    mdxType: \"Link\"\n  }, \"Xin Huang\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Upstream Issue: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/service-mesh-performance/service-mesh-performance/issues/350\"\n  }, \"https://github.com/service-mesh-performance/service-mesh-performance/issues/350\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/98b9a7d7-4dd4-45aa-96f9-145e058efcee\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/98b9a7d7-4dd4-45aa-96f9-145e058efcee\"))), mdx(\"h3\", null, \"Nighthawk Distributed Performance Tests\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \": Many performance benchmarks are limited to single instance load generation (single pod load generator). This limits the amount of traffic that can be generated to the output of the single machine that the benchmark tool runs on in or out of a cluster. Overcoming this limitation would allow for more flexible and robust testing. Distributed load testing in parallel poses a challenge when merging results without losing the precision we need to gain insight into the high tail percentiles. Distributed load testing offers insight into system behaviors that arguably more accurately represent real-world behaviors of services under load as that load comes from any number of sources. \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Expected Outcome: Implementation of distributed load generation in Nighthawk. Integration of Nighthawk with relevant service mesh performance testing scenarios. Capability to invoke Nighthawk for distributed load testing through APIs and command-line interfaces. Implementation of reporting mechanisms for distributed load testing results.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: Golang, familiarity with HTTP/HTTPS performance testing tools, Service Mesh, grpc, familiarity with containerization technologies, like Docker would be helpful.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"/community/members/xin-huang\",\n    mdxType: \"Link\"\n  }, \"Xin Huang\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Upstream Issue: \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/bad94872-bd61-4960-915a-ea1945ddd15c\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/bad94872-bd61-4960-915a-ea1945ddd15c\"))), mdx(\"h3\", null, \"CNCF TAG Network\"), mdx(\"br\", null), mdx(\"h4\", null, \"Mapping Kubernetes Resources: Identifying relationships between all standard and custom resources\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \": The OpenAPI specifications for Kubernetes provides taxonomy, but augmenting a graph data model with formalized ontologies enables any number of capabilities, one of the more straightforward is the inferencing requisite for natural language processing, and consequently, a human-centric query / response interaction becomes becomes possible. More importantly, more advanced systems can be built when a graph data model of connected systems is upgraded to be a knowledge semantic graph.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Expected Outcome: YAML-formatted definition\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: DevOps, Kubernetes Administration, Light familiarity with all of the CNCF projects and a desire to study each project and their operators/resources.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s):\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor Name: \", mdx(Link, {\n    to: \"/community/members/uzair-shaikh\",\n    mdxType: \"Link\"\n  }, \"Uzair Shaikh\"), \", \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Upstream Issue:\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/1e9ac76e-0434-45fc-8137-fc5698f29cd0\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/1e9ac76e-0434-45fc-8137-fc5698f29cd0\"))), mdx(\"h2\", null, \"LFX Mentorship 2024 Summer Projects\"), mdx(\"br\", null), mdx(\"h3\", null, \"Meshery\"), mdx(\"br\", null), mdx(\"h4\", null, \"Meshery: Meshery: Project tutorials, design patterns, & publish reference architectures\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Description: Meshery the CNCF\\u2019s 10th fastest growing project. As a cloud native manager, Meshery \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://meshery.io/integrations\"\n  }, \"integrates with 250+ projects\"), \" and technologies. For each CNCF project integrated with Meshery, tutorials, sample designs, and deployment patterns with reference architectures need to be created. For the earnest, DevOps-minded intern, this internship represents a vast opportunity to learn, document, and publish tutorials and best practices not only around Meshery, but for any number of the other CNCF projects, too. You will use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://play.meshery.io\"\n  }, \"Meshery Playground\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Expected Outcome: \"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"25+ new design patterns published in Meshery Catalog and Artifact Hub.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"5 new Meshery tutorials published in Meshery Docs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bonus: Extend one or more of Meshery\\u2019s Learning Paths.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Recommended Skills: written English, Kubernetes, DevOps, and familiarity with any number of other CNCF projects, like Jaeger, Helm, Harbor, Flux, Argo, Flux, Falco, etc., Jekyll, strong organizational skills\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/yash-sharma\",\n    mdxType: \"Link\"\n  }, \"Yash Sharma\"), \", \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Upstream Issue: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/meshery/meshery/issues/10888\"\n  }, \"https://github.com/meshery/meshery/issues/10888\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/7ec5139b-fca8-43db-bafc-bdb2faa58047\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/7ec5139b-fca8-43db-bafc-bdb2faa58047\")))), mdx(\"h4\", null, \"Meshery: End-to-End Testing with Playwright\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Description: Meshery integrates with many other CNCF projects and technologies. Sustaining those integrations is only possible through automation. End-to-end testing with Playwright, GitHub Workflows, and self-documenting test reports is the means to the end of maintaining a healthy state of each of these \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://meshery.io/integrations\"\n  }, \"Meshery integrations\"), \". \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Expected Outcome: \"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Successful migration of E2E tests from Cypress to the Playwright test library within the Meshery project.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Implementation of robust and reliable test cases using Playwright to cover a wide range of Meshery's E2E scenarios.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Documentation detailing the migration process, and guidelines for future contributions to maintain test quality.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Integration of Playwright test suite into the Meshery CI/CD pipeline to ensure continuous testing and reliability of the platform.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Recommended Skills: JavaScript, Playwright, GitHub Workflows, Jekyll, Markdown, familiarity with React or Nextjs would be helpful, CI/CD\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Mentor Name: \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"/community/members/aabid-sofi\",\n    mdxType: \"Link\"\n  }, \"Aabid Sofi\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Upstream Issue: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/meshery/meshery/issues/10890\"\n  }, \"https://github.com/meshery/meshery/issues/10890\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/62f4866e-9461-490d-890d-9f221a3941b4\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/62f4866e-9461-490d-890d-9f221a3941b4\")))), mdx(\"h4\", null, \"Meshery: Support versioning for Meshery designs\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Description: Meshery design is a common practice of both configuring and operating cloud native infrastructure functionality in a single, universal file. We are seeking to enhance Meshery's capabilities by supporting automatic versioning of Meshery designs based on user sessions. This functionality will enable users to track changes made to their designs by individuals, facilitating the ability to rollback changes at any time.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Expected Outcome: \"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Update Meshery server and pattern engine to support Meshery design versioning.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Update UI to allow users to perform actions related to design versioning.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Document changes made in pattern engine and server.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Recommended Skills: Golang, Kubernetes, Meshery, Familiarity with Helm charts and Artifact Hub, familiarity with React, Nextjs would be helpful\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/uzair-shaikh\",\n    mdxType: \"Link\"\n  }, \"Uzair Shaikh\"), \", \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Upstream Issue: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/meshery/meshery/issues/10889\"\n  }, \"https://github.com/meshery/meshery/issues/10889\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/8e1ab317-9043-4f29-8b83-9b9ffa2b8b40\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/8e1ab317-9043-4f29-8b83-9b9ffa2b8b40\")))), mdx(\"h3\", null, \"Service Mesh Performance\"), mdx(\"br\", null), mdx(\"h4\", null, \"Service Mesh Performance: Convergence of Network and Graph topologies\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Description: Opens the door to leveraging algorithms in the areas of Centrality, Community Detection, Pathfinding, Topological Link Prediction, etc. Bringing to bear advances made in Machine Learning / AI / recommendation systems, fraud detection could really help to derive meaning and comprehension for future tools. Another example is how ML + graph approaches are used to find and determine the optimal molecular structure of atoms such that desired physical properties are targeted. This approach could be applied to the problem of workload sizing and estimation for service mesh operators and would-be adopters.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Expected outcome:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use Neo4j's ability to create graph projections, which copy a subgraph to RAM so that algorithms can be efficiently run.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Recommended Skills: Golang, familiarity with Service Mesh, grpc, docker, kubernetes\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"/community/members/xin-huang\",\n    mdxType: \"Link\"\n  }, \"Xin Huang\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Upstream Issue: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/service-mesh-performance/service-mesh-performance/issues/422\"\n  }, \"https://github.com/service-mesh-performance/service-mesh-performance/issues/422\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/c605139b-8736-477a-835a-c6b45112bee4\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/c605139b-8736-477a-835a-c6b45112bee4\")))), mdx(\"h3\", null, \"CNCF TAG Network\"), mdx(\"br\", null), mdx(\"h4\", null, \"Mapping CNCF Landscape one Relationship-at-a-time\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Description: While the OpenAPI specifications for Kubernetes offer a taxonomy, integrating a graph data model with formalized ontologies unlocks a multitude of capabilities. Among these, enabling inferencing necessary for natural language processing stands out as a straightforward application. This, in turn, facilitates the possibility of a human-centric query/response interaction. Importantly, advancing to a knowledge semantic graph from a connected systems' graph data model opens the door to building more sophisticated systems.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Expected Outcome: \"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Identifying new technologies from CNCF landscape and creating new YAML-formatted definitions of one or more relationships.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Documentation of each relationship - per component.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Development of new types of genealogies - new types of ways in which resources relate to one another and how these relationships might be visualized.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Recommended Skills: Familiarity with Helm charts and Artifact Hub, basic familiarity with Kubernetes, and familiarity with CNCF different projects would be helpful\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/uzair-shaikh\",\n    mdxType: \"Link\"\n  }, \"Uzair Shaikh\"), \", \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Upstream Issue: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/cncf/tag-network/issues/39\"\n  }, \"https://github.com/cncf/tag-network/issues/39\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/bec63054-bc32-4444-b6c5-2b427f527e16\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/bec63054-bc32-4444-b6c5-2b427f527e16\")))), mdx(\"h4\", null, \"Technical Content Creation CNCF Challenges\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Description: On a periodic basis, the CNCF would like to present a public challenge to those that are interested in participating (e.g. \\u201CChallenge: Distributed Tracing with Jaeger\\u201D). \")), mdx(\"p\", null, \"Your mission in this internship is technical content creation of said challenges through use of markdown, Meshery, and any number of other CNCF projects. Challenges will be created using the Meshery Playground and potentially published in the proposed CNCF Hub. They will be similar too, but slightly different from these \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.meshery.io/guides/tutorials/\"\n  }, \"example tutorials\"), \".\"), mdx(\"p\", null, \"Understand that your challenges will be promoted through CNCF channels, reviewed by various project maintainers, and that each challenger (participant) will receive a certain number of points, depending upon whether or not they successfully complete the challenges that you create and in what timeframe they complete those challenges (the faster, the more points). Your challenges will need to vary in level of difficulty. \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Expected Outcome: \"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"10+ new challenges published in CNCF Hub (and Meshery Catalog and Artifact Hub).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Challenges can contain more than one objective. Points are earned for each objective completed.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bonus: Extend one or more of Meshery\\u2019s Learning Paths.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Recommended Skills: written English, Kubernetes, DevOps, and familiarity with any number of other CNCF projects, like Prometheus, CoreDNS, Istio, Jaeger, Helm, Harbor, OPA, Rook, SPIFEE, Flux, Argo, Flux, Falco, etc., Jekyll, strong organizational skills\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/nic-jackson\",\n    mdxType: \"Link\"\n  }, \"Nic Jackson\"), \", \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Upstream Issue: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/cncf/tag-network/issues/40\"\n  }, \"https://github.com/cncf/tag-network/issues/40\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/1a620529-f2be-4a6f-8b4d-0562731cb840\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/1a620529-f2be-4a6f-8b4d-0562731cb840\")))), mdx(\"h2\", null, \"LFX Mentorship 2024 Fall Projects\"), mdx(\"br\", null), mdx(\"h3\", null, \"CNCF TAG Network\"), mdx(\"br\", null), mdx(\"h4\", null, \"Interrelating Kubernetes Resources: Identifying relationships between all standard and custom resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Description: The OpenAPI specifications for Kubernetes provides taxonomy, but augmenting a graph data model with formalized ontologies enables any number of capabilities, one of the more straightforward is the inferencing requisite for natural language processing, and consequently, a human-centric query / response interaction becomes becomes possible. More importantly, more advanced systems can be built when a graph data model of connected systems is upgraded to be a knowledge semantic graph.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Expected Outcome: \"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"YAML-formatted definition of one or more relationships per Kubernetes resource.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Documentation of each relationship - per component.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Development of new types of genealogies - new types of ways in which resources relate to one another and how these relationships might be visualized.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Verification of functional relationships\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Recommended Skills: DevOps, Kubernetes Administration, Light familiarity with all of the CNCF projects and a desire to study each project and their operators/resources.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/uzair-shaikh\",\n    mdxType: \"Link\"\n  }, \"Uzair Shaikh\"), \", \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Upstream Issue: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/cncf/tag-network/issues/43\"\n  }, \"https://github.com/cncf/tag-network/issues/43\")))), mdx(\"h4\", null, \"CNCF Challenges: Technical Content Creation\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Description: On a periodic basis, the CNCF would like to present a public challenge to those that are interested in participating (e.g. \\u201CChallenge: Distributed Tracing with Jaeger\\u201D). \")), mdx(\"p\", null, \"Your mission in this internship is technical content creation of said challenges through use of markdown, Meshery, and any number of other CNCF projects. Challenges will be created using the Meshery Playground and published (in what is potentially the CNCF Hub). They will be similar too, but slightly different from these \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.meshery.io/guides/tutorials/\"\n  }, \"example tutorials\"), \".\"), mdx(\"p\", null, \"Understand that your challenges will be promoted through CNCF channels, reviewed by various project maintainers, and that each challenger (participant) will receive a certain number of points, depending upon whether or not they successfully complete the challenges that you create and in what timeframe they complete those challenges (the faster, the more points). Your challenges will need to vary in level of difficulty. \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Expected Outcome: \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"5+ new challenges published \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Challenges can contain more than one objective. Points are earned for each objective completed.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bonus: Extend one or more of Meshery\\u2019s Learning Paths.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: written English, Kubernetes, DevOps, and familiarity with any number of other CNCF projects, like Prometheus, CoreDNS, Istio, Jaeger, Helm, Harbor, OPA, Rook, SPIFEE, Flux, Argo, Flux, Falco, etc., Jekyll, strong organizational skills\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"/community/members/nic-jackson\",\n    mdxType: \"Link\"\n  }, \"Nic Jackson\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Upstream Issue: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/cncf/tag-network/issues/44\"\n  }, \"https://github.com/cncf/tag-network/issues/44\"))), mdx(\"h3\", null, \"Meshery\"), mdx(\"br\", null), mdx(\"h4\", null, \"Meshery: End-to-End Testing with Playwright (Round 2)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Description: Meshery integrates with many other CNCF projects and technologies. Sustaining those integrations is only possible through automation. End-to-end testing with Playwright, GitHub Workflows, and self-documenting test reports is the means to the end of maintaining a healthy state of each of these \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://meshery.io/integrations\"\n  }, \"Meshery integrations\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Expected Outcome: \"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Successful migration of E2E tests from Cypress to the Playwright test library within the Meshery project.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Implementation of robust and reliable test cases using Playwright to cover a wide range of Meshery's E2E scenarios.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Documentation detailing the migration process, and guidelines for future contributions to maintain test quality.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Integration of Playwright test suite into the Meshery CI/CD pipeline to ensure continuous testing and reliability of the platform.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Recommended Skills: JavaScript, Playwright, GitHub Workflows, Jekyll, Markdown, familiarity with React or Nextjs would be helpful, CI/CD\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/aabid-sofi\",\n    mdxType: \"Link\"\n  }, \"Aabid Sofi\"), \", \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Upstream Issue: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/meshery/meshery/issues/11494\"\n  }, \"https://github.com/meshery/meshery/issues/11494\")))), mdx(\"h4\", null, \"Meshery: Migrate APIs to be schema-driven\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Description: Enhance Meshery\\u2019s APIs capability by migrating to a schema-driven approach, which will ensure consistency, validation, and easier integration. It involves versioning and defining API schemas using OpenAPI/Swagger at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/meshery/schemas\"\n  }, \"https://github.com/meshery/schemas\"), \" and auto generating structs. You will be ensuring all Meshery APIs aligns with defined schemas and are consistent.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Expected Outcome: Identifying APIs and updating them to conform these schemas. Enhance API documentation to reflect the schema-driven approach. Updating APIs to ensure they are consistent and doing validation against defined schemas.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Recommended Skills: Golang, Kubernetes, Swagger, JSON schemas, familiarity with React, Nextjs would be helpful\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/yash-sharma\",\n    mdxType: \"Link\"\n  }, \"Yash Sharma\"), \", \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Upstream Issue: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/meshery/meshery/issues/11495\"\n  }, \"https://github.com/meshery/meshery/issues/11495\")))), mdx(\"h4\", null, \"Meshery: UI Migration from MUI v4 to MUI v5 and Sistent\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Description: Meshery's UI is powerful and utilizes frameworks like Next.js and Material-UI. However, it relies on outdated technology stacks, resulting in performance inefficiencies and increased maintenance overhead.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Expected Outcome: Migrate from MUI v4 to MUI v5 and fully utilize features of Nextjs v13 and Sistent. Migrate all class based components to function based components. Reduced code complexity and improved maintainability for long-term sustainability. Responsive and accessible UI that adapts to diverse devices and user needs.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Recommended Skills: ReactJs, NextJs, familiarity with Material UI, Redux and Redux Toolkit\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"/community/members/antonette-caldwell\",\n    mdxType: \"Link\"\n  }, \"Antonette Caldwell\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Upstream Issue: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/meshery/meshery/issues/11493\"\n  }, \"https://github.com/meshery/meshery/issues/11493\")))), mdx(\"h3\", null, \"Service Mesh Performance\"), mdx(\"br\", null), mdx(\"h4\", null, \"CNCF Project Performance Test Dashboard\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Description: In coordination with CNCF TAG Network, the current performance dashboard at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://smp-spec.io/dashboard\"\n  }, \"https://smp-spec.io/dashboard\"), \" is proposed to be incorporated into CNCF project level-moving criteria in that each CNCF project will be encouraged (mandated?) to incorporate ongoing performance tests into their build and release processes, resulting in ongoing performance analysis of each project.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Expected Outcome:\\nDashboard Enhancement: Expand the existing performance dashboard to capture and visualize performance test results for projects. This will involve integrating with various data sources, designing user-friendly interfaces, and implementing robust data analysis pipelines.\\nGitHub Workflow Integration: Collaborate with other CNCF projects to configure their GitHub workflows to automatically run load tests using the Meshery GitHub Action. This will streamline the performance testing process and ensure that results are consistently collected and published to the dashboard.\\t\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Recommended Skills: Golang, familiarity with HTTP/HTTPS performance testing tools, grpc, familiarity with containerization technologies, like Docker would be helpful.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"/community/members/xin-huang\",\n    mdxType: \"Link\"\n  }, \"Xin Huang\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Upstream Issue: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/service-mesh-performance/service-mesh-performance/issues/432\"\n  }, \"https://github.com/service-mesh-performance/service-mesh-performance/issues/432\")))), mdx(\"h2\", null, \"Additional information\"), mdx(\"br\", null), mdx(\"h3\", null, \"Previous experience with technical writers or documentation\"), mdx(\"p\", null, \"Our mentors have managed teams of technical writers working on documenting enterprise-grade software at large technology companies (Cisco, Seagate, SolarWinds). During the span of time, they have worked with technical writers in DITA and post-DITA environments (from Word to FrameMaker, structured writing, online help, various CMSes, git). Our mentors have worked with technical writers on documentation strategy, creating document sets, covering the full spectrum of reader personas.\"), mdx(\"p\", null, \"We interact daily over Slack, and have an open source project \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://layer5.io/community/calendar\"\n  }, \"meeting everyday\"), \", which are posted to the community \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.youtube.com/c/Layer5io?sub_confirmation=1\"\n  }, \"YouTube channel\"), \".\"), mdx(\"div\", {\n    className: \"apply-button\"\n  }, mdx(\"h3\", null, mdx(Button, {\n    primary: true,\n    title: \"Participate\",\n    url: \"https://slack.layer5.io\",\n    external: true,\n    mdxType: \"Button\"\n  })))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Linux Foundation 2024","program":"Linux Foundation"}},{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Linux Foundation 2023\",\n  \"thumbnail\": \"./Linux_Foundation_logo.svg\",\n  \"darkthumbnail\": \"./lfx-white.svg\",\n  \"permalink\": \"lfx/2023\",\n  \"program\": \"Linux Foundation\",\n  \"programSlug\": \"lfx\",\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ProgramsWrapper, {\n    mdxType: \"ProgramsWrapper\"\n  }, mdx(LfxLogo, {\n    alt: \"lfx_logo\",\n    className: \"lfx_logo\",\n    mdxType: \"LfxLogo\"\n  }), mdx(\"h3\", null, \"Linux Foundation 2023 Program Timeline\"), mdx(\"div\", null, mdx(\"h4\", null, mdx(\"strong\", null, \"Full-Time Terms:\")), mdx(\"ul\", null, mdx(\"li\", {\n    className: \"lfx-timeline_terms\"\n  }, mdx(\"strong\", null, \"Spring Term: March 1st - May 31st\")), mdx(\"ul\", null, mdx(\"li\", null, \"mentorships available on LFX Mentorship: Jan 15th, 2023\"), mdx(\"li\", null, \"applications open: Jan 15th - Feb 12th (4 weeks)\"), mdx(\"li\", null, \"application review/admission decisions/HR paperwork: Feb 15th - Feb 26th\"))), mdx(\"ul\", null, mdx(\"li\", {\n    className: \"lfx-timeline_terms\"\n  }, mdx(\"strong\", null, \"Summer Term: June 1st - August  31st\")), mdx(\"ul\", null, mdx(\"li\", null, \"mentorships available on LFX Mentorship: April 15th, 2023\"), mdx(\"li\", null, \"applications open: May 10th - May 23rd (2 weeks)\"), mdx(\"li\", null, \"application review/admission decisions/HR paperwork: May 24th - May 29th\"))), mdx(\"ul\", null, mdx(\"li\", {\n    className: \"lfx-timeline_terms\"\n  }, mdx(\"strong\", null, \"Fall Term: September 1st - Nov 30th\")), mdx(\"ul\", null, mdx(\"li\", null, \"mentorships available on LFX Mentorship: July 27th, 2023\"), mdx(\"li\", null, \"applications open: August 2nd - August 15th (2 weeks)\"), mdx(\"li\", null, \"application review/admission decisions/HR paperwork: August 16th - August 29th\"))), \"Part-time terms will start on the same schedule and last six versus three months.\"), mdx(\"h3\", null, \"About Layer5 and its projects\"), mdx(\"p\", null, \"The Layer5 community embraces developer-defined infrastructure. We empower developers to change how they write applications, support operators in rethinking how they run modern infrastructure, and enable product owners to regain full-control over their product portfolio. Our cloud native application and infrastructure management software enables organizations to expect more from their infrastructure.\"), mdx(\"p\", null, \"Our inclusive and diverse community stewards projects to provide learning environments, create and implement cloud native industry standards, deployment and operational best practices, benchmarks and abstractions, and more. Our pay-it-forward mentality with every contributor (mentee or not) is a shared commitment by all maintainers (and MeshMates - contributor onboarding buddies) to the open source spirit that pushes Layer5 projects like Meshery forward. New members are always welcome.\"), mdx(\"h3\", null, \"About Meshery\"), mdx(\"p\", null, \"As a self-service engineering platform, Meshery enables collaborative design and operation of cloud and cloud native infrastructure.\"), mdx(\"h3\", null, \"About our Community\"), \"Layer5 is all about \", mdx(Link, {\n    to: \"/community\",\n    mdxType: \"Link\"\n  }, \"its community\"), \" of contributors. We have designed an onboarding program customized to \", mdx(Link, {\n    to: \"/community/newcomers\",\n    mdxType: \"Link\"\n  }, \"meet newcomers\"), \" where they\\u2019re at and developed an onboarding buddy program, \", mdx(Link, {\n    to: \"/community/meshmates\",\n    mdxType: \"Link\"\n  }, \"MeshMates\"), \" with individuals dedicated to assisting contributors. Layer5 and Meshery have been around for a year and half and have a healthy, growing community of 800+ contributors. The layer5.io website itself is open source and created by 400+ of our contributors.\", mdx(\"p\", null, \"Technical writers and other contributors are what comprise Layer5 - an open organization, built for the community by the community. Many student contributors have been placed into new jobs with technology companies like Red Hat, Microsoft, and VMware to name a few of the larger organizations. Layer5 expects much from interns and in return, we put them on stage at DockerCon and KubeCon. We promote them and uplift their works. There are \", mdx(\"a\", {\n    href: \"https://www.linkedin.com/company/layer5\",\n    rel: \"nofollow\"\n  }, \"many\"), \", \", mdx(Link, {\n    to: \"https://layer5.io/blog/category/community\",\n    mdxType: \"Link\"\n  }, \"many examples\"), \" of this on the layer5.io websites. A number of former interns are now project maintainers.\"), mdx(\"h2\", null, \"LFX Mentorship 2023 Spring Projects\"), mdx(\"br\", null), mdx(\"h3\", null, \"Meshery\"), mdx(\"br\", null), mdx(\"h4\", null, \"Distributed workflow engine\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \": Integrate a new architectural component into Meshery: a workflow engine. This project involves shifting Meshery off of bitcask and off of sqlite over to postgres using gorm (golang). Interns will familiarize with concepts of orchestration engines, including chaining workflows, and content lifecycle management.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: Golang, Temporal, ReactJS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"/community/members/ashish-tiwari\",\n    mdxType: \"Link\"\n  }, \"Ashish Tiwari\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/73202d21-d4ca-4435-9a73-f326c9b3e796\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/73202d21-d4ca-4435-9a73-f326c9b3e796\"))), mdx(\"h4\", null, \"Multi-user cloud native playground\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \": Advance the cloud native playground in which any CNCF project can be explored. Meshery\\u2019s genesis is that of helping teach people about cloud native technology and enabling to operate various types of cloud native infrastructure confidently. The proposed project is aimed at furthering this mission by infusing multi-user collaboration as a pervasisve feature so that users can learn together in a running instance of Meshery.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: ReactJS, CSS, Golang (nice-to-have)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"/community/members/abhishek-kumar\",\n    mdxType: \"Link\"\n  }, \"Abhishek Kumar\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Issue: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/7020\"\n  }, \"https://github.com/meshery/meshery/issues/7020\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/2ee7a912-e26e-4602-9dfc-4febe3842df3\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/2ee7a912-e26e-4602-9dfc-4febe3842df3\"))), mdx(\"h4\", null, \"Distributed client-side policy evaluation in WASM and Rego\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \": Meshery's highly dynamic infrastructure configuration capabilities require real-time evaluation of complex policies. Policies of various types and with a high number of parameters need to be evaluted client-side. With policies expressed in Rego, the goal of this project is to incorporate use of the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/open-policy-agent/golang-opa-wasm\"\n  }, \"https://github.com/open-policy-agent/golang-opa-wasm\"), \" project into Meshery UI, so that a powerful, real-time user experience is possible.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: Golang, Open Policy Agent, WebAssembly\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"/community/members/ashish-tiwari\",\n    mdxType: \"Link\"\n  }, \"Ashish Tiwari\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Issue: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/7019\"\n  }, \"https://github.com/meshery/meshery/issues/7019\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/7e3382be-5d82-443e-b0bc-4dcd2194705d\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/7e3382be-5d82-443e-b0bc-4dcd2194705d\"))), mdx(\"h3\", null, \"Service Mesh Performance\"), mdx(\"br\", null), mdx(\"h4\", null, \"Adaptive Load Controller II\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \": The adaptive load controller is to execute optimization routines recursivley to determine the maximum load a system can sustain. The maximum load is usually defined by the maximum requests per second (rps) the system can handle. The metrics (CPU usage, latency etc) collected from the system under test are the constraints we provide to judge whether a system under test (SUT) is sustaining the load.\"), mdx(\"p\", null, \"A use-case that fits very well is be the ability to use it to run performance tests on a schedule and track the maximum load a system can handle over time. This could give insights to performance improvements or degradations.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: golang, grpc, docker, kubernetes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"/community/members/xin-huang\",\n    mdxType: \"Link\"\n  }, \"Xin Huang\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Upstream Issue (URL): \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/service-mesh-performance/service-mesh-performance/issues/350\"\n  }, \"https://github.com/service-mesh-performance/service-mesh-performance/issues/350\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/2597fc3d-eb2c-411f-b02d-940c8347328d\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/2597fc3d-eb2c-411f-b02d-940c8347328d\"))), mdx(\"h3\", null, \"CNCF TAG Network\"), mdx(\"br\", null), mdx(\"h4\", null, \"Representing Kubernetes ontology in MeshModel\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \": Network topologies and graph databases go hand-in-hand. The OpenAPI specifications for Kubernetes provides taxonomy, but augmenting a graph data model with formalized ontologies enables any number of capabilities, one of the more straightforward is the inferencing requisite for natural language processing, and consequently, a human-centric query / response interaction becomes becomes possible. More importantly, more advanced systems can be built when a graph data model of connected systems is upgraded to be a knowledge semantic graph. Deliverables (among other items):\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"MeshModel capabilities browser\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Import/export of MeshModel models and components as OCI images\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Augmentation of cuelang-based component generator\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: cuelang, golang, OCI\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Issue: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/cncf/tag-network/issues/24\"\n  }, \"https://github.com/cncf/tag-network/issues/24\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/96080e3d-83e2-46ed-928c-b6e7f3154bf3\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/96080e3d-83e2-46ed-928c-b6e7f3154bf3\"))), mdx(\"h2\", null, \"LFX Mentorship 2023 Summer Projects\"), mdx(\"br\", null), mdx(\"h3\", null, \"Meshery\"), mdx(\"br\", null), mdx(\"h4\", null, \"Meshery UI Permissions Framework\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \": Meshery UI lacks a permissions framework. The existing internal implementation is simple, fragile and must be completely rewritten. The approach to implemention a permmissions framework includes using React.js and CASL.js. Meshery UI's approach needs to be extensible given that this framework will be an extension point for Remote Providers to supply their own permissions. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Expected Outcome\"), \": Definition of permissions and their enforcement in Meshery with an aim for deep granularity and extensibility with each user interface input component carrying a unique permission key id. Each key is then put into a group of keys in a keychain, keychains assigned to user roles, in turn, roles assigned to users. With users having the ability to create own custom roles, the framework will be dynamic based on the associated server-side permissions for the currently auth\\u2019ed user.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: React.js, CASL.js\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"/community/members/abhishek-kumar\",\n    mdxType: \"Link\"\n  }, \"Abhishek Kumar\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Upstream Issue (URL): \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/7436\"\n  }, \"https://github.com/meshery/meshery/issues/7436\"), \", \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/7382\"\n  }, \"https://github.com/meshery/meshery/issues/7382\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/f4a9804f-2e46-42a4-b2ae-ad3ea7b29734\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/f4a9804f-2e46-42a4-b2ae-ad3ea7b29734\"))), mdx(\"h4\", null, \"OPA policy evaluation in-browser using WebAssembly and Rego\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \": Meshery's highly dynamic infrastructure configuration capabilities require real-time evaluation of complex policies. Policies of various types and with a high number of parameters need to be evaluted client-side. With policies expressed in Rego, the goal of this project is to incorporate use of the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/open-policy-agent/golang-opa-wasm\"\n  }, \"https://github.com/open-policy-agent/golang-opa-wasm\"), \" project into Meshery UI. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Expected Outcome\"), \": a powerful real-time multi-user collaboration experience.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: Golang, Open Policy Agent, WASM\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"/community/members/abhishek-kumar\",\n    mdxType: \"Link\"\n  }, \"Abhishek Kumar\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Upstream Issue (URL): \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/7019\"\n  }, \"https://github.com/meshery/meshery/issues/7019\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/005db8db-7efe-4433-9605-91d14174c72c\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/005db8db-7efe-4433-9605-91d14174c72c\"))), mdx(\"h4\", null, \"Adopt OCI as the packaging and distribution format for Meshery MeshModels\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \": Meshery MeshModels represent a schema-based description of cloud native infratructure. MeshModels need to be portable between Meshery deployments as well as easily versionable in external repositories. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Expected Outcome\"), \": \"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Meshery clients (mesheryctl and Meshery UI) should be able to import/export MeshModels as OCI images.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Meshery clients (mesheryctl and Meshery UI) should be able to push/pull from OCI-compatible registries.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Stretch Goal: OCI image signing; Verify the authenticity of MeshModels using cosign (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/sigstore/cosign\"\n  }, \"https://github.com/sigstore/cosign\"), \").\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Target registries: Meshery Catalog (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://meshery.io/catalog\"\n  }, \"https://meshery.io/catalog\"), \"), Artifact Hub.\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: Reactjs, Golang, GraphQL\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Upstream Issue (URL): \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/6447\"\n  }, \"https://github.com/meshery/meshery/issues/6447\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/26377c30-9ffd-41e3-bfea-839bf126f8f6\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/26377c30-9ffd-41e3-bfea-839bf126f8f6\"))), mdx(\"h4\", null, \"OCI compatible Kubernetes ontology\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \": Network topologies and graph databases go hand-in-hand. The OpenAPI specifications for Kubernetes provides taxonomy, but augmenting a graph data model with formalized ontologies enables any number of capabilities, one of the more straightforward is the inferencing requisite for natural language processing, and consequently, a human-centric query / response interaction becomes becomes possible. More importantly, more advanced systems can be built when a graph data model of connected systems is upgraded to be a knowledge semantic graph. Deliverables (among other items):\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"MeshModel capabilities browser\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Import/export of MeshModel models and components as OCI images\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Augmentation of cuelang-based component generator\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: cuelang, golang, OCI\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Upstream Issue (URL): \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery/issues/6447\"\n  }, \"https://github.com/meshery/meshery/issues/6447\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/bb8ddf84-31d7-4a89-9e4b-e6aa9601c0db\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/bb8ddf84-31d7-4a89-9e4b-e6aa9601c0db\"))), mdx(\"h3\", null, \"Service Mesh Performance\"), mdx(\"br\", null), mdx(\"h4\", null, \"Service Mesh Performance IDE Plugin\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Description\"), \": The objective of this project is to develop IDE plugins that can enhance the developer experience while working with Service Mesh Performance Performance Profiles. The proposed plugins will leverage technologies such as golang and cuelang to provide features such as syntax highlighting, auto-completion, validation, and rendering previews for Service Mesh Performance profile and model definitions. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Expected Outcome\"), \": \"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Release VS Code Extension\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Syntax Highlighting and Auto-completion: The plugin can fetch SMP Model definitions such as cloud-native components and their relationships. This information can be used to provide syntax highlighting and auto-completion for these definitions in the JSON files, making it easier for developers to write error-free code.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Validation and Reference: For Meshery MeshModel definitions such as cloud-native components and their relationships, the plugin can use the CUE language to provide validation for the CUE input and preview the rendering result. The plugin can also fetch the SMP Model schemas and display them in the IDE for reference.\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recommended Skills: Cuelang\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentor(s): \", mdx(Link, {\n    to: \"/community/members/lee-calcote\",\n    mdxType: \"Link\"\n  }, \"Lee Calcote\"), \", \", mdx(Link, {\n    to: \"/community/members/xin-huang\",\n    mdxType: \"Link\"\n  }, \"Xin Huang\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Upstream Issue (URL): \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/service-mesh-performance/service-mesh-performance/issues/379\"\n  }, \"https://github.com/service-mesh-performance/service-mesh-performance/issues/379\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFX URL: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/4735d0fa-229f-43e7-9415-dff9220bf687\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/4735d0fa-229f-43e7-9415-dff9220bf687\"))), mdx(\"h2\", null, \"Additional information\"), mdx(\"br\", null), mdx(\"h3\", null, \"Previous experience with technical writers or documentation\"), mdx(\"p\", null, \"Our mentors have managed teams of technical writers working on documenting enterprise-grade software at large technology companies (Cisco, Seagate, SolarWinds). During the span of time, they have worked with technical writers in DITA and post-DITA environments (from Word to FrameMaker, structured writing, online help, various CMSes, git). Our mentors have worked with technical writers on documentation strategy, creating document sets, covering the full spectrum of reader personas.\"), mdx(\"p\", null, \"We interact daily over Slack, and have an open source project \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://layer5.io/community/calendar\"\n  }, \"meeting everyday\"), \", which are posted to the community \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.youtube.com/c/Layer5io?sub_confirmation=1\"\n  }, \"YouTube channel\"), \".\"), mdx(\"div\", {\n    className: \"apply-button\"\n  }, mdx(\"h3\", null, mdx(Button, {\n    $primary: true,\n    title: \"Participate\",\n    $url: \"https://slack.layer5.io\",\n    $external: true,\n    mdxType: \"Button\"\n  })))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Linux Foundation 2023","program":"Linux Foundation"}},{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Linux Foundation 2022\",\n  \"thumbnail\": \"./Linux_Foundation_logo.svg\",\n  \"darkthumbnail\": \"./lfx-white.svg\",\n  \"permalink\": \"lfx/2022\",\n  \"program\": \"Linux Foundation\",\n  \"programSlug\": \"lfx\",\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ProgramsWrapper, {\n    mdxType: \"ProgramsWrapper\"\n  }, mdx(\"img\", {\n    src: lfx_logo,\n    alt: \"lfx_logo\"\n  }), mdx(\"h3\", null, \"Linux Foundation 2022 Program Timeline\"), mdx(\"div\", null, mdx(\"h4\", null, mdx(\"strong\", null, \"Full-Time Terms:\")), mdx(\"ul\", null, mdx(\"li\", {\n    className: \"lfx-timeline_terms\"\n  }, mdx(\"strong\", null, \"Spring Term: March 1st - May 31st\")), mdx(\"ul\", null, mdx(\"li\", null, \"mentorships available on LFX Mentorship: Jan 15th, 2022\"), mdx(\"li\", null, \"applications open: Jan 15th - Feb 12th (4 weeks)\"), mdx(\"li\", null, \"application review/admission decisions/HR paperwork: Feb 15th - Feb 26th\"))), mdx(\"ul\", null, mdx(\"li\", {\n    className: \"lfx-timeline_terms\"\n  }, mdx(\"strong\", null, \"Summer Term: June 1st - August  31st\")), mdx(\"ul\", null, mdx(\"li\", null, \"mentorships available on LFX Mentorship: April 15th, 2022\"), mdx(\"li\", null, \"applications open: April 15th - May 14th (4 weeks)\"), mdx(\"li\", null, \"application review/admission decisions/HR paperwork: May 17th - May 31st\"))), mdx(\"ul\", null, mdx(\"li\", {\n    className: \"lfx-timeline_terms\"\n  }, mdx(\"strong\", null, \"Fall Term: September 1st - Nov 30th\")), mdx(\"ul\", null, mdx(\"li\", null, \"mentorships available on LFX Mentorship: July 15th, 2022\"), mdx(\"li\", null, \"applications open: July 15th - August 12th (4 weeks)\"), mdx(\"li\", null, \"application review/admission decisions/HR paperwork: August 12th - August 31st\"))), mdx(\"u\", null, \"Part-time terms\"), \" will start on the same schedule and last six versus three months.\"), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h2\", null, \"2022 Project Details\"), mdx(\"br\", null), mdx(\"h3\", null, \"About Layer5 and its projects\"), mdx(\"p\", null, \"At Layer5, we champion developer-defined infrastructure, giving engineers the power to reshape application delivery. We empower operators in reimagining how they manage modern infrastructure: collaboratively.\"), mdx(\"h3\", null, \"About Meshery\"), mdx(\"p\", null, \"Meshery is the open source, service mesh management plane for enabling the adoption, operation, and management of any service mesh and their workloads. There are many service meshes available. Software-defined networking is difficult to understand. Meshery\\u2019s aim is to make the power of the network available to the rest of us.\"), mdx(\"h3\", null, \"About our Community\"), mdx(\"p\", null, \"Layer5 is all about \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://layer5.io/community\"\n  }, \"its community\"), \" of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://layer5.io/community/members\"\n  }, \"contributors\"), \". We have designed an onboarding program customized to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://layer5.io/community/newcomers\"\n  }, \"meet newcomers\"), \" where they\\u2019re at and developed an onboarding buddy program, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://layer5.io/community/meshmates\"\n  }, \"MeshMates\"), \" with individuals dedicated to assisting contributors. Layer5 and Meshery have been around for a year and half and have a healthy, growing community of 300+ contributors. The layer5.io website itself is open source and created by 140+ of our contributors.\"), mdx(\"p\", null, \"Technical writers and other contributors are what comprise Layer5 - an open organization, built for the community by the community. Many student contributors have been placed into new jobs with technology companies like Red Hat, Microsoft, and VMware to name a few of the larger organizations. Layer5 expects much from interns and in return, we put them on stage at DockerCon and KubeCon. We promote them and uplift their works. There are \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.linkedin.com/company/layer5\"\n  }, \"many\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://layer5.io/blog/category/community\"\n  }, \"many examples\"), \" of this on the layer5.io websites. A number of former interns are now project maintainers.\"), mdx(\"h2\", null, \"LFX Mentorship 2022 Project\"), mdx(\"br\", null), mdx(\"h3\", null, \"About the project\"), mdx(\"br\", null), mdx(\"h3\", null, \"Meshery\"), mdx(\"br\", null), mdx(\"h4\", null, \"Integration of Open Policy Agent (OPA) and Meshery\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Description: As a golang library integrate OPA into Meshery Server, enabling users to define policies to dictate the manner in which their cloud native infrastructure is to both run and be configured. Design an extensible policy framework in which rules may be augmented and dynamically supplied at runtime. \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Recommended Skills: golang, rego, reactjs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Mentor(s): \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/leecalcote\"\n  }, \"Lee Calcote\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/revolyssup\"\n  }, \"Ashish Tiwari\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Upstream Issue (URL): \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/meshery/meshery/issues/544\"\n  }, \"https://github.com/meshery/meshery/issues/544\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"LFX URL\"), \": \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/ea439582-8c63-498d-9066-dc563ce1172e\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/ea439582-8c63-498d-9066-dc563ce1172e\")))), mdx(\"h4\", null, \"User Interface Overhaul: State Management w/Apollo/GraphQL\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Description: Overcome current architectural issues of:\\n1) No Caching - In Meshery UI, List of adapters is a state that is being used in multiple components i.e Settings , Dashboard , Connection Wizard and Performance. Refetching the data on every mount of each of these components degrades the user experience. The same goes for all the other data that are being used across multiple components.\\n2) Multiple Sources of Truth - There is no single source of truth in Meshery UI as all react components manage their own state. Since Meshery UI has to deal with data that frequently changes, like Control Plane Data, Meshsync data etc. it will become hard to keep them in sync if they all manage their own copy of them  in their local state.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Recommended Skills: reactjs, apollo, graphql, redux\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Mentor(s): \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/leecalcote\"\n  }, \"Lee Calcote\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/sudo-NithishKarthik\"\n  }, \"Nithish Karthik\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Upstream Issue (URL): \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/meshery/meshery/issues/5094\"\n  }, \"https://github.com/meshery/meshery/issues/5094\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"LFX URL\"), \": \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/7592d7db-5517-445b-95e8-14144c49e9b1\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/7592d7db-5517-445b-95e8-14144c49e9b1\")))), mdx(\"h3\", null, \"Service Mesh Performance\"), mdx(\"br\", null), mdx(\"h4\", null, \"Adaptive Load Controller\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Description: The adaptive load controller is to execute optimization routines recursivley to determine the maximum load a system can sustain. The maximum load is usually defined by the maximum requests per second (rps) the system can handle. The metrics (CPU usage, latency etc) collected from the system under test are the constraints we provide to judge whether a system under test (SUT) is sustaining the load.\")), mdx(\"p\", null, \"A use-case that fits very well is be the ability to use it to run performance tests on a schedule and track the maximum load a system can handle over time. This could give insights to performance improvements or degradations.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Recommended Skills: golang, grpc, docker, kubernetes\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Mentor(s): \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/leecalcote\"\n  }, \"Lee Calcote\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/gyohuangxin\"\n  }, \"Xin Huang\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Upstream Issue (URL): \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/service-mesh-performance/service-mesh-performance/issues/350\"\n  }, \"https://github.com/service-mesh-performance/service-mesh-performance/issues/350\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"LFX URL\"), \": \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/9959277e-eefc-4c88-83b6-e8c4b011d557\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/9959277e-eefc-4c88-83b6-e8c4b011d557\")))), mdx(\"h4\", null, \"Convergence of Network and Graph topologies\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Description: Use Neo4j's ability to create graph projections, which copy a subgraph to RAM so that algorithms can be efficiently run. This opens the door to leveraging algorithms in the areas of Centrality, Community Detection, Pathfinding, Topological Link Prediction, etc. Bringing to bear advances made in Machine Learning / AI / recommendation systems, fraud detection could really help to derive meaning and comprehension for future tools. Another example is how ML + graph approaches are used to find and determine the optimal molecular structure of atoms such that desired physical properties are targeted. This approach could be applied to the problem of workload sizing and estimation for service mesh operators and would-be adopters.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Recommended Skills: cuelang, golang, neo4j\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Mentor(s): \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/leecalcote\"\n  }, \"Lee Calcote\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/nicholasjackson\"\n  }, \"Nic Jackson\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Upstream Issue (URL): \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/service-mesh-performance/service-mesh-performance/issues/351\"\n  }, \"https://github.com/service-mesh-performance/service-mesh-performance/issues/351\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"LFX URL\"), \": \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/2c4510d6-7b73-4082-a3f4-209f61767263\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/2c4510d6-7b73-4082-a3f4-209f61767263\")))), mdx(\"h3\", null, \"CNCF TAG Network and Observability\"), mdx(\"br\", null), mdx(\"h4\", null, \"Kubernetes ontology and subgraph module design\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Description: Network topologies and graph databases go hand-in-hand. The OpenAPI specifications for Kubernetes provides taxonomy, but augmenting a graph data model with formalized ontologies enables any number of capabilities, one of the more straightforward is the inferencing requisite for natural language processing, and consequently, a human-centric query / response interaction becomes becomes possible. More importantly, more advanced systems can be built when a graph data model of connected systems is upgraded to be a knowledge semantic graph. Deliverables (among other items):\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"a Kubernetes ontology using OWL as a popular (and mature) way of doing this.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"a cuelang-based component generator\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Recommended Skills: cuelang, golang, neo4j\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Mentor(s): \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/leecalcote\"\n  }, \"Lee Calcote\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/halcyondude\"\n  }, \"Matt Young\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Issue: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/cncf/tag-network/issues/21\"\n  }, \"https://github.com/cncf/tag-network/issues/21\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"LFX URL\"), \": \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://mentorship.lfx.linuxfoundation.org/project/df449a23-ac20-4ee9-8a2c-e0e5d08ba727\"\n  }, \"https://mentorship.lfx.linuxfoundation.org/project/df449a23-ac20-4ee9-8a2c-e0e5d08ba727\")), mdx(\"br\", null))), mdx(\"h2\", null, \"Additional information\"), mdx(\"br\", null), mdx(\"h3\", null, \"Previous experience with technical writers or documentation\"), mdx(\"p\", null, \"Our mentors have managed teams of technical writers working on documenting enterprise-grade software at large technology companies (Cisco, Seagate, SolarWinds). During the span of time, he has worked with technical writers in DITA and post-DITA environments (from Word to FrameMaker, structured writing, online help, various CMSes, git). Our mentors have worked with technical writers on documentation strategy, creating document sets, covering the full spectrum of reader personas.\"), mdx(\"p\", null, \"We interact daily over Slack, and have an open source project \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://layer5.io/community/calendar\"\n  }, \"meeting everyday\"), \", which are posted to the community \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.youtube.com/c/Layer5io?sub_confirmation=1\"\n  }, \"YouTube channel\"), \".\"), mdx(\"div\", {\n    className: \"apply-button\"\n  }, mdx(\"h3\", null, mdx(Button, {\n    $primary: true,\n    title: \"Participate\",\n    $url: \"http://slack.layer5.io\",\n    $external: true,\n    mdxType: \"Button\"\n  })))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Linux Foundation 2022","program":"Linux Foundation"}},{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Linux Foundation 2021\",\n  \"thumbnail\": \"./Linux_Foundation_logo.svg\",\n  \"darkthumbnail\": \"./lfx-white.svg\",\n  \"permalink\": \"lfx/2021\",\n  \"program\": \"Linux Foundation\",\n  \"programSlug\": \"lfx\",\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ProgramsWrapper, {\n    mdxType: \"ProgramsWrapper\"\n  }, mdx(\"img\", {\n    src: lfx_logo,\n    alt: \"lfx_logo\"\n  }), mdx(\"h3\", null, \"Linux Foundation 2021 Program Timeline\"), mdx(\"div\", null, mdx(\"h4\", null, mdx(\"strong\", null, \"Full-Time Terms:\")), mdx(\"ul\", null, mdx(\"li\", {\n    className: \"lfx-timeline_terms\"\n  }, mdx(\"strong\", null, \"Spring Term: March 1st - May 31st\")), mdx(\"ul\", null, mdx(\"li\", null, \"mentorships available on LFX Mentorship: Jan 15th, 2021\"), mdx(\"li\", null, \"applications open: Jan 15th - Feb 12th (4 weeks)\"), mdx(\"li\", null, \"application review/admission decisions/HR paperwork: Feb 15th - Feb 26th\"))), mdx(\"ul\", null, mdx(\"li\", {\n    className: \"lfx-timeline_terms\"\n  }, mdx(\"strong\", null, \"Summer Term: June 1st - August  31st\")), mdx(\"ul\", null, mdx(\"li\", null, \"mentorships available on LFX Mentorship: April 15th, 2021\"), mdx(\"li\", null, \"applications open: April 15th - May 14th (4 weeks)\"), mdx(\"li\", null, \"application review/admission decisions/HR paperwork: May 17th - May 31st\"))), mdx(\"ul\", null, mdx(\"li\", {\n    className: \"lfx-timeline_terms\"\n  }, mdx(\"strong\", null, \"Fall Term: September 1st - Nov 30th\")), mdx(\"ul\", null, mdx(\"li\", null, \"mentorships available on LFX Mentorship: July 15th, 2021\"), mdx(\"li\", null, \"applications open: July 15th - August 12th (4 weeks)\"), mdx(\"li\", null, \"application review/admission decisions/HR paperwork: August 12th - August 31st\"))), mdx(\"u\", null, \"Part-time terms\"), \" will start on the same schedule and last six versus three months.\"), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h3\", null, \"Program Administrators and Mentors\"), mdx(\"ul\", null, mdx(\"li\", null, \"Lee Calcote (\", mdx(\"a\", {\n    href: \"https://github.com/leecalcote\"\n  }, \"@leecalcote\"), \")\"), mdx(\"li\", null, \"Abishek Kumar (\", mdx(\"a\", {\n    href: \"https://github.com/kumarabd\"\n  }, \"@kumarabd\"), \")\"), mdx(\"li\", null, \"Utkarsh Srivastava (\", mdx(\"a\", {\n    href: \"https://github.com/utkarsh-pro\"\n  }, \"@utkarsh-pro\"), \")\")), mdx(\"h2\", null, \"2021 Project Details\"), mdx(\"br\", null), mdx(\"h4\", {\n    style: {\n      \"fontSize\": \"1.75rem\",\n      \"textAlign\": \"center\",\n      \"textDecoration\": \"underline\"\n    }\n  }, \"Project: API Docs for Meshery\\u2019s Cloud Native Patterns Playground - Layer5\"), mdx(\"br\", null), mdx(\"h3\", null, \"Layer5\"), mdx(\"p\", null, \"At Layer5, we champion developer-defined infrastructure, giving engineers the power to reshape application delivery. We empower operators in reimagining how they manage modern infrastructure: collaboratively.\"), mdx(\"h3\", null, \"Meshery\"), mdx(\"p\", null, \"As a self-service engineering platform, Meshery enables collaborative design and operation of cloud and cloud native infrastructure.\"), mdx(\"h3\", null, \"About our Community\"), mdx(\"p\", null, \"Layer5 is all about \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://layer5.io/community\"\n  }, \"its community\"), \" of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://layer5.io/community/members\"\n  }, \"contributors\"), \". We have designed an onboarding program customized to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://layer5.io/community/newcomers\"\n  }, \"meet newcomers\"), \" where they\\u2019re at and developed an onboarding buddy program, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://layer5.io/community/meshmates\"\n  }, \"MeshMates\"), \" with individuals dedicated to assisting contributors. Layer5 and Meshery have been around for a year and half and have a healthy, growing community of 300+ contributors. The layer5.io website itself is open source and created by 140+ of our contributors.\"), mdx(\"p\", null, \"Technical writers and other contributors are what comprise Layer5 - an open organization, built for the community by the community. Many student contributors have been placed into new jobs with technology companies like Red Hat, Microsoft, and VMware to name a few of the larger organizations. Layer5 expects much from interns and in return, we put them on stage at DockerCon and KubeCon. We promote them and uplift their works. There are \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.linkedin.com/company/layer5\"\n  }, \"many\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://layer5.io/blog/category/community\"\n  }, \"many examples\"), \" of this on the layer5.io websites. A number of former interns are now project maintainers.\"), mdx(\"h2\", null, \"LFX Mentorship 2021 Project\"), mdx(\"br\", null), mdx(\"h3\", null, \"About the project\"), mdx(\"br\", null), mdx(\"p\", null, mdx(\"i\", null, \"Goal: Create the world\\u2019s cloud native playground.\")), mdx(\"p\", null, \"Meshery\\u2019s genesis is that of helping teach people about cloud native technology and enabling to operate this type of cloud native infrastructure confidently. The proposed project is aimed at furthering this mission with interactive API documentation connected to a cloud native learning playground (a running instance of Meshery). This project sits squarely in the crosshairs of our purpose - both for Meshery and Layer5.\"), mdx(\"h3\", null, \"The project\\u2019s scope\"), mdx(\"p\", null, \"We will create a new set of interactive documentation for Meshery users to both learn how to use Meshery, but also confidently adopt and operate any cloud native technology. We have a number of community volunteers lined up and committed to collaboration on the creation of this cloud native playground. The technical writer will collaborate with other engineers, working with Swagger and Docusaurus.\"), mdx(\"p\", null, \"Work that is out-of-scope for this project:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Creation of the Open API specification for Meshery\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Deployment of Docusarous\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Visual design of the site\")), mdx(\"p\", null, \"We will bring support from the Meshery CI WG, provide a full-time visual and user experience designer and well as three dedicated core maintainers of Meshery. We have one strong technical writer candidate for this project and estimate that this work will take six months to complete. We will support this technical writer and prioritize any dependencies on the project or community that they may have.\"), mdx(\"h3\", null, \"Measuring project success\"), mdx(\"p\", null, \"To measure success, we will track:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The number of new API playground users (quantitative - tracked by the system)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The number of repeat visits of the same users (quantitative - tracked by the system)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The number of failed attempts to invoke an API (signifies poor documentation) (quantitative - tracked by the system)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feedback from users on how intuitive the documentation is (qualitative - tracked through user polls)\")), mdx(\"p\", null, \"We would consider the project successful if, after publication of the new API documentation:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The total count of performance tests run by Meshery increases by 10% (see the current count on \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://meshery.io\"\n  }, \"https://meshery.io\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The number of new Meshery users increases by 20% (currently at ~1,000 users)\")), mdx(\"br\", null), mdx(\"h2\", null, \"Additional information\"), mdx(\"br\", null), mdx(\"h3\", null, \"Previous experience with technical writers or documentation\"), mdx(\"p\", null, \"Our mentors have managed teams of technical writers working on documenting enterprise-grade software at large technology companies (Cisco, Seagate, SolarWinds). During the span of time, he has worked with technical writers in DITA and post-DITA environments (from Word to FrameMaker, structured writing, online help, various CMSes, git). Our mentors have worked with technical writers on documentation strategy, creating document sets, covering the full spectrum of reader personas.\"), mdx(\"p\", null, \"We interact daily over Slack, and have an open source project \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://layer5.io/community/calendar\"\n  }, \"meeting everyday\"), \", which are posted to the community \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.youtube.com/c/Layer5io?sub_confirmation=1\"\n  }, \"YouTube channel\"), \".\"), mdx(\"div\", {\n    className: \"apply-button\"\n  }, mdx(\"h3\", null, mdx(Button, {\n    $primary: true,\n    title: \"Participate\",\n    $url: \"http://slack.layer5.io\",\n    $external: true,\n    mdxType: \"Button\"\n  })))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Linux Foundation 2021","program":"Linux Foundation"}}]}},"pageContext":{"program":"Linux Foundation"}},"staticQueryHashes":["1485533831","3750885592","4047814605"],"slicesMap":{},"matchPath":"/programs/lfx"}