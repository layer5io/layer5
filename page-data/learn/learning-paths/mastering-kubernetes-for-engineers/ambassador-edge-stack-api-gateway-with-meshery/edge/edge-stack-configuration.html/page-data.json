{"componentChunkName":"component---src-templates-learn-chapter-js","path":"/learn/learning-paths/mastering-kubernetes-for-engineers/ambassador-edge-stack-api-gateway-with-meshery/edge/edge-stack-configuration.html","result":{"data":{"chapter":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"docType\": \"Chapter\",\n  \"id\": \"edge-stack-configuration\",\n  \"chapterTitle\": \"Edge Stack Configuration\",\n  \"description\": \"This chapter covers the configuration of the Edge Stack, including importing and deploying Edge Stack Custom Resource Definitions (CRDs) and YAML files. You will learn how to configure the necessary Ambassador Cloud license and set up essential components like Listener and Mapping resources. Finally, you will deploy a sample Quote service application to route traffic through Edge Stack.\",\n  \"videos\": 0,\n  \"lectures\": 4,\n  \"order\": 2\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ChapterStyle, {\n    mdxType: \"ChapterStyle\"\n  }, mdx(\"p\", null, \"In this chapter, you will import and deploy Edge Stack Custom Resource Definitions (CRDs) and YAML files. You'll learn how to configure the necessary Ambassador Cloud license and set up essential components like Listener and Mapping resources. Finally, you'll deploy a sample Quote service application to route traffic through Edge Stack.\"), mdx(\"h2\", {\n    className: \"chapter-sub-heading\"\n  }, \"Steps\"), mdx(\"h3\", {\n    className: \"chapter-sub-heading\"\n  }, \"Import Edge Stack CRD YAML and Deploy\"), mdx(\"p\", null, \"The Edge Stack CRD YAML file typically contains the definitions for custom resources used by Edge Stack. These definitions include the schemas and validation rules for resources like Mappings, Hosts, TLSContexts, RateLimits, Filters, and more. These custom resources allow you to define and manage the various aspects of your API gateway configuration, such as routing, authentication, rate limiting, and TLS settings, directly within your Kubernetes cluster.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"In the left sidebar, click on the upward arrow symbol (import icon) to import the file into Meshery.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"In the modal that appears:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Enter a name for your design in the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Design File Name\"), \" field (e.g. \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Edge-stack-crd\"), \").\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Select \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Kubernetes Manifest\"), \" from the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Design Type\"), \" dropdown menu.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Choose \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Url upload\"), \" for the upload method, and paste in the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://app.getambassador.io/yaml/edge-stack/3.11.0/aes-crds.yaml\"\n  }, \"Edge-Stack-crd\"), \" YAML link.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Then, click on \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Import\"), \".\")))), mdx(\"a\", {\n    href: es1\n  }, mdx(\"img\", {\n    src: es1,\n    width: \"100%\",\n    align: \"center\"\n  })), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Click on the name of the design on the Designs tab to display the visual representations of the various Kubernetes resources and their relationships on the canvas.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Click \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Actions\"), \" in the top right corner and click on Deploy (double tick).\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"To check the status of your deployment, click on the notification icon on the top right corner.\"))), mdx(\"a\", {\n    href: es2\n  }, mdx(\"img\", {\n    src: es2,\n    width: \"100%\",\n    align: \"center\"\n  })), mdx(\"ol\", {\n    \"start\": 6\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Click on \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Open In visualizer\"), \" to navigate to the Visualize section and see a pre-filtered view of the deployed resources in the cluster.\")), mdx(\"a\", {\n    href: es3\n  }, mdx(\"img\", {\n    src: es3,\n    width: \"100%\",\n    align: \"center\"\n  })), mdx(\"h3\", {\n    className: \"chapter-sub-heading\"\n  }, \"Import the Edge Stack YAML \"), mdx(\"p\", null, \"Now that the CRDs have been deployed, go ahead to deploy the main Edge Stack Configuration.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Follow the previous Steps to Import the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://app.getambassador.io/yaml/edge-stack/3.11.0/aes.yaml\"\n  }, \"Edge Stack YAML\"), \" into Kanvas with the name \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Edge-Stack\"), \".\")), mdx(\"a\", {\n    href: es4\n  }, mdx(\"img\", {\n    src: es4,\n    width: \"100%\",\n    align: \"center\"\n  })), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"You can use the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Group Components\"), \" icon on the dock below to group resources based on shared labels or annotations.\")), mdx(\"a\", {\n    href: es5\n  }, mdx(\"img\", {\n    src: es5,\n    width: \"100%\",\n    align: \"center\"\n  })), mdx(\"h3\", {\n    className: \"chapter-sub-heading\"\n  }, \"Configure Edge Stack License\"), mdx(\"p\", null, \"Ambassador Edge Stack requires a valid license to operate. Generate your \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://app.getambassador.io/cloud/edge-stack/license/new\"\n  }, \"license token\"), \" to establish a secure connection between Edge Stack and Ambassador Cloud.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Complete the steps on the Ambassador Cloud to generate your license token, then copy the token. Be sure to convert it into \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"base64\"), \" format. You can use an online tool for this conversion.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Click on the Secret component on the design canvas and input the token.\"))), mdx(\"a\", {\n    href: es6\n  }, mdx(\"img\", {\n    src: es6,\n    width: \"100%\",\n    align: \"center\"\n  })), mdx(\"h3\", {\n    className: \"chapter-sub-heading\"\n  }, \"Deploy Edge Stack \"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Click \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Actions\"), \" in the top right corner and click on Deploy (double tick).\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Click on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Open In visualizer\"), \" to navigate to the Visualize section and see a pre-filtered view of the deployed resources in the cluster.\"))), mdx(\"a\", {\n    href: es10\n  }, mdx(\"img\", {\n    src: es10,\n    width: \"100%\",\n    align: \"center\"\n  })), mdx(\"h3\", {\n    className: \"chapter-sub-heading\"\n  }, \"Listener Custom Resource\"), mdx(\"p\", null, \"The Listener Custom Resource tells Ambassador Edge Stack what port to listen on.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Copy the following the YAML and save it to a file called \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"listener.yaml\"), \" , then import it into Kanvas.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-YAML\"\n  }, \"---\\napiVersion: getambassador.io/v3alpha1\\nkind: Listener\\nmetadata:\\n  name: edge-stack-listener-8080\\n  namespace: ambassador\\nspec:\\n  port: 8080\\n  protocol: HTTP\\n  securityModel: XFP\\n  hostBinding:\\n    namespace:\\n      from: ALL\\n---\\napiVersion: getambassador.io/v3alpha1\\nkind: Listener\\nmetadata:\\n  name: edge-stack-listener-8443\\n  namespace: ambassador\\nspec:\\n  port: 8443\\n  protocol: HTTPS\\n  securityModel: XFP\\n  hostBinding:\\n    namespace:\\n      from: ALL\\nEOF\\n\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Deploy the resource on Kanvas.\")), mdx(\"h3\", {\n    className: \"chapter-sub-heading\"\n  }, \"Mapping Resource\"), mdx(\"p\", null, \"Create a Mapping configuration that instructs Edge Stack on how and where to route traffic. In the YAML file below, any request coming to the specified \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"hostname\"), \" with the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"prefix\"), \" /backend/ will be directed to the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"quote service\"), \".\"), mdx(\"p\", null, \"Copy the following the YAML and save it to a file called \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"mapping.yaml\"), \" , then import it into Kanvas.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-YAML\"\n  }, \"apiVersion: getambassador.io/v3alpha1\\nkind: Mapping\\nmetadata:\\n  name: quote-backend\\nspec:\\n  hostname: \\\"*\\\"\\n  prefix: /backend/\\n  service: quote\\n  docs:\\n    path: \\\"/.ambassador-internal/openapi-docs\\\"\\n\\n\")), mdx(\"h3\", {\n    className: \"chapter-sub-heading\"\n  }, \"Deploy Quote Service\"), mdx(\"p\", null, \"Next, import the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://app.getambassador.io/yaml/v2-docs/3.9.1/quickstart/qotm.yaml\"\n  }, \"Quote Service YAML\"), \" and deploy it on Kanvas. This step will create the necessary deployment and service resources for the Quote service within your Kubernetes cluster, allowing you to see how Edge Stack manages and routes traffic to this backend service.\"), mdx(MesheryDesignEmbed, {\n    embedId: \"embedded-design-d429e684-c42a-4c14-816b-b4dddb4b6d40\",\n    embedScriptSrc: \"/embed-test/embedded-design-edge-stack.js\",\n    mdxType: \"MesheryDesignEmbed\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"chapterTitle":"Edge Stack Configuration","description":"This chapter covers the configuration of the Edge Stack, including importing and deploying Edge Stack Custom Resource Definitions (CRDs) and YAML files. You will learn how to configure the necessary Ambassador Cloud license and set up essential components like Listener and Mapping resources. Finally, you will deploy a sample Quote service application to route traffic through Edge Stack."},"fields":{"slug":"learn/learning-paths/mastering-kubernetes-for-engineers/ambassador-edge-stack-api-gateway-with-meshery/edge/edge-stack-configuration","course":"ambassador-edge-stack-api-gateway-with-meshery","learnpath":"mastering-kubernetes-for-engineers","chapter":"edge-stack-configuration"}},"course":{"nodes":[{"frontmatter":{"courseTitle":"Ambassador Edge Stack API Gateway with Meshery","meshesYouLearn":[{"imagepath":{"childImageSharp":null,"extension":"svg","publicURL":"/static/731763d720780a49c2ffdfede8c28f4b/istio.svg"},"name":"Istio"},{"imagepath":{"childImageSharp":null,"extension":"svg","publicURL":"/static/e947dd02a61b499e235fe147249292c6/ambassador-color.svg"},"name":"edge"},{"imagepath":{"childImageSharp":null,"extension":"svg","publicURL":"/static/b4f4020971de42f6fb2497075a67f325/linkerd.svg"},"name":"Linkerd"}]},"fields":{"slug":"learn/learning-paths/mastering-kubernetes-for-engineers/ambassador-edge-stack-api-gateway-with-meshery"}}]},"TOC":{"nodes":[{"frontmatter":{"order":4,"chapterTitle":"Conclusion"},"fields":{"section":"edge","chapter":"conclusion"}},{"frontmatter":{"order":3,"chapterTitle":"Interpreting the Edge Stack Meshery Design"},"fields":{"section":"edge","chapter":"design-interpretation"}},{"frontmatter":{"order":1,"chapterTitle":"Introduction"},"fields":{"section":"edge","chapter":"introduction"}},{"frontmatter":{"order":2,"chapterTitle":"Edge Stack Configuration"},"fields":{"section":"edge","chapter":"edge-stack-configuration"}}]},"serviceMeshesList":{"nodes":[{"fields":{"section":"edge"}},{"fields":{"section":"edge"}},{"fields":{"section":"edge"}},{"fields":{"section":"edge"}}]}},"pageContext":{"learnpath":"mastering-kubernetes-for-engineers","slug":"learn/learning-paths/mastering-kubernetes-for-engineers/ambassador-edge-stack-api-gateway-with-meshery/edge/edge-stack-configuration","course":"ambassador-edge-stack-api-gateway-with-meshery","section":"edge","chapter":"edge-stack-configuration","pageType":"chapter"}},"staticQueryHashes":["3750885592","4047814605"],"slicesMap":{},"matchPath":"learn/learning-paths/mastering-kubernetes-for-engineers/ambassador-edge-stack-api-gateway-with-meshery/edge/edge-stack-configuration"}