{"componentChunkName":"component---src-templates-learn-chapter-js","path":"/learn/learning-paths/mastering-kubernetes-for-engineers/explore-dapr-with-meshery/dapr/view-application-logs.html","result":{"data":{"chapter":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"docType\": \"Chapter\",\n  \"id\": \"view-application-logs\",\n  \"chapterTitle\": \"View Application Logs\",\n  \"description\": \"Use Meshery's interactive terminal to view logs of applications\",\n  \"videos\": 0,\n  \"lectures\": 4,\n  \"order\": 6\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ChapterStyle, {\n    mdxType: \"ChapterStyle\"\n  }, \"In this chapter, we will explore how Dapr utilizes its [API constructs](https://docs.dapr.io/concepts/building-blocks-concept/) to facilitate communication and manage the state of application data within this architecture by observing the container logs.\", mdx(\"h3\", {\n    className: \"chapter-sub-heading\"\n  }, \"Python Application Logs\"), mdx(\"p\", null, \"The Python application code above generates messages that contain data with an \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"orderId\"), \" that increments once per second.\"), mdx(\"p\", null, \"Here's a snippet from the Python script in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"app.js\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"dapr_port = os.getenv(\\\"DAPR_HTTP_PORT\\\", 3500)\\ndapr_url = \\\"http://localhost:{}/neworder\\\".format(dapr_port)\\n\\nn = 0\\nwhile True:\\n    n += 1\\n    message = {\\\"data\\\": {\\\"orderId\\\": n}}\\n\\n    try:\\n        response = requests.post(dapr_url, json=message)\\n    except Exception as e:\\n        print(e)\\n\\n    time.sleep(1)\\n\")), mdx(\"p\", null, \"The Dapr sidecar for the Python application sends a POST request to the Dapr sidecar of the Node.js application using the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Dapr service invocation API\"), \". Here's a breakdown of what happens;\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The Python app sends a POST request to its sidecar at http://localhost:3500/v1.0/invoke/nodeapp/method/neworder. \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Note: http://localhost:3500 is the default listening port for Dapr\"), \".  \")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The sidecar for the Python app invokes the nodeapp service through its own Dapr sidecar.\"))), mdx(\"p\", null, \"The Python app does not need to know the exact address or port of the Node.js service, it simply makes a request to its sidecar, which handles the routing.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Steps to Stream Python Application Logs\"), \":\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Click on the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"python-app\"), \" pod.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"On the right sidebar, click on \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Action\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Click on \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Stream Container logs\"), \".\")), mdx(\"a\", {\n    href: daprStream\n  }, mdx(\"img\", {\n    src: daprStream,\n    width: \"100%\",\n    align: \"center\"\n  })), mdx(\"p\", null, \"The logs show the daprd container logs with a POST request made to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/neworder\"), \" endpoint.\"), mdx(\"h3\", {\n    className: \"chapter-sub-heading\"\n  }, \"Node.js Application Logs\"), mdx(\"p\", null, \"Follow the same steps above to get the logs for the Node.js application. The logs show API calls made to the state store for persisting order data.\"), mdx(\"p\", null, \"Here's what can be observed from the logs:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The Dapr sidecar of the Node.js application listens on port 3500 for incoming HTTP requests.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The sidecar receives the invocation request sent from the sidecar of the Python app and routes it to the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"/neworder\"), \" endpoint in the Node.js application.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The sidecar makes a POST request to the state store endpoint (/v1.0/state/statestore) to persist the state information in Redis. This endpoint is part of the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Dapr state management API\"), \"  and is mapped to the configured state store component.\")), mdx(\"p\", null, \"By analyzing these logs, we gained a deeper understanding of how Dapr's APIs such as the state management API and service invocation API work together to enable service-service communication and efficient management of application state.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"chapterTitle":"View Application Logs","description":"Use Meshery's interactive terminal to view logs of applications"},"fields":{"slug":"learn/learning-paths/mastering-kubernetes-for-engineers/explore-dapr-with-meshery/dapr/view-application-logs","course":"explore-dapr-with-meshery","learnpath":"mastering-kubernetes-for-engineers","chapter":"view-application-logs"}},"course":{"nodes":[{"frontmatter":{"courseTitle":"Explore Dapr with Meshery","meshesYouLearn":[{"imagepath":{"childImageSharp":null,"extension":"svg","publicURL":"/static/731763d720780a49c2ffdfede8c28f4b/istio.svg"},"name":"Istio"},{"imagepath":{"childImageSharp":null,"extension":"svg","publicURL":"/static/b4f4020971de42f6fb2497075a67f325/linkerd.svg"},"name":"Linkerd"},{"imagepath":{"childImageSharp":null,"extension":"svg","publicURL":"/static/8d7f9f346053d56a30dbdc65e3ba18ef/dapr-color.svg"},"name":"Dapr"}]},"fields":{"slug":"learn/learning-paths/mastering-kubernetes-for-engineers/explore-dapr-with-meshery"}}]},"TOC":{"nodes":[{"frontmatter":{"order":7,"chapterTitle":"Conclusion"},"fields":{"section":"dapr","chapter":"conclusion"}},{"frontmatter":{"order":2,"chapterTitle":"Deploy Dapr Control Plane"},"fields":{"section":"dapr","chapter":"deploy-dapr-control-plane"}},{"frontmatter":{"order":4,"chapterTitle":"Deploy Dapr StateStore Component"},"fields":{"section":"dapr","chapter":"deploy-dapr-statestore-component"}},{"frontmatter":{"order":3,"chapterTitle":"Deploy Redis"},"fields":{"section":"dapr","chapter":"deploy-redis"}},{"frontmatter":{"order":5,"chapterTitle":"Deploy Python and NodeJS application"},"fields":{"section":"dapr","chapter":"deploy-python-and-nodejs-application"}},{"frontmatter":{"order":1,"chapterTitle":"Understanding How Dapr Works in a Kubernetes Cluster: A Visual Guide with Meshery"},"fields":{"section":"dapr","chapter":"introduction"}},{"frontmatter":{"order":6,"chapterTitle":"View Application Logs"},"fields":{"section":"dapr","chapter":"view-application-logs"}}]},"serviceMeshesList":{"nodes":[{"fields":{"section":"dapr"}},{"fields":{"section":"dapr"}},{"fields":{"section":"dapr"}},{"fields":{"section":"dapr"}},{"fields":{"section":"dapr"}},{"fields":{"section":"dapr"}},{"fields":{"section":"dapr"}}]}},"pageContext":{"learnpath":"mastering-kubernetes-for-engineers","slug":"learn/learning-paths/mastering-kubernetes-for-engineers/explore-dapr-with-meshery/dapr/view-application-logs","course":"explore-dapr-with-meshery","section":"dapr","chapter":"view-application-logs","pageType":"chapter"}},"staticQueryHashes":["3750885592","4047814605"],"slicesMap":{},"matchPath":"learn/learning-paths/mastering-kubernetes-for-engineers/explore-dapr-with-meshery/dapr/view-application-logs"}