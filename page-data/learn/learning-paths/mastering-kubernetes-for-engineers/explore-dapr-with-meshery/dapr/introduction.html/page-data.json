{"componentChunkName":"component---src-templates-learn-chapter-js","path":"/learn/learning-paths/mastering-kubernetes-for-engineers/explore-dapr-with-meshery/dapr/introduction.html","result":{"data":{"chapter":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"docType\": \"Chapter\",\n  \"id\": \"introduction\",\n  \"chapterTitle\": \"Understanding How Dapr Works in a Kubernetes Cluster: A Visual Guide with Meshery\",\n  \"description\": \"Learn how Dapr works by deploying Dapr and sample applications in a Kubernetes Cluster using Meshery.\",\n  \"videos\": 0,\n  \"lectures\": 4,\n  \"order\": 1\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ChapterStyle, {\n    mdxType: \"ChapterStyle\"\n  }, mdx(\"h2\", {\n    className: \"chapter-sub-heading\"\n  }, \"Introduction\"), mdx(\"p\", null, \"In this tutorial, you will explore how \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://dapr.io/\"\n  }, \"Dapr\"), \"(Distributed Application Runtime) operates within a Kubernetes cluster. \"), mdx(\"p\", null, \"Using Meshery you will deploy the Dapr Helm chart along with sample applications: a Python application that generates messages and a Node.js application that consumes and stores those messages in a Redis state store, managed through Dapr's state store component model.\"), mdx(\"p\", null, \"Meshery's Kanvas visualization capabilities allow you to examine the components involved in this architecture and understand their relationships. This breakdown helps you see how Dapr interacts with the applications, enhancing your comprehension of its functionality.\"), mdx(\"p\", null, \"This tutorial expands on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/dapr/quickstarts/tree/master/tutorials/hello-kubernetes\"\n  }, \"Hello Kubernetes tutorial with Dapr\"), \", providing a visual approach to learning Dapr in a Kubernetes environment.\"), mdx(\"h2\", {\n    className: \"chapter-sub-heading\"\n  }, \"Dapr Architecture\"), mdx(\"p\", null, \"In a Dapr-enabled application, the sidecar architecture is central to how Dapr provides its functionalities. Each application pod in your Kubernetes cluster gets a Dapr sidecar injected, which acts as a proxy and mediator for service-to-service calls, state management, and other capabilities. This architecture allows Dapr to offer a set of APIs that simplify common microservice tasks such as \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"service invocation\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"state management\"), \", and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"pub/sub messaging\"), \".\"), mdx(\"p\", null, \"When one service needs to call another, the request is made to the local Dapr sidecar, which routes the request to the appropriate sidecar in the target service's pod. The target sidecar then forwards the request to its application.\"), mdx(\"p\", null, \"Similarly, when your application makes a state management request (e.g., saving or retrieving state), it communicates with its local Dapr sidecar. The sidecar then uses the configuration retrieved from the Dapr control plane to interact with the configured state store.\"), mdx(\"p\", null, \"This architecture ensures that your application remains loosely coupled and can leverage Dapr's capabilities without being tightly integrated with the infrastructure details. \"), mdx(\"p\", null, \"The diagram below illustrates this setup, providing a visual representation of how Dapr components interact within the architecture. We will explore more on these concepts in subsequent chapters.\"), mdx(\"a\", {\n    href: daprArchitecture\n  }, mdx(\"img\", {\n    src: daprArchitecture,\n    width: \"100%\",\n    align: \"center\"\n  })), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Prerequisite\"), \" \"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Access to Meshery (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.meshery.io/installation\"\n  }, \"Self-Hosted\"), \" or \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.meshery.io/installation/playground\"\n  }, \"Meshery Playground\"), \").\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Kubernetes Cluster connected to Meshery.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"Available Clusters:\")), \": If you are using a self-hosted Meshery deployment, connect to your Kubernetes cluster using this \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.meshery.io/installation/kubernetes\"\n  }, \"Guide\"), \". Alternatively, Meshery Playground users can use the live pre-registered Kubernetes connection. This tutorial uses a self-hosted Meshery deployment with a connected \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Minikube\"), \" cluster.\"), mdx(\"h2\", {\n    className: \"chapter-sub-heading\"\n  }, \"Learning Objectives\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Gain hands-on experience in deploying Dapr on a Kubernetes cluster using Meshery.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Learn how to visualize these components using Meshery and get a better understanding of the Dapr architecture and interactions.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Understand how to use Dapr's state management capabilities to persist data in a Redis state store, and see how the Node.js app interacts with the state store to save and retrieve data.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"chapterTitle":"Understanding How Dapr Works in a Kubernetes Cluster: A Visual Guide with Meshery","description":"Learn how Dapr works by deploying Dapr and sample applications in a Kubernetes Cluster using Meshery."},"fields":{"slug":"learn/learning-paths/mastering-kubernetes-for-engineers/explore-dapr-with-meshery/dapr/introduction","course":"explore-dapr-with-meshery","learnpath":"mastering-kubernetes-for-engineers","chapter":"introduction"}},"course":{"nodes":[{"frontmatter":{"courseTitle":"Explore Dapr with Meshery","meshesYouLearn":[{"imagepath":{"childImageSharp":null,"extension":"svg","publicURL":"/static/731763d720780a49c2ffdfede8c28f4b/istio.svg"},"name":"Istio"},{"imagepath":{"childImageSharp":null,"extension":"svg","publicURL":"/static/b4f4020971de42f6fb2497075a67f325/linkerd.svg"},"name":"Linkerd"},{"imagepath":{"childImageSharp":null,"extension":"svg","publicURL":"/static/8d7f9f346053d56a30dbdc65e3ba18ef/dapr-color.svg"},"name":"Dapr"}]},"fields":{"slug":"learn/learning-paths/mastering-kubernetes-for-engineers/explore-dapr-with-meshery"}}]},"TOC":{"nodes":[{"frontmatter":{"order":7,"chapterTitle":"Conclusion"},"fields":{"section":"dapr","chapter":"conclusion"}},{"frontmatter":{"order":2,"chapterTitle":"Deploy Dapr Control Plane"},"fields":{"section":"dapr","chapter":"deploy-dapr-control-plane"}},{"frontmatter":{"order":4,"chapterTitle":"Deploy Dapr StateStore Component"},"fields":{"section":"dapr","chapter":"deploy-dapr-statestore-component"}},{"frontmatter":{"order":5,"chapterTitle":"Deploy Python and NodeJS application"},"fields":{"section":"dapr","chapter":"deploy-python-and-nodejs-application"}},{"frontmatter":{"order":3,"chapterTitle":"Deploy Redis"},"fields":{"section":"dapr","chapter":"deploy-redis"}},{"frontmatter":{"order":1,"chapterTitle":"Understanding How Dapr Works in a Kubernetes Cluster: A Visual Guide with Meshery"},"fields":{"section":"dapr","chapter":"introduction"}},{"frontmatter":{"order":6,"chapterTitle":"View Application Logs"},"fields":{"section":"dapr","chapter":"view-application-logs"}}]},"serviceMeshesList":{"nodes":[{"fields":{"section":"dapr"}},{"fields":{"section":"dapr"}},{"fields":{"section":"dapr"}},{"fields":{"section":"dapr"}},{"fields":{"section":"dapr"}},{"fields":{"section":"dapr"}},{"fields":{"section":"dapr"}}]}},"pageContext":{"learnpath":"mastering-kubernetes-for-engineers","slug":"learn/learning-paths/mastering-kubernetes-for-engineers/explore-dapr-with-meshery/dapr/introduction","course":"explore-dapr-with-meshery","section":"dapr","chapter":"introduction","pageType":"chapter"}},"staticQueryHashes":["3750885592","4047814605"],"slicesMap":{},"matchPath":"learn/learning-paths/mastering-kubernetes-for-engineers/explore-dapr-with-meshery/dapr/introduction"}