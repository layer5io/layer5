{"componentChunkName":"component---src-templates-learn-chapter-js","path":"/learn/learning-paths/mastering-service-meshes-for-developers/introduction-to-service-meshes/linkerd/expose-services.html","result":{"data":{"chapter":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"docType\": \"Chapter\",\n  \"chapterTitle\": \"Exposing services through Linkerd Ingress\",\n  \"description\": \"Meshery, collaborative Kubernetes manager\",\n  \"videos\": 4,\n  \"lectures\": 12,\n  \"order\": 3\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ChapterStyle, {\n    mdxType: \"ChapterStyle\"\n  }, mdx(\"h2\", {\n    className: \"chapter-sub-heading\"\n  }, \"Ingressing and Egressing with Linkerd\"), mdx(\"p\", null, \"Linkerd's control plane does not include ingress or egress gateways. Linkerd allows you choice of your preferred ingress (and egress) controller.\"), mdx(\"h2\", {\n    className: \"chapter-sub-heading\"\n  }, \"How to use Ingress with Linkerd\"), mdx(\"p\", null, \"In case you're anticipating infusing Linkerd into your ingress controller's pods there is some setup required. Linkerd discovers\\nservices dependent on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \":authority\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Host\"), \" header. This permits Linkerd to comprehend what service a request is bound for without\\nbeing subject to DNS or IPs.\"), mdx(\"p\", null, \"In this workshop, you will use the NGINX Ingress Controller with Linkerd.\"), mdx(\"h3\", {\n    className: \"chapter-sub-heading\"\n  }, \" Installing NGINX Ingress Controller\"), mdx(\"p\", null, \"Using Meshery, select the Linkerd from the Management menu, and:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Enter ingress-nginx into the namespace field.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Click the (+) icon on the Apply Service Mesh Configuration card and select NGINX Ingress Controller to install the latest version of KIC.\")), mdx(\"h3\", null, \"Alternative: Manual installation\"), \"Follow this if the above steps did not work for you\", mdx(\"br\", null), mdx(\"br\", null), mdx(\"h4\", {\n    className: \"chapter-alt-heading\"\n  }, \" Installing NGINX Ingress Controller\"), mdx(\"p\", null, \"Install ingress controller using Docker Desktop\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.40.2/deploy/static/provider/cloud/deploy.yaml\\n\")), mdx(\"p\", null, \"Install the ingress controller using Minikube\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"minikube addons enable ingress\\n\")), mdx(\"h3\", {\n    className: \"chapter-sub-heading\"\n  }, \" \", \"Setting up Ingress controller with the sample application deployed\"), mdx(\"p\", null, \"Using Meshery, click the \\u27A1\\uFE0F icon on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Apply Custom Configuration\"), \" card and apply the following manifest to your cluster:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"apiVersion: extensions/v1beta1\\nkind: Ingress\\nmetadata:\\n  name: web-ingress\\n  namespace: emojivoto\\n  annotations:\\n    kubernetes.io/ingress.class: \\\"nginx\\\"\\n    nginx.ingress.kubernetes.io/configuration-snippet: |\\n      proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;\\n      grpc_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;\\n\\nspec:\\n  rules:\\n    - host: example.com\\n      http:\\n        paths:\\n          - backend:\\n              serviceName: web-svc\\n              servicePort: 80\\n\")), mdx(\"p\", null, \"Nginx ingress will include the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"l5d-dst-override\"), \" header to tell Linkerd where to direct the request.\\nYou'll need to include both the Kubernetes administration FQDN (web-svc.emojivoto.svc.cluster.local) and the destination servicePort.\"), mdx(\"p\", null, \"To test this, you need to get the external IP of your controller.\"), mdx(\"h4\", {\n    className: \"chapter-sub-heading\"\n  }, \" Docker Desktop\"), mdx(\"p\", null, \"You may use http://localhost or \", mdx(\"span\", null, \"http://\"), \"kubernetes.docker.internal or your host's IP address.\"), mdx(\"h4\", {\n    className: \"chapter-sub-heading\"\n  }, \" Minikube\"), mdx(\"p\", null, \"Expose your Kubernetes's cluster services to your localhost network:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"minikube tunnel\\n\")), mdx(\"p\", null, \"You may use http://localhost or You may use http://localhost: provided by the output of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"minikube tunnel\"), \".\"), mdx(\"h4\", {\n    className: \"chapter-sub-heading\"\n  }, \"Hosted Kubernetes\"), mdx(\"p\", null, \"Retrieve the external IP address by running:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"kubectl get svc --all-namespaces \\\\\\n  -l app=nginx-ingress,component=controller \\\\\\n  -o=custom-columns=EXTERNAL-IP:.status.loadBalancer.ingress[0].ip\\n\")), mdx(\"p\", null, \"You can now curl to your service without using port-forward, like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"curl -H \\\"Host: example.com\\\" http://{external-ip}\\n\")), mdx(\"br\", null)));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"chapterTitle":"Exposing services through Linkerd Ingress","description":"Meshery, collaborative Kubernetes manager"},"fields":{"slug":"learn/learning-paths/mastering-service-meshes-for-developers/introduction-to-service-meshes/linkerd/expose-services","course":"introduction-to-service-meshes","learnpath":"mastering-service-meshes-for-developers","chapter":"expose-services"}},"course":{"nodes":[{"frontmatter":{"courseTitle":"Introduction to Service Meshes - Hands On","meshesYouLearn":[{"imagepath":{"childImageSharp":null,"extension":"svg","publicURL":"/static/731763d720780a49c2ffdfede8c28f4b/istio.svg"},"name":"Istio"},{"imagepath":{"childImageSharp":null,"extension":"svg","publicURL":"/static/b4f4020971de42f6fb2497075a67f325/linkerd.svg"},"name":"Linkerd"}]},"fields":{"slug":"learn/learning-paths/mastering-service-meshes-for-developers/introduction-to-service-meshes"}}]},"TOC":{"nodes":[{"frontmatter":{"order":8,"chapterTitle":"Circuit Breaking"},"fields":{"section":"istio","chapter":"circuit-breaking"}},{"frontmatter":{"order":9,"chapterTitle":"Conclusion"},"fields":{"section":"istio","chapter":"conclusion"}},{"frontmatter":{"order":2,"chapterTitle":"Deploy a sample application"},"fields":{"section":"istio","chapter":"deploy-an-application"}},{"frontmatter":{"order":3,"chapterTitle":"Exposing services through Istio Ingress Gateway"},"fields":{"section":"istio","chapter":"expose-services"}},{"frontmatter":{"order":6,"chapterTitle":"Fault Injection"},"fields":{"section":"istio","chapter":"fault-injection"}},{"frontmatter":{"order":1,"chapterTitle":"Getting Started"},"fields":{"section":"istio","chapter":"getting-started"}},{"frontmatter":{"order":7,"chapterTitle":"Mutual TLS & Identity Verification"},"fields":{"section":"istio","chapter":"mutual-tls"}},{"frontmatter":{"order":4,"chapterTitle":"Observability"},"fields":{"section":"istio","chapter":"observability"}},{"frontmatter":{"order":5,"chapterTitle":"Request Routing and Canary Testing"},"fields":{"section":"istio","chapter":"routing-and-canary"}},{"frontmatter":{"order":9,"chapterTitle":"Conclusion"},"fields":{"section":"linkerd","chapter":"conclusion"}},{"frontmatter":{"order":4,"chapterTitle":"Linkerd Dashboard"},"fields":{"section":"linkerd","chapter":"dashboard"}},{"frontmatter":{"order":5,"chapterTitle":"Debugging (Optional)"},"fields":{"section":"linkerd","chapter":"debugging"}},{"frontmatter":{"order":2,"chapterTitle":"Deploy a sample application"},"fields":{"section":"linkerd","chapter":"deploy-an-application"}},{"frontmatter":{"order":3,"chapterTitle":"Exposing services through Linkerd Ingress"},"fields":{"section":"linkerd","chapter":"expose-services"}},{"frontmatter":{"order":8,"chapterTitle":"Fault Injection"},"fields":{"section":"linkerd","chapter":"fault-injection"}},{"frontmatter":{"order":1,"chapterTitle":"Getting Started"},"fields":{"section":"linkerd","chapter":"getting-started"}},{"frontmatter":{"order":6,"chapterTitle":"Observability"},"fields":{"section":"linkerd","chapter":"observability"}},{"frontmatter":{"order":7,"chapterTitle":"Traffic Splitting using SMI and Linkerd"},"fields":{"section":"linkerd","chapter":"traffic-splitting"}}]},"serviceMeshesList":{"nodes":[{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}}]}},"pageContext":{"learnpath":"mastering-service-meshes-for-developers","slug":"learn/learning-paths/mastering-service-meshes-for-developers/introduction-to-service-meshes/linkerd/expose-services","course":"introduction-to-service-meshes","section":"linkerd","chapter":"expose-services","pageType":"chapter"}},"staticQueryHashes":["3750885592","4047814605"],"slicesMap":{},"matchPath":"learn/learning-paths/mastering-service-meshes-for-developers/introduction-to-service-meshes/linkerd/expose-services"}