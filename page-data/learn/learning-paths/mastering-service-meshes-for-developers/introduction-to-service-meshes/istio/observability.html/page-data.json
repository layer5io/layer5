{"componentChunkName":"component---src-templates-learn-chapter-js","path":"/learn/learning-paths/mastering-service-meshes-for-developers/introduction-to-service-meshes/istio/observability.html","result":{"data":{"chapter":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"docType\": \"Chapter\",\n  \"chapterTitle\": \"Observability\",\n  \"description\": \"Meshery, collaborative Kubernetes manager\",\n  \"videos\": 4,\n  \"lectures\": 12,\n  \"order\": 4\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ChapterStyle, {\n    mdxType: \"ChapterStyle\"\n  }, mdx(\"h2\", {\n    className: \"chapter-sub-heading\"\n  }, \"Install Telemetry Add-ons\"), mdx(\"p\", null, \"Using Meshery, install Istio telemetry add-ons. In the Istio management page:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Click the (+) icon on the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Apply Service Mesh Configuration\"), \" card.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Select each of the following add-ons:\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://prometheus.io/\"\n  }, \"Prometheus\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://grafana.com/\"\n  }, \"Grafana\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.jaegertracing.io/\"\n  }, \"Jaeger\"))))), mdx(\"a\", {\n    href: ImageAppIcon\n  }, mdx(\"img\", {\n    src: ImageAppIcon,\n    width: \"100%\",\n    align: \"center\"\n  })), mdx(\"p\", null, \"You will use Prometheus and Grafana for collecting and viewing metrics and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.jaegertracing.io/\"\n  }, \"Jaeger\"), \" collecting and viewing distributed traces. Expose each add-on external to the cluster. Each the service network typs are set to \\\"LoadBalancer\\\".\"), mdx(\"h3\", {\n    className: \"chapter-sub-heading\"\n  }, \"Service Mesh Performance and Telemetry\"), mdx(\"p\", null, \"Many of the labs require load to be placed on the sample apps. Let's generate HTTP traffic against the BookInfo application, so we can see interesting telemetry.\"), mdx(\"p\", null, \"Verify access through the Ingress Gateway:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"kubectl get service istio-ingressgateway -n istio-system\\n\")), mdx(\"p\", null, \"Once we have the port, we can append the IP of one of the nodes to get the host.\"), mdx(\"p\", null, \"The URL to run a load test against will be \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://<IP/hostname of any of the nodes in the cluster>:<ingress port>/productpage\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Please note:\"), \" If you are using Docker Desktop, please use the IP address of your host. You can leave the port blank. For example: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://1.2.3.4/productpage\"), \". Managed kubernetes service users will need to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://<external-ip of istio-ingressgateway>/productpage\"), \" as done in expose services section.\"), mdx(\"p\", null, \"Use the computed URL above in Meshery, in the browser, to run a load test and see the results.\"), mdx(\"h4\", {\n    className: \"chapter-sub-heading\"\n  }, \"Connect Grafana (optionally, Prometheus) to Meshery.\"), mdx(\"p\", null, \"On the Settings page:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Navigate to the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Metrics\"), \" tab.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Enter Grafana's URL:port number and submit.\")), mdx(\"h4\", {\n    className: \"chapter-sub-heading\"\n  }, \"Use Meshery to generate load and analyze performance.\"), mdx(\"p\", null, \"On the Performance page:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"give this load test a memorable name\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"enter the URL to the BookInfo productpage\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"select \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Istio\"), \" in the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Service Mesh\"), \" dropdown\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"enter a valid number for \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Concurrent requests\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"enter a valid number for \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Queries per second\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"enter a valid \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Duration\"), \" (a number followed by \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"s\"), \" for seconds (OR) \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"m\"), \" for minutes (OR) \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"h\"), \" for hour)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"use the host IP address in the request Tab and in the advanced options, type in the header as \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Host:<app-name>\"))), mdx(\"p\", null, \"Click on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Run Test\"), \". A performance test will run and statistical analysis performed. Examine the results of the test and behavior of the service mesh.\"), mdx(\"p\", null, \"Next, you will begin controlling requests to BookInfo using traffic management features.\"), mdx(\"br\", null), mdx(\"h3\", null, \"Alternative: Manual installation\"), \"Follow these steps if the above steps did not work\", mdx(\"br\", null), mdx(\"br\", null), mdx(\"h4\", {\n    className: \"chapter-alt-heading\"\n  }, \" Install Add-ons:\"), mdx(\"br\", null), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Prometheus\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.7/samples/addons/prometheus.yaml\\n\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Grafana\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.7/samples/addons/grafana.yaml\\n\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Jaeger\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.7/samples/addons/jaeger.yaml\\n\\n\")), mdx(\"h4\", {\n    className: \"chapter-alt-heading\"\n  }, \" Exposing services\"), mdx(\"p\", null, \"Istio add-on services are deployed by default as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ClusterIP\"), \" type services. We can expose the services outside the cluster by either changing the Kubernetes service type to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NodePort\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"LoadBalancer\"), \" or by port-forwarding or by configuring Kubernetes Ingress.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Option 1: Expose services with NodePort\"), \"\\nTo expose them using NodePort service type, we can edit the services and change the service type from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ClusterIP\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NodePort\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Option 2: Expose services with port-forwarding\"), \"\\nPort-forwarding runs in the foreground. We have appeneded \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"&\"), \" to the end of the above 2 commands to run them in the background. If you donot want this behavior, please remove the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"&\"), \" from the end.\"), mdx(\"h4\", {\n    className: \"chapter-alt-heading\"\n  }, \" Prometheus\"), mdx(\"p\", null, \"You will need to expose the Prometheus service on a port either of the two following methods:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Option 1: Expose services with NodePort\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"kubectl -n istio-system edit svc prometheus\\n\")), mdx(\"p\", null, \"To find the assigned ports for Prometheus:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"kubectl -n istio-system get svc prometheus\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Option 2: Expose Prometheus service with port-forwarding:\"), \"\\n\", \"*\", \"*\", \"\\nExpose Prometheus service with port-forwarding:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"kubectl -n istio-system port-forward \\\\\\n  $(kubectl -n istio-system get pod -l app=prometheus -o jsonpath='{.items[0].metadata.name}') \\\\\\n  9090:9090 &\\n\")), mdx(\"p\", null, \"Browse to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://<ip>:<port>\"), \" and in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Expression\"), \" input box enter: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"istio_request_bytes_count\"), \". Click the Execute button.\"), mdx(\"br\", null), mdx(\"img\", {\n    src: Prometheus,\n    align: \"center\",\n    width: \"100%\"\n  }), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h4\", {\n    className: \"chapter-alt-heading\"\n  }, \" Grafana\"), mdx(\"p\", null, \"You will need to expose the Grafana service on a port either of the two following methods:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"kubectl -n istio-system edit svc grafana\\n\")), mdx(\"p\", null, \"Once this is done the services will be assigned dedicated ports on the hosts.\"), mdx(\"p\", null, \"To find the assigned ports for Grafana:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"kubectl -n istio-system get svc grafana\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Expose Grafana service with port-forwarding:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"kubectl -n istio-system port-forward $(kubectl -n istio-system get pod -l app=grafana \\\\\\n  -o jsonpath='{.items[0].metadata.name}') 3000:3000 &\\n\")), mdx(\"img\", {\n    src: GraffanaDash,\n    align: \"center\",\n    width: \"100%\"\n  }), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h4\", {\n    className: \"chapter-alt-heading\"\n  }, \" Distributed Tracing\"), mdx(\"p\", null, \"The sample Bookinfo application is configured to collect trace spans using Zipkin or Jaeger. Although Istio proxies are able to automatically send spans, it needs help from the application to tie together the entire trace. To do this applications need to propagate the appropriate HTTP headers so that when the proxies send span information to Zipkin or Jaeger, the spans can be correlated correctly into a single trace.\"), mdx(\"p\", null, \"To do this the application collects and propagates the following headers from the incoming request to any outgoing requests:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"x-request-id\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"x-b3-traceid\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"x-b3-spanid\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"x-b3-parentspanid\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"x-b3-sampled\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"x-b3-flags\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"x-ot-span-context\"))), mdx(\"br\", null), mdx(\"a\", {\n    href: Jaeger\n  }, mdx(\"img\", {\n    src: Jaeger,\n    width: \"100%\",\n    align: \"center\"\n  })), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h4\", {\n    className: \"chapter-alt-heading\"\n  }, \" Exposing services\"), mdx(\"p\", null, \"Istio add-on services are deployed by default as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ClusterIP\"), \" type services. We can expose the services outside the cluster by either changing the Kubernetes service type to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NodePort\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"LoadBalancer\"), \" or by port-forwarding or by configuring Kubernetes Ingress. In this lab, we will briefly demonstrate the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NodePort\"), \" and port-forwarding ways of exposing services.\"), mdx(\"h5\", {\n    className: \"chapter-alt-heading\"\n  }, \" Option 1: Expose services with NodePort\"), mdx(\"p\", null, \"To expose them using NodePort service type, we can edit the services and change the service type from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ClusterIP\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NodePort\")), mdx(\"p\", null, \"For Jaeger, either of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tracing\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jaeger-query\"), \" can be exposed.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"kubectl -n istio-system edit svc tracing\\n\")), mdx(\"p\", null, \"Once this is done the services will be assigned dedicated ports on the hosts.\"), mdx(\"p\", null, \"To find the assigned ports for Jaeger:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"kubectl -n istio-system get svc tracing\\n\")), mdx(\"h5\", {\n    className: \"chapter-alt-heading\"\n  }, \"Option 2: Expose services with port-forwarding\"), mdx(\"p\", null, \"To port-forward Jaeger:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"kubectl -n istio-system port-forward \\\\\\n  $(kubectl -n istio-system get pod -l app=jaeger -o jsonpath='{.items[0].metadata.name}') \\\\\\n  16686:16686 &\\n\")), mdx(\"h4\", {\n    className: \"chapter-alt-heading\"\n  }, \" View Traces\"), mdx(\"p\", null, \"Let us find the port Jaeger is exposed on by running the following command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"kubectl -n istio-system get svc tracing\\n\")), mdx(\"p\", null, \"You can click on the link at the top of the page which maps to the right port and it will open Jaeger UI in a new tab.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"chapterTitle":"Observability","description":"Meshery, collaborative Kubernetes manager"},"fields":{"slug":"learn/learning-paths/mastering-service-meshes-for-developers/introduction-to-service-meshes/istio/observability","course":"introduction-to-service-meshes","learnpath":"mastering-service-meshes-for-developers","chapter":"observability"}},"course":{"nodes":[{"frontmatter":{"courseTitle":"Introduction to Service Meshes - Hands On","meshesYouLearn":[{"imagepath":{"childImageSharp":null,"extension":"svg","publicURL":"/static/731763d720780a49c2ffdfede8c28f4b/istio.svg"},"name":"Istio"},{"imagepath":{"childImageSharp":null,"extension":"svg","publicURL":"/static/b4f4020971de42f6fb2497075a67f325/linkerd.svg"},"name":"Linkerd"}]},"fields":{"slug":"learn/learning-paths/mastering-service-meshes-for-developers/introduction-to-service-meshes"}}]},"TOC":{"nodes":[{"frontmatter":{"order":8,"chapterTitle":"Circuit Breaking"},"fields":{"section":"istio","chapter":"circuit-breaking"}},{"frontmatter":{"order":9,"chapterTitle":"Conclusion"},"fields":{"section":"istio","chapter":"conclusion"}},{"frontmatter":{"order":2,"chapterTitle":"Deploy a sample application"},"fields":{"section":"istio","chapter":"deploy-an-application"}},{"frontmatter":{"order":3,"chapterTitle":"Exposing services through Istio Ingress Gateway"},"fields":{"section":"istio","chapter":"expose-services"}},{"frontmatter":{"order":6,"chapterTitle":"Fault Injection"},"fields":{"section":"istio","chapter":"fault-injection"}},{"frontmatter":{"order":1,"chapterTitle":"Getting Started"},"fields":{"section":"istio","chapter":"getting-started"}},{"frontmatter":{"order":7,"chapterTitle":"Mutual TLS & Identity Verification"},"fields":{"section":"istio","chapter":"mutual-tls"}},{"frontmatter":{"order":4,"chapterTitle":"Observability"},"fields":{"section":"istio","chapter":"observability"}},{"frontmatter":{"order":5,"chapterTitle":"Request Routing and Canary Testing"},"fields":{"section":"istio","chapter":"routing-and-canary"}},{"frontmatter":{"order":9,"chapterTitle":"Conclusion"},"fields":{"section":"linkerd","chapter":"conclusion"}},{"frontmatter":{"order":4,"chapterTitle":"Linkerd Dashboard"},"fields":{"section":"linkerd","chapter":"dashboard"}},{"frontmatter":{"order":5,"chapterTitle":"Debugging (Optional)"},"fields":{"section":"linkerd","chapter":"debugging"}},{"frontmatter":{"order":2,"chapterTitle":"Deploy a sample application"},"fields":{"section":"linkerd","chapter":"deploy-an-application"}},{"frontmatter":{"order":3,"chapterTitle":"Exposing services through Linkerd Ingress"},"fields":{"section":"linkerd","chapter":"expose-services"}},{"frontmatter":{"order":8,"chapterTitle":"Fault Injection"},"fields":{"section":"linkerd","chapter":"fault-injection"}},{"frontmatter":{"order":1,"chapterTitle":"Getting Started"},"fields":{"section":"linkerd","chapter":"getting-started"}},{"frontmatter":{"order":6,"chapterTitle":"Observability"},"fields":{"section":"linkerd","chapter":"observability"}},{"frontmatter":{"order":7,"chapterTitle":"Traffic Splitting using SMI and Linkerd"},"fields":{"section":"linkerd","chapter":"traffic-splitting"}}]},"serviceMeshesList":{"nodes":[{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"istio"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}},{"fields":{"section":"linkerd"}}]}},"pageContext":{"learnpath":"mastering-service-meshes-for-developers","slug":"learn/learning-paths/mastering-service-meshes-for-developers/introduction-to-service-meshes/istio/observability","course":"introduction-to-service-meshes","section":"istio","chapter":"observability","pageType":"chapter"}},"staticQueryHashes":["3750885592","4047814605"],"slicesMap":{},"matchPath":"learn/learning-paths/mastering-service-meshes-for-developers/introduction-to-service-meshes/istio/observability"}