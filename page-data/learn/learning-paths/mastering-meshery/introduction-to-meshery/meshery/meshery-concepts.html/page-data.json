{"componentChunkName":"component---src-templates-learn-chapter-js","path":"/learn/learning-paths/mastering-meshery/introduction-to-meshery/meshery/meshery-concepts.html","result":{"data":{"chapter":{"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"docType\": \"Chapter\",\n  \"id\": \"meshery-concepts\",\n  \"chapterTitle\": \"Meshery Concepts\",\n  \"description\": \"This chapter delves into the fundamental concepts of Meshery, explaining its purpose, and the architectural and logical components that form its foundation.\",\n  \"videos\": 0,\n  \"lectures\": 4,\n  \"order\": 1\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ChapterStyle, {\n    mdxType: \"ChapterStyle\"\n  }, mdx(\"h1\", {\n    className: \"chapter-sub-heading\"\n  }, \"What is Meshery?\"), mdx(\"p\", null, \"Meshery is a self-service engineering platform that enables collaborative design and operation of cloud and cloud-native infrastructure. It's a versatile tool designed to help engineers manage and operate their infrastructure visually, collaboratively, and confidently. Whether you are a platform engineer, a site reliability engineer, or part of a DevSecOps team, Meshery has something to offer. \"), mdx(\"h2\", {\n    className: \"chapter-sub-heading\"\n  }, \"Meshery\\u2019s Purpose\"), mdx(\"p\", null, \"Meshery's primary purpose is to facilitate the collaborative design, operation, and management of cloud and cloud-native infrastructure. By providing a unified platform that integrates with various tools and technologies, Meshery aims to streamline infrastructure management tasks for engineers. Its goals include:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Enhancing Collaboration:\"), \" Meshery allows teams of engineers to work together more effectively by providing a visual and intuitive interface for managing infrastructure.  \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Simplifying Complexity:\"), \" It abstracts the complexity of managing multiple Kubernetes clusters and cloud-native environments, making it easier for engineers to deploy, monitor, and manage applications.  \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Ensuring Extensibility:\"), \" As an open-source project, Meshery is highly extensible, allowing users to customize and extend its functionality to meet their specific needs.  \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Improving Performance Management:\"), \" Meshery provides tools for performance analysis, helping teams understand and optimize the performance of their applications and infrastructure.  \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Promoting Best Practices:\"), \" Through its various features and capabilities, Meshery encourages the adoption of best practices in cloud-native infrastructure management, such as using standardized designs and patterns.\")), mdx(\"p\", null, \"Meshery is designed to be a versatile and powerful tool that addresses the modern needs of infrastructure management in cloud-native environments, making it easier for engineers to manage their infrastructure with confidence and efficiency.\"), mdx(\"h2\", {\n    className: \"chapter-sub-heading\"\n  }, \"Architectural Components\"), mdx(\"p\", null, \"Architectural components in Meshery are the physical and functional building blocks that enable the platform to operate and manage infrastructure. These include elements like the Meshery Server, Adapters, MeshSync, Broker, and Operator. Each architectural component has a distinct function, such as facilitating communication between cluster components (Broker), managing the lifecycle of deployed components (Operator), or synchronizing state information (MeshSync). Together, these components form a cohesive system that ensures Meshery can effectively integrate with various tools and environments, providing a robust and scalable infrastructure management solution.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.meshery.io/concepts/architecture/adapters\"\n  }, \"Adapters\"), \" \", \"-\", \" Adapters extend Meshery's management capabilities in any number of ways, including lifecycle, configuration, performance, governance, identity...  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.meshery.io/concepts/architecture\"\n  }, \"Architecture\"), \" \", \"-\", \" overview of different individual components of Meshery architecture and how they interact as a system.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.meshery.io/concepts/architecture/broker\"\n  }, \"Broker\"), \" \", \"-\", \" Meshery broker component facilitates data streaming between kubernetes cluster components and outside world.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.meshery.io/concepts/catalog\"\n  }, \"Catalog\"), \" \", \"-\", \" Browsing and using cloud native patterns  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.meshery.io/concepts/architecture/database\"\n  }, \"Database\"), \" \", \"-\", \" Meshery offers support for internal caching with the help of file databases. This has been implemented with several libraries that supports different kinds of data formats.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.meshery.io/concepts/architecture/meshsync\"\n  }, \"MeshSync\"), \" \", \"-\", \" Meshery offers support for Kubernetes cluster and cloud state synchronization with the help of MeshSync.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.meshery.io/concepts/architecture/operator\"\n  }, \"Operator\"), \" \", \"-\", \" Meshery Operator controls and manages the lifecycle of components deployed inside a kubernetes cluster\")), mdx(\"h2\", {\n    className: \"chapter-sub-heading\"\n  }, \"Logical Components\"), mdx(\"p\", null, \"Logical components in Meshery refer to the conceptual elements that define and organize how infrastructure is managed and operated. These include components like Designs, Patterns, Policies, Environments, Models, and Workspaces. Each logical component has a specific role, such as defining the desired state of infrastructure (Designs), grouping resources (Environments), or enforcing governance rules (Policies). Logical components help structure the management process, making it more systematic and efficient by providing a clear framework for configuration, operation, and collaboration.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.meshery.io/concepts/logical/components\"\n  }, \"Components\"), \" \", \"-\", \" Meshery Components identify and characterize infrastructure under management.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.meshery.io/concepts/logical/connections\"\n  }, \"Connections\"), \" \", \"-\", \" Meshery Connections are managed and unmanaged resources that either through discovery or manual entry are managed by a state machine and used within one or more Environments.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.meshery.io/concepts/logical/credentials\"\n  }, \"Credentials\"), \" \", \"-\", \" Meshery uses one or more Credentials when authenticating to a managed or unmanaged Connection.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.meshery.io/concepts/logical/designs\"\n  }, \"Designs\"), \" \", \"-\", \" Meshery Designs are descriptive, declarative characterizations of how your Kubernetes infrastructure should be configured.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.meshery.io/concepts/logical/environments\"\n  }, \"Environments\"), \" \", \"-\", \" Environments are how you organize your deployment targets (whether on-premises servers or cloud services) into resource groups.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.meshery.io/concepts/logical/models\"\n  }, \"Models\"), \" \", \"-\", \" Meshery uses a set of resource models to define concrete boundaries to ensure extensible and sustainable management.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.meshery.io/concepts/logical/patterns\"\n  }, \"Patterns\"), \" \", \"-\", \" Meshery Patterns are descriptive, declarative characterizations of how your Kubernetes infrastructure should be configured.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.meshery.io/concepts/logical/policies\"\n  }, \"Policies\"), \" \", \"-\", \" Meshery Policies enable you with a broad set of controls and governance of the behavior of systems under Meshery's management.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.meshery.io/concepts/logical/registry\"\n  }, \"Registry\"), \" \", \"-\", \" Meshery Registry is a database acting as the central repository for all capabilities known to Meshery. These capabilities encompass various entities, including models, components, relationships, and policies.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.meshery.io/concepts/logical/relationships\"\n  }, \"Relationships\"), \" \", \"-\", \" Meshery Relationships identify and facilitate genealogy between Components.  \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.meshery.io/concepts/logical/workspaces\"\n  }, \"Workspaces\"), \" \", \"-\", \" Meshery Workspaces act as a central collaboration point for teams.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"chapterTitle":"Meshery Concepts","description":"This chapter delves into the fundamental concepts of Meshery, explaining its purpose, and the architectural and logical components that form its foundation."},"fields":{"slug":"learn/learning-paths/mastering-meshery/introduction-to-meshery/meshery/meshery-concepts","course":"introduction-to-meshery","learnpath":"mastering-meshery","chapter":"meshery-concepts"}},"course":{"nodes":[{"frontmatter":{"courseTitle":"Introduction to Meshery","meshesYouLearn":null},"fields":{"slug":"learn/learning-paths/mastering-meshery/introduction-to-meshery"}}]},"TOC":{"nodes":[{"frontmatter":{"order":3,"chapterTitle":"Configuring Meshery"},"fields":{"section":"meshery","chapter":"configuring-meshery"}},{"frontmatter":{"order":4,"chapterTitle":"Creating Designs"},"fields":{"section":"meshery","chapter":"creating-designs"}},{"frontmatter":{"order":2,"chapterTitle":"Deploying Meshery Designs"},"fields":{"section":"meshery","chapter":"deploying-meshery-designs"}},{"frontmatter":{"order":5,"chapterTitle":"Interpreting Meshery Designs"},"fields":{"section":"meshery","chapter":"interpreting-meshery-designs"}},{"frontmatter":{"order":1,"chapterTitle":"Meshery Concepts"},"fields":{"section":"meshery","chapter":"meshery-concepts"}},{"frontmatter":{"order":6,"chapterTitle":"Reviewing Designs"},"fields":{"section":"meshery","chapter":"reviewing-designs"}}]},"serviceMeshesList":{"nodes":[{"fields":{"section":"meshery"}},{"fields":{"section":"meshery"}},{"fields":{"section":"meshery"}},{"fields":{"section":"meshery"}},{"fields":{"section":"meshery"}},{"fields":{"section":"meshery"}}]}},"pageContext":{"learnpath":"mastering-meshery","slug":"learn/learning-paths/mastering-meshery/introduction-to-meshery/meshery/meshery-concepts","course":"introduction-to-meshery","section":"meshery","chapter":"meshery-concepts","pageType":"chapter"}},"staticQueryHashes":["3750885592","4047814605"],"slicesMap":{},"matchPath":"learn/learning-paths/mastering-meshery/introduction-to-meshery/meshery/meshery-concepts"}