"use strict";(self.webpackChunkLayer5=self.webpackChunkLayer5||[]).push([[622],{9184:function(e,t,n){n.d(t,{p:function(){return u}});var l=n(96540),a=n(91580),o=n(66198),i=n(66054),r=n(22514),c=n(64810);const s=n(21250).default.div.withConfig({displayName:"intra-page__JoinCommunityWrapper",componentId:"sc-q3x19t-0"})(["\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n"]);var m=function(){const{0:e,1:t}=(0,l.useState)([]);(0,l.useEffect)(()=>{const e=document.querySelectorAll(".main-content > a");console.log(e),e&&t(Array.from(e).map(e=>({id:e.id,link:`#${e.id}`,text:e.id})))},[]);const{0:n,1:a}=(0,l.useState)(null);return(0,l.useEffect)(()=>{const e=window.location.pathname;a(e)},[]),l.createElement(s,null,l.createElement("div",{className:"intra-page"},l.createElement("ul",null,e.map(e=>l.createElement("li",{key:e.id,className:"list"},l.createElement(c.Link,{to:`${n}${e.link}`,key:e.id,activeClassName:"active"},e.text))))))};const u=e=>{let{title:t,children:n}=e;return l.createElement(a.A,null,l.createElement("div",{className:"page-header-section"},l.createElement("h1",null,t)),l.createElement(o.A,null),l.createElement("div",{className:"page-section"},l.createElement(i.mc,null,n," ",l.createElement(r.A,null)),l.createElement(m,null)))}},71536:function(e,t,n){n.r(t);var l=n(96540),a=n(64810),o=n(86462),i=n(66054),r=n(48995),c=n(9184),s=n(96044),m=n(92121);t.default=()=>{const e=(0,o.useLocation)(),{isDark:t}=(0,m.G)();return l.createElement(c.p,{title:"ToggleButton"},l.createElement("div",{className:"content"},l.createElement("a",{id:"Identity"},l.createElement("h2",null,"ToggleButton")),l.createElement("p",null,"The `ToggleButton` and `ToggleButtonGroup` are versatile components that can be used for a wide range of applications. Their intuitive design ensures users can make selections easily and confidently. Whether it's enabling a setting, selecting a mode, or choosing multiple options, these components are built to enhance user experience across different scenarios."),l.createElement("div",{className:"filterBtns"},l.createElement(s.default,{className:"/projects/sistent/components/toggle-button"===e.pathname?"active":"",onClick:()=>(0,a.navigate)("/projects/sistent/components/toggle-button"),title:"Overview"}),l.createElement(s.default,{className:"/projects/sistent/components/toggle-button/guidance"===e.pathname?"active":"",onClick:()=>(0,a.navigate)("/projects/sistent/components/toggle-button/guidance"),title:"Guidance"}),l.createElement(s.default,{className:"/projects/sistent/components/toggle-button/code"===e.pathname?"active":"",onClick:()=>(0,a.navigate)("/projects/sistent/components/toggle-button/code"),title:"Code"})),l.createElement("div",{className:"main-content"},l.createElement("a",{id:"Functionality"},l.createElement("h2",null,"Functionality")),l.createElement("p",null,"The `ToggleButton` and `ToggleButtonGroup` components provide an efficient way to handle user interactions for toggling states or selecting one or multiple options. Below are some common use cases."),l.createElement("h3",null,"Exclusive Selection"),l.createElement("p",null,"Use an exclusive `ToggleButtonGroup` when only one selection is allowed at a time. This is useful for scenarios like aligning text to the left, center, or right."),l.createElement(i.fI,{$Hcenter:!0,className:"image-container"},l.createElement(r.SistentThemeProvider,{initialMode:t?"dark":"light"},l.createElement(r.ToggleButtonGroup,{value:"left",exclusive:!0},l.createElement(r.ToggleButton,{value:"left"},"Left"),l.createElement(r.ToggleButton,{value:"center"},"Center"),l.createElement(r.ToggleButton,{value:"right"},"Right")))),l.createElement("h3",null,"Multiple Selection"),l.createElement("p",null,"Enable multiple selections within a `ToggleButtonGroup` for cases where users need to toggle multiple options, such as enabling bold, italic, and underline text styling simultaneously."),l.createElement(i.fI,{$Hcenter:!0,className:"image-container"},l.createElement(r.SistentThemeProvider,{initialMode:t?"dark":"light"},l.createElement(r.ToggleButtonGroup,{value:["bold","italic"]},l.createElement(r.ToggleButton,{value:"bold"},"Toggle Button 1"),l.createElement(r.ToggleButton,{value:"italic"},"Toggle Button 2"),l.createElement(r.ToggleButton,{value:"underline"},"Toggle Button 3")))),l.createElement("h3",null,"Sizes"),l.createElement("p",null,"Adjust the size of the `ToggleButton` using the `size` prop. This property supports `small`, `medium`, and `large` values to suit various design requirements."),l.createElement("div",{className:"showcase"},l.createElement("div",{className:"items"},l.createElement(r.SistentThemeProvider,{initialMode:t?"dark":"light"},l.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"1rem",alignItems:"center"}},l.createElement(r.ToggleButtonGroup,{value:"option1",exclusive:!0,size:"small",style:{width:"70%"}},l.createElement(r.ToggleButton,{value:"option1"},"Small"),l.createElement(r.ToggleButton,{value:"option2"},"Small")),l.createElement(r.ToggleButtonGroup,{value:"option1",exclusive:!0,size:"medium"},l.createElement(r.ToggleButton,{value:"option1"},"Medium"),l.createElement(r.ToggleButton,{value:"option2"},"Medium")),l.createElement(r.ToggleButtonGroup,{value:"option1",exclusive:!0,size:"large",style:{width:"120%"}},l.createElement(r.ToggleButton,{style:{width:"50%"},value:"option1"},"Large"),l.createElement(r.ToggleButton,{style:{width:"50%"},value:"option2"},"Large")))))),l.createElement("h3",null,"Colors"),l.createElement("p",null,"Use the `color` prop to style the `ToggleButtonGroup` with pre-defined theme colors, such as `primary` or `secondary`. This ensures consistency across the application."),l.createElement(i.fI,{$Hcenter:!0,className:"image-container"},l.createElement(r.SistentThemeProvider,{initialMode:t?"dark":"light"},l.createElement(r.ToggleButtonGroup,{value:"primary",exclusive:!0,color:"primary"},l.createElement(r.ToggleButton,{value:"primary"},"Primary"),l.createElement(r.ToggleButton,{value:"secondary"},"Secondary")))),l.createElement("h3",null,"Vertical Orientation"),l.createElement("p",null,"The `orientation` prop allows you to arrange toggle buttons vertically instead of horizontally. This is ideal for menus or options requiring more vertical space."),l.createElement(i.fI,{$Hcenter:!0,className:"image-container"},l.createElement(r.SistentThemeProvider,{initialMode:t?"dark":"light"},l.createElement(r.ToggleButtonGroup,{orientation:"vertical",value:"option1",exclusive:!0},l.createElement(r.ToggleButton,{value:"option1"},"Vertical 1"),l.createElement(r.ToggleButton,{value:"option2"},"Vertical 2"),l.createElement(r.ToggleButton,{value:"option3"},"Vertical 3")))))))}}}]);