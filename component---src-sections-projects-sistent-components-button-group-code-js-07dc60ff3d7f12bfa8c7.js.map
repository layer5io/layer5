{"version":3,"file":"component---src-sections-projects-sistent-components-button-group-code-js-07dc60ff3d7f12bfa8c7.js","mappings":"uMAeA,MAAMA,EAAU,CACdC,EAAAA,cAACC,EAAAA,OAAM,CAACC,IAAI,OAAM,OAClBF,EAAAA,cAACC,EAAAA,OAAM,CAACC,IAAI,OAAM,OAClBF,EAAAA,cAACC,EAAAA,OAAM,CAACC,IAAI,SAAQ,UAGhBC,EAAQ,CACZ,uQAOA,8pBAoBA,wzBA6BA,2UAWA,gyBA6BA,qUAkRF,UArQwBC,KACtB,MAAMC,GAAWC,EAAAA,EAAAA,gBACX,OAAEC,IAAWC,EAAAA,EAAAA,KAEnB,OACER,EAAAA,cAACS,EAAAA,EAAa,CAACC,MAAM,gBACnBV,EAAAA,cAAA,OAAKW,UAAU,WACbX,EAAAA,cAAA,KAAGY,GAAG,YACJZ,EAAAA,cAAA,UAAI,iBAENA,EAAAA,cAAA,SAAG,2RAOHA,EAAAA,cAAA,OAAKW,UAAU,cACbX,EAAAA,cAACa,EAAAA,QAAS,CACRF,UACwB,8CAAtBN,EAASS,SACL,SACA,GAENC,QAASA,KACPC,EAAAA,EAAAA,UAAS,6CAEXN,MAAM,aAERV,EAAAA,cAACa,EAAAA,QAAS,CACRF,UAEE,uDADAN,EAASS,SAEL,SACA,GAENC,QAASA,KACPC,EAAAA,EAAAA,UAAS,sDAEXN,MAAM,aAERV,EAAAA,cAACa,EAAAA,QAAS,CACRF,UAEE,mDADAN,EAASS,SAEL,SACA,GAENC,QAASA,KACPC,EAAAA,EAAAA,UAAS,kDAEXN,MAAM,UAGVV,EAAAA,cAAA,OAAKW,UAAU,gBACbX,EAAAA,cAAA,SAAG,2RAOHA,EAAAA,cAAA,KAAGY,GAAG,eACJZ,EAAAA,cAAA,UAAI,gBAENA,EAAAA,cAAA,SAAG,mHAIHA,EAAAA,cAAA,OAAKW,UAAU,YACbX,EAAAA,cAAA,OAAKW,UAAU,SACbX,EAAAA,cAACiB,EAAAA,qBAAoB,CAACC,YAAaX,EAAS,OAAS,SACnDP,EAAAA,cAACmB,EAAAA,YAAW,CACVC,QAAQ,YACR,aAAW,sBAEVrB,KAIPC,EAAAA,cAACqB,EAAAA,EAAS,CAACC,KAAK,cAAcC,KAAMpB,EAAM,MAE5CH,EAAAA,cAAA,KAAGY,GAAG,kBACJZ,EAAAA,cAAA,UAAI,mBAENA,EAAAA,cAAA,SAAG,kFAIHA,EAAAA,cAAA,OAAKW,UAAU,YACbX,EAAAA,cAAA,OAAKW,UAAU,SACbX,EAAAA,cAACiB,EAAAA,qBAAoB,CAACC,YAAaX,EAAS,OAAS,SACnDP,EAAAA,cAACwB,EAAAA,IAAG,CACFC,GAAI,CACFC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZ,QAAS,CACPC,EAAG,KAIP7B,EAAAA,cAACmB,EAAAA,YAAW,CACVC,QAAQ,YACR,aAAW,sBAEVrB,GAEHC,EAAAA,cAACmB,EAAAA,YAAW,CACVC,QAAQ,WACR,aAAW,sBAEVrB,GAEHC,EAAAA,cAACmB,EAAAA,YAAW,CAACC,QAAQ,OAAO,aAAW,sBACpCrB,MAKTC,EAAAA,cAACqB,EAAAA,EAAS,CAACC,KAAK,iBAAiBC,KAAMpB,EAAM,MAE/CH,EAAAA,cAAA,KAAGY,GAAG,kBACJZ,EAAAA,cAAA,UAAI,mBAENA,EAAAA,cAAA,SAAG,qHAIHA,EAAAA,cAAA,OAAKW,UAAU,YACbX,EAAAA,cAAA,OAAKW,UAAU,SACbX,EAAAA,cAACiB,EAAAA,qBAAoB,CAACC,YAAaX,EAAS,OAAS,SACnDP,EAAAA,cAACwB,EAAAA,IAAG,CACFC,GAAI,CACFC,QAAS,OACT,QAAS,CACPG,EAAG,KAIP7B,EAAAA,cAACmB,EAAAA,YAAW,CACVW,YAAY,WACZV,QAAQ,YACR,aAAW,sBAEVrB,GAEHC,EAAAA,cAACmB,EAAAA,YAAW,CACVW,YAAY,WACZV,QAAQ,WACR,aAAW,sBAEVrB,GAEHC,EAAAA,cAACmB,EAAAA,YAAW,CACVW,YAAY,WACZV,QAAQ,OACR,aAAW,sBAEVrB,MAKTC,EAAAA,cAACqB,EAAAA,EAAS,CAACC,KAAK,iBAAiBC,KAAMpB,EAAM,MAE/CH,EAAAA,cAAA,KAAGY,GAAG,qBACJZ,EAAAA,cAAA,UAAI,sBAENA,EAAAA,cAAA,SAAG,sIAIHA,EAAAA,cAAA,OAAKW,UAAU,YACbX,EAAAA,cAAA,OAAKW,UAAU,SACbX,EAAAA,cAACiB,EAAAA,qBAAoB,CAACC,YAAaX,EAAS,OAAS,SACnDP,EAAAA,cAACmB,EAAAA,YAAW,CACVY,kBAAgB,EAChBX,QAAQ,YACR,aAAW,sBAEVrB,KAIPC,EAAAA,cAACqB,EAAAA,EAAS,CAACC,KAAK,oBAAoBC,KAAMpB,EAAM,MAElDH,EAAAA,cAAA,KAAGY,GAAG,SACJZ,EAAAA,cAAA,UAAI,UAENA,EAAAA,cAAA,SAAG,+EAIHA,EAAAA,cAAA,OAAKW,UAAU,YACbX,EAAAA,cAAA,OAAKW,UAAU,SACbX,EAAAA,cAACiB,EAAAA,qBAAoB,CAACC,YAAaX,EAAS,OAAS,SACnDP,EAAAA,cAACwB,EAAAA,IAAG,CACFC,GAAI,CACFC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZ,QAAS,CACPC,EAAG,KAIP7B,EAAAA,cAACmB,EAAAA,YAAW,CACVa,KAAK,QACLZ,QAAQ,YACR,aAAW,sBAEVrB,GAEHC,EAAAA,cAACmB,EAAAA,YAAW,CACVa,KAAK,SACLZ,QAAQ,YACR,aAAW,sBAEVrB,GAEHC,EAAAA,cAACmB,EAAAA,YAAW,CACVa,KAAK,QACLZ,QAAQ,YACR,aAAW,sBAEVrB,MAKTC,EAAAA,cAACqB,EAAAA,EAAS,CAACC,KAAK,QAAQC,KAAMpB,EAAM,MAEtCH,EAAAA,cAAA,KAAGY,GAAG,cACJZ,EAAAA,cAAA,UAAI,eAENA,EAAAA,cAAA,SAAG,0JAKHA,EAAAA,cAAA,OAAKW,UAAU,YACbX,EAAAA,cAAA,OAAKW,UAAU,SACbX,EAAAA,cAACiB,EAAAA,qBAAoB,CAACC,YAAaX,EAAS,OAAS,SACnDP,EAAAA,cAACmB,EAAAA,YAAW,CACVc,WAAS,EACTb,QAAQ,YACR,aAAW,sBAEVrB,KAIPC,EAAAA,cAACqB,EAAAA,EAAS,CAACC,KAAK,aAAaC,KAAMpB,EAAM,QAIjC,C,iFCjYb,MAAMkB,EAAYa,IAAqB,IAApB,KAAEZ,EAAI,KAAEC,GAAMW,EACtC,MAAM,EAACC,EAAS,EAACC,IAAeC,EAAAA,EAAAA,WAAS,GAIzC,OACErC,EAAAA,cAAA,OAAKW,UAAU,aACbX,EAAAA,cAAA,SAAOsC,KAAK,WAAWhB,KAAMA,EAAMV,GAAIU,EAAMiB,SALhCA,KACfH,GAAaI,IAAUA,GAAK,IAK1BxC,EAAAA,cAAA,SAAOyC,QAASnB,EAAMX,UAAU,SAAQ,aAGvCwB,GACCnC,EAAAA,cAAC0C,EAAAA,GAAI,CAACC,WAAYpB,EAAMqB,SAAS,eAE/B,C,6HCbV,MAAMC,E,SAAuBC,QAAOC,IAAGC,WAAA,CAAAC,YAAA,mCAAAC,YAAA,eAAVJ,CAAU,mjCAqGvC,MA5CA,WACE,MAAM,EAACK,EAAS,EAACC,IAAef,EAAAA,EAAAA,UAAS,KAEzCgB,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAUC,SAASC,iBAAiB,qBAC1CC,QAAQC,IAAIJ,GACRA,GACFF,EACEO,MAAMC,KAAKN,GAASO,KAAKC,IAAC,CACxBlD,GAAIkD,EAAElD,GACNmD,KAAM,IAAID,EAAElD,KACZoD,KAAMF,EAAElD,OAGd,GACC,IAEH,MAAM,EAACqD,EAAS,EAACC,IAAe7B,EAAAA,EAAAA,UAAS,MAMzC,OALAgB,EAAAA,EAAAA,YAAU,KACR,MAAMc,EAAOC,OAAO/D,SAASS,SAC7BoD,EAAYC,EAAK,GAChB,IAGDnE,EAAAA,cAAC6C,EAAoB,KACnB7C,EAAAA,cAAA,OAAKW,UAAU,cACbX,EAAAA,cAAA,UACGmD,EAASU,KAAKQ,GACbrE,EAAAA,cAAA,MAAIE,IAAKmE,EAAEzD,GAAID,UAAU,QACvBX,EAAAA,cAACsE,EAAAA,KAAI,CACHC,GAAI,GAAGN,IAAWI,EAAEN,OACpB7D,IAAKmE,EAAEzD,GACP4D,gBAAgB,UAEfH,EAAEL,WAQnB,EChGO,MAAMvD,EAAgByB,IAA0B,IAAzB,MAAExB,EAAK,SAAE+D,GAAUvC,EAC/C,OACElC,EAAAA,cAAC0E,EAAAA,EAAc,KACb1E,EAAAA,cAAA,OAAKW,UAAU,uBACbX,EAAAA,cAAA,UAAKU,IAEPV,EAAAA,cAAC2E,EAAAA,EAAG,MACJ3E,EAAAA,cAAA,OAAKW,UAAU,gBACbX,EAAAA,cAAC4E,EAAAA,GAAS,KACPH,EAAS,IAACzE,EAAAA,cAAC6E,EAAAA,EAAiB,OAE/B7E,EAAAA,cAAC8E,EAAS,OAEG,C","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/button-group/code.js","webpack://Layer5/./src/sections/Projects/Sistent/components/button/code-block.js","webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js"],"sourcesContent":["import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport {\n  SistentThemeProvider,\n  Button,\n  ButtonGroup,\n  Box,\n} from \"@sistent/sistent\";\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { SistentLayout } from \"../../sistent-layout\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\nimport { CodeBlock } from \"../button/code-block\";\n\nconst buttons = [\n  <Button key=\"one\">One</Button>,\n  <Button key=\"two\">Two</Button>,\n  <Button key=\"three\">Three</Button>,\n];\n\nconst codes = [\n  `<SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n    <ButtonGroup variant=\"contained\" aria-label=\"Basic bgroup\">\n      <Button>One</Button>\n      <Button>Two</Button>\n      <Button>Three</Button>\n    </ButtonGroup>\n  </SistentThemeProvider>`,\n  `<SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n      <ButtonGroup\n        variant=\"contained\"\n        aria-label=\"Basic button group\"\n      >\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n      <ButtonGroup variant=\"outlined\" aria-label=\"Basic bugroup\">\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n      <ButtonGroup variant=\"text\" aria-label=\"Basic button group\">\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n    </SistentThemeProvider>`,\n  ` <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n      <ButtonGroup\n        orientation=\"vertical\"\n        variant=\"contained\"\n        aria-label=\"Basic button group\"\n      >\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n      <ButtonGroup\n        orientation=\"vertical\"\n        variant=\"outlined\"\n        aria-label=\"Basic button group\"\n      >\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n      <ButtonGroup\n        orientation=\"vertical\"\n        variant=\"text\"\n        aria-label=\"Basic button group\"\n      >\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n    </SistentThemeProvider>`,\n  `<SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n      <ButtonGroup\n        disableElevation\n        variant=\"contained\"\n        aria-label=\"Basic button group\"\n      >\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n  </SistentThemeProvider>`,\n  `<SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n      <ButtonGroup\n        size=\"small\"\n        variant=\"contained\"\n        aria-label=\"Basic button group\"\n      >\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n      <ButtonGroup\n        size=\"medium\"\n        variant=\"contained\"\n        aria-label=\"Basic button group\"\n      >\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n      <ButtonGroup\n        size=\"large\"\n        variant=\"contained\"\n        aria-label=\"Basic button group\"\n      >\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n    </SistentThemeProvider>`,\n  `<SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n      <ButtonGroup\n        fullWidth\n        variant=\"contained\"\n        aria-label=\"Basic button group\"\n      >\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n  </SistentThemeProvider>`,\n];\n\nconst ButtonGroupCode = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n\n  return (\n    <SistentLayout title=\"Button Group\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Button Group</h2>\n        </a>\n        <p>\n          The ButtonGroup component can be used to group related buttons\n          together. It is a container for multiple buttons that can be used to\n          group buttons together and apply styles to them. This component is\n          useful when you have a group of buttons that need to be styled in a\n          similar way.\n        </p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/button-group\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/button-group\")\n            }\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/button-group/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/button-group/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/button-group/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/button-group/code\")\n            }\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <p>\n            The ButtonGroup component can be used to group related buttons\n            together. It is a container for multiple buttons that can be used to\n            group buttons together and apply styles to them. This component is\n            useful when you have a group of buttons that need to be styled in a\n            similar way.\n          </p>\n          <a id=\"Basic Usage\">\n            <h2>Basic Usage</h2>\n          </a>\n          <p>\n            The buttons can be grouped by wrapping them with the ButtonGroup\n            component. They need to be immediate children.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <ButtonGroup\n                  variant=\"contained\"\n                  aria-label=\"Basic button group\"\n                >\n                  {buttons}\n                </ButtonGroup>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"basic-usage\" code={codes[0]} />\n          </div>\n          <a id=\"Button Variant\">\n            <h2>Button Variant</h2>\n          </a>\n          <p>\n            The ButtonGroup component supports three variants: Filled, Outlined,\n            and Text.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    \"& > *\": {\n                      m: 1,\n                    },\n                  }}\n                >\n                  <ButtonGroup\n                    variant=\"contained\"\n                    aria-label=\"Basic button group\"\n                  >\n                    {buttons}\n                  </ButtonGroup>\n                  <ButtonGroup\n                    variant=\"outlined\"\n                    aria-label=\"Basic button group\"\n                  >\n                    {buttons}\n                  </ButtonGroup>\n                  <ButtonGroup variant=\"text\" aria-label=\"Basic button group\">\n                    {buttons}\n                  </ButtonGroup>\n                </Box>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"button-variant\" code={codes[1]} />\n          </div>\n          <a id=\"Vertical Group\">\n            <h2>Vertical Group</h2>\n          </a>\n          <p>\n            The ButtonGroup component can be used to create a vertical group of\n            buttons by setting the vertical prop to true.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    \"& > *\": {\n                      m: 1,\n                    },\n                  }}\n                >\n                  <ButtonGroup\n                    orientation=\"vertical\"\n                    variant=\"contained\"\n                    aria-label=\"Basic button group\"\n                  >\n                    {buttons}\n                  </ButtonGroup>\n                  <ButtonGroup\n                    orientation=\"vertical\"\n                    variant=\"outlined\"\n                    aria-label=\"Basic button group\"\n                  >\n                    {buttons}\n                  </ButtonGroup>\n                  <ButtonGroup\n                    orientation=\"vertical\"\n                    variant=\"text\"\n                    aria-label=\"Basic button group\"\n                  >\n                    {buttons}\n                  </ButtonGroup>\n                </Box>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"vertical-group\" code={codes[2]} />\n          </div>\n          <a id=\"Disable elevation\">\n            <h2>Disable elevation</h2>\n          </a>\n          <p>\n            The ButtonGroup component can be used to create a group of buttons\n            with no elevation by setting the disableElevation prop to true.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <ButtonGroup\n                  disableElevation\n                  variant=\"contained\"\n                  aria-label=\"Basic button group\"\n                >\n                  {buttons}\n                </ButtonGroup>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"disable-elevation\" code={codes[3]} />\n          </div>\n          <a id=\"Sizes\">\n            <h2>Sizes</h2>\n          </a>\n          <p>\n            For now, two different sizes of buttons exist: 56px height and 48px\n            height.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    \"& > *\": {\n                      m: 1,\n                    },\n                  }}\n                >\n                  <ButtonGroup\n                    size=\"small\"\n                    variant=\"contained\"\n                    aria-label=\"Basic button group\"\n                  >\n                    {buttons}\n                  </ButtonGroup>\n                  <ButtonGroup\n                    size=\"medium\"\n                    variant=\"contained\"\n                    aria-label=\"Basic button group\"\n                  >\n                    {buttons}\n                  </ButtonGroup>\n                  <ButtonGroup\n                    size=\"large\"\n                    variant=\"contained\"\n                    aria-label=\"Basic button group\"\n                  >\n                    {buttons}\n                  </ButtonGroup>\n                </Box>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"sizes\" code={codes[4]} />\n          </div>\n          <a id=\"Full Width\">\n            <h2>Full Width</h2>\n          </a>\n          <p>\n            The ButtonGroup component can be used to create a group of buttons\n            that take up the full width of the container by setting the\n            fullWidth prop to true.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <ButtonGroup\n                  fullWidth\n                  variant=\"contained\"\n                  aria-label=\"Basic button group\"\n                >\n                  {buttons}\n                </ButtonGroup>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"full-width\" code={codes[5]} />\n          </div>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default ButtonGroupCode;\n","import React, { useState } from \"react\";\nimport Code from \"../../../../../components/CodeBlock\";\n\nexport const CodeBlock = ({ name, code }) => {\n  const [showCode, setShowCode] = useState(false);\n  const onChange = () => {\n    setShowCode((prev) => !prev);\n  };\n  return (\n    <div className=\"show-code\">\n      <input type=\"checkbox\" name={name} id={name} onChange={onChange} />\n      <label htmlFor={name} className=\"label\">\n        Show Code\n      </label>\n      {showCode && (\n        <Code codeString={code} language=\"javascript\" />\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n"],"names":["buttons","React","Button","key","codes","ButtonGroupCode","location","useLocation","isDark","useStyledDarkMode","SistentLayout","title","className","id","TabButton","pathname","onClick","navigate","SistentThemeProvider","initialMode","ButtonGroup","variant","CodeBlock","name","code","Box","sx","display","flexDirection","alignItems","m","orientation","disableElevation","size","fullWidth","_ref","showCode","setShowCode","useState","type","onChange","prev","htmlFor","Code","codeString","language","JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","contents","setContents","useEffect","anchors","document","querySelectorAll","console","log","Array","from","map","a","link","text","intapath","setIntapath","path","window","x","Link","to","activeClassName","children","SistentWrapper","TOC","Container","SistentPagination","IntraPage"],"sourceRoot":""}