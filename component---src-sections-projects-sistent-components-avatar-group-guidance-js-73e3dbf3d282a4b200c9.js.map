{"version":3,"file":"component---src-sections-projects-sistent-components-avatar-group-guidance-js-73e3dbf3d282a4b200c9.js","mappings":"uKA0HA,UApH4BA,KAC1B,MAAMC,GAAWC,EAAAA,EAAAA,eAEjB,OACEC,EAAAA,cAACC,EAAAA,EAAa,CAACC,MAAM,gBACnBF,EAAAA,cAAA,OAAKG,UAAU,WACbH,EAAAA,cAAA,KAAGI,GAAG,YACJJ,EAAAA,cAAA,UAAI,iBAENA,EAAAA,cAAA,SAAG,OACGA,EAAAA,cAAA,cAAQ,eAAoB,wLAOlCA,EAAAA,cAAA,OAAKG,UAAU,cACbH,EAAAA,cAACK,EAAAA,QAAS,CACRF,UACwB,8CAAtBL,EAASQ,SACL,SACA,GAENC,QAASA,KACPC,EAAAA,EAAAA,UAAS,6CAEXN,MAAM,aAERF,EAAAA,cAACK,EAAAA,QAAS,CACRF,UAEE,uDADAL,EAASQ,SAEL,SACA,GAENC,QAASA,KACPC,EAAAA,EAAAA,UAAS,sDAEXN,MAAM,aAERF,EAAAA,cAACK,EAAAA,QAAS,CACRF,UAEE,mDADAL,EAASQ,SAEL,SACA,GAENC,QAASA,KACPC,EAAAA,EAAAA,UAAS,kDAEXN,MAAM,UAIVF,EAAAA,cAAA,OAAKG,UAAU,gBACbH,EAAAA,cAAA,UAAI,wCACJA,EAAAA,cAAA,SAAG,qBACiBA,EAAAA,cAAA,YAAM,eAAmB,oJAK7CA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,cAAQ,+CAAoD,mHAI9DA,EAAAA,cAAA,UACEA,EAAAA,cAAA,cAAQ,sCAA2C,8DACFA,EAAAA,cAAA,YAAM,OAAW,IAAI,oCACrCA,EAAAA,cAAA,YAAM,MAAS,eAElDA,EAAAA,cAAA,UACEA,EAAAA,cAAA,cAAQ,sCAA2C,sEACM,IACzDA,EAAAA,cAAA,YAAM,WAAc,gBAAaA,EAAAA,cAAA,YAAM,MAAS,6BAGlDA,EAAAA,cAAA,UACEA,EAAAA,cAAA,cAAQ,sBACaA,EAAAA,cAAA,YAAM,OAAU,UAC3B,IAAI,oGAEoBA,EAAAA,cAAA,YAAM,OAAU,YAEpDA,EAAAA,cAAA,UACEA,EAAAA,cAAA,cAAQ,kDAAwD,IAAI,8EAE1DA,EAAAA,cAAA,YAAM,YAAqB,gEAGvCA,EAAAA,cAAA,UACEA,EAAAA,cAAA,cAAQ,oBAAyB,oHAInCA,EAAAA,cAAA,UACEA,EAAAA,cAAA,cAAQ,qBAA0B,+FACgC,IAClEA,EAAAA,cAAA,YAAM,UAAa,MAIvBA,EAAAA,cAAA,SAAG,+BAC2BA,EAAAA,cAAA,YAAM,eAAkB,uHAM5C,C","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/avatar-group/guidance.js"],"sourcesContent":["import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport { SistentLayout } from \"../../sistent-layout\";\nimport TabButton from \"../../../../../reusecore/Button\";\n\nconst AvatarGroupGuidance = () => {\n  const location = useLocation();\n\n  return (\n    <SistentLayout title=\"Avatar Group\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Avatar Group</h2>\n        </a>\n        <p>\n          The <strong>AvatarGroup</strong> component displays a compact\n          collection of avatar elements that represent a group of users or\n          entities. It’s useful in collaborative spaces, team-based features, or\n          user listings.\n        </p>\n\n        {/* Tabs */}\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/avatar-group\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/avatar-group\")\n            }\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/avatar-group/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/avatar-group/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/avatar-group/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/avatar-group/code\")\n            }\n            title=\"Code\"\n          />\n        </div>\n\n        <div className=\"main-content\">\n          <h3>Design Guidelines and Best Practices</h3>\n          <p>\n            When implementing <code>AvatarGroup</code>, it's important to\n            consider how it enhances collaboration and identity clarity without\n            overwhelming the interface. Here are key best practices:\n          </p>\n\n          <ul>\n            <li>\n              <strong>Use to represent teams or shared ownership:</strong> Ideal\n              for showing members of a project, contributors, or shared access\n              groups in apps like dashboards or chat.\n            </li>\n            <li>\n              <strong>Don’t overuse in dense interfaces:</strong> Too many\n              avatars in a group can clutter the view. Use the <code>max</code>{\" \"}\n              prop to collapse overflow into a <code>+N</code> indicator.\n            </li>\n            <li>\n              <strong>Use consistent sizing and spacing:</strong> Align all\n              avatars to the same size to maintain visual harmony. Use{\" \"}\n              <code>spacing</code> options (or <code>sx</code>) for controlled\n              overlap.\n            </li>\n            <li>\n              <strong>\n                Provide accessible <code>alt</code> text:\n              </strong>{\" \"}\n              Each avatar should have meaningful alternative text for screen\n              readers. Avoid empty or redundant <code>alt</code> values.\n            </li>\n            <li>\n              <strong>Avoid interactive behavior within AvatarGroup:</strong>{\" \"}\n              The component is for display only. If avatars must be clickable,\n              wrap each <code>&lt;Avatar&gt;</code> individually in buttons or\n              links outside the group context.\n            </li>\n            <li>\n              <strong>Keep it compact:</strong> AvatarGroup is not meant for\n              long lists. For large user sets, link to a full view or show\n              summary avatars only.\n            </li>\n            <li>\n              <strong>Fallbacks matter:</strong> Always account for broken\n              images by using initials or icons as fallback content within each{\" \"}\n              <code>Avatar</code>.\n            </li>\n          </ul>\n\n          <p>\n            These practices ensure that <code>AvatarGroup</code> remains a\n            helpful, visually tidy, and accessible interface element wherever\n            user identity grouping is necessary.\n          </p>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default AvatarGroupGuidance;\n"],"names":["AvatarGroupGuidance","location","useLocation","React","SistentLayout","title","className","id","TabButton","pathname","onClick","navigate"],"sourceRoot":""}