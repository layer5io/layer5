{"version":3,"file":"component---src-sections-projects-sistent-components-popper-index-js-908fa37c16217c6ab6a1.js","mappings":"yMA8IA,UArIsBA,KACpB,MAAMC,GAAWC,EAAAA,EAAAA,gBACX,OAAEC,IAAWC,EAAAA,EAAAA,MAEb,EAACC,EAAS,EAACC,IAAeC,EAAAA,EAAAA,UAAS,OACnC,EAACC,EAAU,EAACC,IAAgBF,EAAAA,EAAAA,UAAS,WACrC,EAACG,EAAK,EAACC,IAAWJ,EAAAA,EAAAA,WAAS,GAE3BK,EAAeC,GAAkBC,IACrCR,EAAYQ,EAAMC,eAClBJ,GAASK,GAASR,IAAcK,IAAiBG,IACjDP,EAAaI,EAAa,EAG5B,OACEI,EAAAA,cAACC,EAAAA,EAAa,CAACC,MAAM,UACnBF,EAAAA,cAAA,OAAKG,UAAU,WACbH,EAAAA,cAAA,KAAGI,GAAG,YACJJ,EAAAA,cAAA,UAAI,WAENA,EAAAA,cAAA,SAAG,kRAMHA,EAAAA,cAAA,OAAKG,UAAU,cACbH,EAAAA,cAACK,EAAAA,QAAS,CACRF,UACwB,wCAAtBnB,EAASsB,SACL,SACA,GAENC,QAASA,KAAMC,EAAAA,EAAAA,UAAS,uCACxBN,MAAM,aAERF,EAAAA,cAACK,EAAAA,QAAS,CACRF,UAEE,iDADAnB,EAASsB,SAEL,SACA,GAENC,QAASA,KACPC,EAAAA,EAAAA,UAAS,gDAEXN,MAAM,aAERF,EAAAA,cAACK,EAAAA,QAAS,CACRF,UACwB,6CAAtBnB,EAASsB,SACL,SACA,GAENC,QAASA,KAAMC,EAAAA,EAAAA,UAAS,4CACxBN,MAAM,UAGVF,EAAAA,cAAA,OAAKG,UAAU,gBACbH,EAAAA,cAAA,SAAG,+QAMHA,EAAAA,cAAA,KAAGI,GAAG,SACJJ,EAAAA,cAAA,UAAI,UAENA,EAAAA,cAAA,SAAG,6HAIHA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,0DACJA,EAAAA,cAAA,UAAI,gDACJA,EAAAA,cAAA,UAAI,oDAENA,EAAAA,cAAA,KAAGI,GAAG,iBACJJ,EAAAA,cAAA,UAAI,kBAENA,EAAAA,cAAA,SAAG,yGAIHA,EAAAA,cAACS,EAAAA,qBAAoB,CAACC,YAAaxB,EAAS,OAAS,SACnDc,EAAAA,cAACW,EAAAA,OAAM,CAAClB,KAAMA,EAAML,SAAUA,EAAUG,UAAWA,GACjDS,EAAAA,cAACY,EAAAA,IAAG,CAACC,GAAI,CAAEC,OAAQ,EAAGC,EAAG,EAAGC,QAAS,qBAAsB,gCAK/DhB,EAAAA,cAACiB,EAAAA,GAAG,CAACC,UAAQ,EAACf,UAAU,mBACtBH,EAAAA,cAACS,EAAAA,qBAAoB,CAACC,YAAaxB,EAAS,OAAS,SACnDc,EAAAA,cAACmB,EAAAA,OAAM,CACLC,QAAQ,YACRC,MAAM,gBACNC,KAAK,SACLf,QAASZ,EAAY,cAI3BK,EAAAA,cAAA,SAAG,4HAIHA,EAAAA,cAAA,KAAGI,GAAG,2BACJJ,EAAAA,cAAA,UAAI,4BAENA,EAAAA,cAAA,SAAG,iJAKHA,EAAAA,cAACiB,EAAAA,GAAG,CAACC,UAAQ,EAACf,UAAU,mBACtBH,EAAAA,cAACS,EAAAA,qBAAoB,CAACC,YAAaxB,EAAS,OAAS,SACnDc,EAAAA,cAACmB,EAAAA,OAAM,CACLC,QAAQ,YACRC,MAAM,gBACNC,KAAK,SACLf,QAASZ,EAAY,aAI3BK,EAAAA,cAAA,SAAG,4HAMO,C","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/popper/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport { SistentThemeProvider, Popper, Button, Box } from \"@sistent/sistent\";\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { SistentLayout } from \"../../sistent-layout\";\nimport { Row } from \"../../../../../reusecore/Layout\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\nconst SistentPopper = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [placement, setPlacement] = useState(\"bottom\");\n  const [open, setOpen] = useState(false);\n\n  const handleClick = (newPlacement) => (event) => {\n    setAnchorEl(event.currentTarget);\n    setOpen((prev) => placement !== newPlacement || !prev);\n    setPlacement(newPlacement);\n  };\n\n  return (\n    <SistentLayout title=\"Popper\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Popper</h2>\n        </a>\n        <p>\n          The Popper component provides a mechanism for positioning content\n          dynamically relative to a reference element. It is commonly used for\n          tooltips, dropdowns, and modals, enhancing the user experience by\n          presenting contextual information without overcrowding the interface.\n        </p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/popper\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/popper\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/popper/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/popper/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/popper/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/popper/code\")}\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <p>\n            Poppers are critical for displaying information dynamically and can\n            be used in various scenarios like tooltips, dropdowns, and menus. By\n            anchoring the content to a reference element, Poppers provide users\n            with relevant information as they interact with the interface.\n          </p>\n          <a id=\"Usage\">\n            <h2>Usage</h2>\n          </a>\n          <p>\n            The Popper component should be used in cases where context-sensitive\n            information is necessary. Here are common use cases:\n          </p>\n          <ul>\n            <li>Tooltips that provide additional information on hover.</li>\n            <li>Dropdown menus for navigation or selections.</li>\n            <li>Modals for confirmations or additional content.</li>\n          </ul>\n          <a id=\"Basic Example\">\n            <h3>Basic Example</h3>\n          </a>\n          <p>\n            Below is a simple example of how to use the Popper component to\n            display content relative to a button.\n          </p>\n          <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n            <Popper open={open} anchorEl={anchorEl} placement={placement}>\n              <Box sx={{ border: 1, p: 1, bgcolor: \"background.paper\" }}>\n                The content of the Popper.\n              </Box>\n            </Popper>\n          </SistentThemeProvider>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Button\n                variant=\"contained\"\n                label=\"Toggle Popper\"\n                size=\"medium\"\n                onClick={handleClick(\"bottom\")}\n              />\n            </SistentThemeProvider>\n          </Row>\n          <p>\n            The `anchorEl` prop specifies the element to which the Popper will\n            be anchored. The `open` prop controls its visibility.\n          </p>\n          <a id=\"Styling and Positioning\">\n            <h3>Styling and Positioning</h3>\n          </a>\n          <p>\n            You can customize the positioning of the Popper using the\n            `placement` prop to define where the Popper appears relative to the\n            anchor element.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Button\n                variant=\"contained\"\n                label=\"Toggle Popper\"\n                size=\"medium\"\n                onClick={handleClick(\"right\")}\n              />\n            </SistentThemeProvider>\n          </Row>\n          <p>\n            The above example demonstrates a Popper positioned right the\n            reference button, providing flexibility in its placement.\n          </p>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default SistentPopper;\n"],"names":["SistentPopper","location","useLocation","isDark","useStyledDarkMode","anchorEl","setAnchorEl","useState","placement","setPlacement","open","setOpen","handleClick","newPlacement","event","currentTarget","prev","React","SistentLayout","title","className","id","TabButton","pathname","onClick","navigate","SistentThemeProvider","initialMode","Popper","Box","sx","border","p","bgcolor","Row","$Hcenter","Button","variant","label","size"],"sourceRoot":""}