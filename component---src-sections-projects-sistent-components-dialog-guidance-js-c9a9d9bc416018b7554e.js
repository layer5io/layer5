"use strict";(self.webpackChunkLayer5=self.webpackChunkLayer5||[]).push([[2791],{13523:function(e,t,n){n.r(t);var a=n(96540),l=n(64810),i=n(86462),o=n(9184),r=n(48995),c=n(66054),s=n(96044),m=n(92121);t.default=()=>{const{isDark:e}=(0,m.G)(),t=(0,i.useLocation)(),{0:n,1:u}=(0,a.useState)(!1),{0:d,1:p}=(0,a.useState)(!1),{0:g,1:E}=(0,a.useState)(!1);return a.createElement(o.p,{title:"Dialog"},a.createElement("div",{className:"content"},a.createElement("a",{id:"Identity"},a.createElement("h2",null,"Dialog")),a.createElement("p",null,"The Dialog component is a modal window that appears on top of the main content to focus user attention on specific tasks or information. It provides a controlled way to present confirmations, forms, alerts, and detailed content without navigating away from the current context."),a.createElement("div",{className:"filterBtns"},a.createElement(s.default,{className:"/projects/sistent/components/dialog"===t.pathname?"active":"",onClick:()=>(0,l.navigate)("/projects/sistent/components/dialog"),title:"Overview"}),a.createElement(s.default,{className:"/projects/sistent/components/dialog/guidance"===t.pathname?"active":"",onClick:()=>(0,l.navigate)("/projects/sistent/components/dialog/guidance"),title:"Guidance"}),a.createElement(s.default,{className:"/projects/sistent/components/dialog/code"===t.pathname?"active":"",onClick:()=>(0,l.navigate)("/projects/sistent/components/dialog/code"),title:"Code"})),a.createElement("div",{className:"main-content"},a.createElement("p",null,"Proper usage of the Dialog component can enhance user experience by providing clear, focused interactions that guide users through important decisions and tasks. Below are guidelines and interactive examples to help you implement dialogs effectively."),a.createElement("a",{id:"Usage"},a.createElement("h2",null,"Usage")),a.createElement("p",null,"To use the Dialog component, include it with the required props and structure. The component supports various configurations and styling options:"),a.createElement("ul",null,a.createElement("li",null,a.createElement("code",null,"open")," to control visibility state"),a.createElement("li",null,a.createElement("code",null,"onClose")," for handling dialog closure"),a.createElement("li",null,a.createElement("code",null,"fullScreen")," for expanded display"),a.createElement("li",null,a.createElement("code",null,"maxWidth")," for size constraints")),a.createElement("br",null),a.createElement("a",{id:"Basic Dialog"},a.createElement("h3",null,"Basic Dialog")),a.createElement("p",null,"A simple confirmation dialog with title, content, and action buttons. This pattern is ideal for user confirmations and simple decision-making scenarios:"),a.createElement(c.fI,{$Hcenter:!0,className:"image-container"},a.createElement(r.SistentThemeProvider,{initialMode:e?"dark":"light"},a.createElement(r.Button,{variant:"contained",onClick:()=>u(!0)},"Open Basic Dialog"),a.createElement(r.Dialog,{open:n,onClose:()=>u(!1)},a.createElement(r.DialogTitle,null,"Confirm Action"),a.createElement(r.DialogContent,null,"Do you want to proceed with this action?"),a.createElement(r.DialogActions,null,a.createElement(r.Button,{variant:"contained",onClick:()=>u(!1)},"Cancel"),a.createElement(r.Button,{variant:"contained",color:"primary",onClick:()=>u(!1)},"Confirm"))))),a.createElement("br",null),a.createElement("a",{id:"Form Dialog"},a.createElement("h3",null,"Dialog with Form")),a.createElement("p",null,"Dialogs can contain forms for collecting user input without requiring navigation to a separate page. This pattern works well for quick data collection:"),a.createElement(c.fI,{$Hcenter:!0,className:"image-container"},a.createElement(r.SistentThemeProvider,{initialMode:e?"dark":"light"},a.createElement(r.Button,{variant:"contained",onClick:()=>p(!0)},"Open Form Dialog"),a.createElement(r.Dialog,{open:d,onClose:()=>p(!1)},a.createElement(r.DialogTitle,null,"Subscribe"),a.createElement(r.DialogContent,null,a.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"1rem",minWidth:"300px"}},a.createElement(r.Input,{label:"Email Address",type:"email",placeholder:"you@example.com",required:!0}),a.createElement(r.Input,{label:"Name",type:"text",placeholder:"John Doe",required:!0}))),a.createElement(r.DialogActions,null,a.createElement(r.Button,{variant:"contained",onClick:()=>p(!1)},"Cancel"),a.createElement(r.Button,{variant:"contained",color:"primary",onClick:()=>p(!1)},"Subscribe"))))),a.createElement("br",null),a.createElement("a",{id:"Full Screen Dialog"},a.createElement("h3",null,"Full-Screen Dialog")),a.createElement("p",null,"Full-screen dialogs provide maximum space for complex content or forms. They're particularly useful on mobile devices or when extensive user input is required:"),a.createElement(c.fI,{$Hcenter:!0,className:"image-container"},a.createElement(r.SistentThemeProvider,{initialMode:e?"dark":"light"},a.createElement(r.Button,{variant:"contained",onClick:()=>E(!0)},"Open Full-Screen Dialog"),a.createElement(r.Dialog,{open:g,onClose:()=>E(!1),fullScreen:!0,maxWidth:"lg"},a.createElement(r.DialogTitle,null,"Full-Screen Dialog"),a.createElement(r.DialogContent,null,a.createElement("p",null,"This dialog stretches to full screen. Use it when the user's full attention is needed for complex tasks or on mobile devices.")),a.createElement(r.DialogActions,{style:{justifyContent:"flex-start",paddingLeft:"24px"}},a.createElement(r.Button,{variant:"contained",onClick:()=>E(!1)},"Cancel"),a.createElement(r.Button,{variant:"contained",color:"secondary",onClick:()=>E(!1)},"Delete"))))),a.createElement("a",{id:"Best Practices"},a.createElement("h2",null,"Best Practices")),a.createElement("br",null),a.createElement("h3",null,"When to Use Dialogs"),a.createElement("p",null,"Use dialogs for critical user decisions, confirmations, and tasks that require immediate attention. Avoid overusing dialogs as they can interrupt workflow and frustrate users if used inappropriately."),a.createElement("h3",null,"Content Guidelines"),a.createElement("p",null,"Keep dialog content focused and concise. Use clear, action-oriented language for buttons and provide sufficient context without overwhelming the user."),a.createElement("h3",null,"Accessibility"),a.createElement("p",null,"Ensure proper focus management, keyboard navigation, and screen reader support. Always provide clear titles and meaningful action button labels."))))}}}]);
//# sourceMappingURL=component---src-sections-projects-sistent-components-dialog-guidance-js-c9a9d9bc416018b7554e.js.map