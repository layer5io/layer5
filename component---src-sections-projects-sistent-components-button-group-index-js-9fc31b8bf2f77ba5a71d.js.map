{"version":3,"file":"component---src-sections-projects-sistent-components-button-group-index-js-9fc31b8bf2f77ba5a71d.js","mappings":"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","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/button-group/index.js","webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js"],"sourcesContent":["import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport {\n  SistentThemeProvider,\n  ButtonGroup,\n  Button,\n  Box,\n} from \"@sistent/sistent\";\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { SistentLayout } from \"../../sistent-layout\";\nimport { Row } from \"../../../../../reusecore/Layout\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\nconst buttons = [\n  <Button key=\"one\">One</Button>,\n  <Button key=\"two\">Two</Button>,\n  <Button key=\"three\">Three</Button>,\n];\n\nconst SistentButtonGroup = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n\n  return (\n    <SistentLayout title=\"Button Group\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Button Group</h2>\n        </a>\n        <p>\n          The ButtonGroup component can be used to group related buttons\n          together. It is a container for multiple buttons that can be used to\n          group buttons together and apply styles to them. This component is\n          useful when you have a group of buttons that need to be styled in a\n          similar way.\n        </p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/button-group\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/button-group\")\n            }\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/button-group/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/button-group/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/button-group/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/button-group/code\")\n            }\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <p>\n            The ButtonGroup component is a container for multiple buttons that\n            can be used to group buttons together and apply styles to them. This\n            component is useful when you have a group of buttons that need to be\n            styled in a similar way. The ButtonGroup component can be used to\n            group related buttons together.\n          </p>\n          <a id=\"Basic Usage\">\n            <h2>Basic Usage</h2>\n          </a>\n          <p>\n            The buttons can be grouped by wrapping them with the ButtonGroup\n            component. They need to be immediate children.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <ButtonGroup variant=\"contained\" aria-label=\"Basic button group\">\n                {buttons}\n              </ButtonGroup>\n            </SistentThemeProvider>\n          </Row>\n          <a id=\"Button variants\">\n            <h2>Button variants</h2>\n          </a>\n          <p>\n            The ButtonGroup component supports the following variants: contained\n            (default), outlined, and text.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                  \"& > *\": {\n                    m: 1,\n                  },\n                }}\n              >\n                <ButtonGroup\n                  variant=\"contained\"\n                  aria-label=\"Basic button group\"\n                >\n                  {buttons}\n                </ButtonGroup>\n                <ButtonGroup variant=\"outlined\" aria-label=\"Basic button group\">\n                  {buttons}\n                </ButtonGroup>\n                <ButtonGroup variant=\"text\" aria-label=\"Basic button group\">\n                  {buttons}\n                </ButtonGroup>\n              </Box>\n            </SistentThemeProvider>\n          </Row>\n          <a id=\"Vertical Group\">\n            <h2>Vertical Group</h2>\n          </a>\n          <p>\n            The ButtonGroup component can be used to create a vertical group of\n            buttons by setting the vertical prop to true.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  \"& > *\": {\n                    m: 1,\n                  },\n                }}\n              >\n                <ButtonGroup\n                  orientation=\"vertical\"\n                  variant=\"contained\"\n                  aria-label=\"Basic button group\"\n                >\n                  {buttons}\n                </ButtonGroup>\n                <ButtonGroup\n                  orientation=\"vertical\"\n                  variant=\"outlined\"\n                  aria-label=\"Basic button group\"\n                >\n                  {buttons}\n                </ButtonGroup>\n                <ButtonGroup\n                  orientation=\"vertical\"\n                  variant=\"text\"\n                  aria-label=\"Basic button group\"\n                >\n                  {buttons}\n                </ButtonGroup>\n              </Box>\n            </SistentThemeProvider>\n          </Row>\n          <a id=\"Disabled elevation\">\n            <h2>Disabled elevation</h2>\n          </a>\n          <p>\n            You can remove the elevation with the <code>disableElevation</code>{\" \"}\n            prop.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <ButtonGroup\n                disableElevation\n                variant=\"contained\"\n                aria-label=\"Basic button group\"\n              >\n                {buttons}\n              </ButtonGroup>\n            </SistentThemeProvider>\n          </Row>\n          <a id=\"Sizes\">\n            <h2>Sizes</h2>\n          </a>\n          <p>\n            The ButtonGroup component supports the following sizes: small,\n            medium (default), and large.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                  \"& > *\": {\n                    m: 1,\n                  },\n                }}\n              >\n                <ButtonGroup\n                  size=\"small\"\n                  variant=\"contained\"\n                  aria-label=\"Basic button group\"\n                >\n                  {buttons}\n                </ButtonGroup>\n                <ButtonGroup\n                  size=\"medium\"\n                  variant=\"contained\"\n                  aria-label=\"Basic button group\"\n                >\n                  {buttons}\n                </ButtonGroup>\n                <ButtonGroup\n                  size=\"large\"\n                  variant=\"contained\"\n                  aria-label=\"Basic button group\"\n                >\n                  {buttons}\n                </ButtonGroup>\n              </Box>\n            </SistentThemeProvider>\n          </Row>\n          <a id=\"Full width\">\n            <h2>Full width</h2>\n          </a>\n          <p>\n            You can make the ButtonGroup full width with the{\" \"}\n            <code>fullWidth</code> prop.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <ButtonGroup\n                fullWidth\n                variant=\"contained\"\n                aria-label=\"Basic button group\"\n              >\n                {buttons}\n              </ButtonGroup>\n            </SistentThemeProvider>\n          </Row>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default SistentButtonGroup;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n"],"names":["buttons","React","Button","key","SistentButtonGroup","location","useLocation","isDark","useStyledDarkMode","SistentLayout","title","className","id","TabButton","pathname","onClick","navigate","Row","$Hcenter","SistentThemeProvider","initialMode","ButtonGroup","variant","Box","sx","display","flexDirection","alignItems","m","orientation","disableElevation","size","fullWidth","JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","contents","setContents","useState","useEffect","anchors","document","querySelectorAll","console","log","Array","from","map","a","link","text","intapath","setIntapath","path","window","x","Link","to","activeClassName","_ref","children","SistentWrapper","TOC","Container","SistentPagination","IntraPage"],"sourceRoot":""}