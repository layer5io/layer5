{"version":3,"file":"component---src-pages-projects-sistent-identity-spacing-guidance-js-22e894ddc50e3da90c82.js","mappings":"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","sources":["webpack://Layer5/./src/assets/images/app/projects/sistent/space-token-table-2-light.png","webpack://Layer5/./src/assets/images/app/projects/sistent/space-token-table-2-dark.png","webpack://Layer5/./src/assets/images/app/projects/sistent/space-token-table-3-light.png","webpack://Layer5/./src/assets/images/app/projects/sistent/space-token-table-3-dark.png","webpack://Layer5/./src/sections/Projects/Sistent/identity/spacing/guidance.js","webpack://Layer5/./src/pages/projects/sistent/identity/spacing/guidance.js","webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/space-token-table-2-light-17e47722e59c9326623fd99567a1b30d.png\";","export default __webpack_public_path__ + \"static/space-token-table-2-dark-9f90a39e0268bb1aee337b041c8accd4.png\";","export default __webpack_public_path__ + \"static/space-token-table-3-light-446e3b8d937a5ff8291b71a0716f7499.png\";","export default __webpack_public_path__ + \"static/space-token-table-3-dark-35c13c7a780793e0502dcf1921f59574.png\";","import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport SpaceTokenTable2 from \"../../../../../assets/images/app/projects/sistent/space-token-table-2-light.png\";\nimport SpaceTokenTable2Dark from \"../../../../../assets/images/app/projects/sistent/space-token-table-2-dark.png\";\n\nimport SpaceTokenTable3 from \"../../../../../assets/images/app/projects/sistent/space-token-table-3-light.png\";\nimport SpaceTokenTable3Dark from \"../../../../../assets/images/app/projects/sistent/space-token-table-3-dark.png\";\nimport { Col, Row } from \"../../../../../reusecore/Layout\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\nimport { SistentLayout } from \"../../sistent-layout\";\n\nimport Button from \"../../../../../reusecore/Button\";\n\nexport const SpacingGuidance = () => {\n  const { isDark } = useStyledDarkMode();\n  const location = useLocation();\n\n  return (\n    <SistentLayout title=\"Spacing\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Spacing</h2>\n        </a>\n        <p>\n          Space is the unseen component in designed solutions that enables\n          clear, concise, and consistent arrangement of interface elements\n          across a screen.\n        </p>\n        <div className=\"filterBtns\">\n          <Button\n            className={\n              location.pathname === \"/projects/sistent/identity/spacing\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/identity/spacing\")}\n            title=\"Overview\"\n          />\n          <Button\n            className={\n              location.pathname ===\n              \"/projects/sistent/identity/spacing/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/identity/spacing/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <Button\n            className={\n              location.pathname === \"/projects/sistent/identity/spacing/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/identity/spacing/code\")}\n            title=\"Code\"\n          />\n        </div>\n\n        <div className=\"main-content\">\n          <p>\n            Applying spatial values to designs is a much debated topic and can\n            prove to be quite difficult and very confusing especially when\n            trying to maintain consistency across all designs. To this end, a\n            few concepts have been pieced together in order to simplify the\n            understanding of spatial harmony and ensure a consistent execution.\n          </p>\n          <a id=\"Spatial Organization\">\n            <h2>Spatial Organization</h2>\n          </a>\n          <p>\n            Mostly in an interface, the way space and spatial harmony is\n            achieved is by applying these space values to specific elements or\n            in specific use cases. This can range form the size of a given\n            element to the space between elements on a page.\n          </p>\n          <h3>Gap</h3>\n          <p>\n            Gap can be used to represent the space between any two given\n            elements in an interface. This can be the inset values in a button\n            or a card, stack or inline spacing between blocks of text or a group\n            of elements in a section, and can also be applicable for margin\n            values in a grid system. Because this can be confusing to determine\n            a mode of application given that the spatial system consists of over\n            10 different values, a set consisting of five to seven values can be\n            chosen to serve as all the values for the 'gap' spacing that will be\n            used in an interface.\n          </p>\n          <p>\n            Arriving at these values, however is not arbitrary or random\n            selection from the spacing scale. Instead, a geometric progression\n            gotten by multiplying the base space value by a common ratio of two\n            and also dividing by the same ratio will provide the values needed\n            to populate the 'gap' category. This arrangement will ensure uniform\n            space across an interface that will greatly help to establish\n            element relationships and hierarchy.\n          </p>\n          <Row Hcenter className=\"image-container\">\n            <Col md={8} lg={8} sm={12}>\n              <img\n                src={isDark ? SpaceTokenTable2Dark : SpaceTokenTable2}\n                alt=\"Space Token Table\"\n              />\n            </Col>\n          </Row>\n          <p>\n            *The last spacing value of 80px that was included was added because\n            80px is the value for the margin in the 12 column grid that is being\n            applied for desktop screens.\n          </p>\n          <h3>Radius</h3>\n          <p>\n            The radius value of elements in an interface help to define the\n            theme and density that it conveys. Little to no radius can describe\n            a more grotesque or brutal theme, while higher and more consistent\n            use of radiuses can describe a modern and minimal UI theme. Radius\n            values can be determined based on the use case and the needs of the\n            designs being curated. With Layer5, we have chosen five radius\n            values that can provide a the much needed variation that can help to\n            describe a minimal and consistent user interface.\n          </p>\n          <Row Hcenter className=\"image-container\">\n            <Col md={8} lg={8} sm={12}>\n              <img\n                src={isDark ? SpaceTokenTable3Dark : SpaceTokenTable3}\n                alt=\"Space Token Table\"\n              />\n            </Col>\n          </Row>\n          <p>\n            As is the case with most user interface decisions that are agreed\n            upon, these values should be subjected to proper scrutiny based on\n            the intended use case as well as appropriate exploration to ensure\n            the best possible application.\n          </p>\n          <h3>Size</h3>\n          <p>\n            Size refers to the amount of area that an atom or element of a\n            design takes up in the available space of the user interface.\n            Whether it’s that of an icon or the total size of an image, all of\n            that space can be described as size. While it is true that much\n            larger size values may not necessarily be strictly defined in the\n            spatial system, elements which are frequently used and require a\n            fixed size throughout a design can have specific values assigned to\n            them to ensure consistency.\n          </p>\n          <p>\n            Applicable scenarios can be in the case of buttons, text fields,\n            some cards, navigation menus, logos, and icons. While there are\n            exceptions to these elements, mostly, it is recommended that they\n            appear in a uniform size across an interface to improve the\n            consistency therein.\n          </p>\n          <a id=\"Space Application Considerations\">\n            <h2>Space Application Considerations</h2>\n          </a>\n          <p>\n            For spacing to be effectively employed in designs, a few\n            considerations are to be made to enable a simple, yet, uniform\n            application of space values across designs. One such principles is\n            that in a bounding box, the padding of the box should be the highest\n            spacing value. This simply means that for any container, (could be a\n            card, button, an entire page layout) both the horizontal and\n            vertical padding values must be more than any other space values\n            used inside of the container to separate its child elements.\n          </p>\n          <p>\n            This is applicable whether the horizontal and vertical paddings have\n            the same or different values. To provide more, clarity, the inline\n            spacing in a container should not be more than its horizontal\n            padding, and the stack spacing value should not be more than the\n            container's vertical padding. This gradual decrease in the space\n            value as we go deeper into a container or an element helps to\n            enhance uniformity and consistency across designs.\n          </p>\n          <h3>Exceptions</h3>\n          <p>\n            Of course, these suggestions are not set in stone, and as such,\n            exceptions should be made to accommodate the peculiar needs of a\n            design and its existing principles. One of the cases where\n            exceptions can apply is when proper separation needs to be\n            established among a group of elements.\n          </p>\n          <p>\n            Although most pages will have a horizontal padding value, they\n            seldom have a vertical padding value and since elements are mostly\n            arranged in a vertical stack in a digital interface, it becomes\n            necessary that proper separation is established in order to assist\n            users to easily identify sections and navigate through the content\n            of a page in the proper manner for better understanding. Varying\n            values of space can therefore be employed in this vertical stack to\n            improve users' clarity and minimize any confusion encountered.\n          </p>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n","import React from \"react\";\nimport { SpacingGuidance } from \"../../../../../sections/Projects/Sistent/identity/spacing/guidance\";\n\nconst SpacingGuidancePage = () => {\n  return <SpacingGuidance />;\n};\n\nexport default SpacingGuidancePage;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n"],"names":["SpacingGuidance","isDark","useStyledDarkMode","location","useLocation","React","SistentLayout","title","className","id","Button","pathname","onClick","navigate","Row","Hcenter","Col","md","lg","sm","src","SpaceTokenTable2Dark","SpaceTokenTable2","alt","SpaceTokenTable3Dark","SpaceTokenTable3","SpacingGuidancePage","JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","contents","setContents","useState","useEffect","anchors","document","querySelectorAll","console","log","Array","from","map","a","link","text","intapath","setIntapath","path","window","x","key","Link","to","activeClassName","_ref","children","SistentWrapper","TOC","Container","SistentPagination","IntraPage"],"sourceRoot":""}