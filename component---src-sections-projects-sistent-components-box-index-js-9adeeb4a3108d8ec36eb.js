"use strict";(self.webpackChunkLayer5=self.webpackChunkLayer5||[]).push([[8678],{90294:function(e,t,n){n.r(t);var a=n(96540),o=n(64810),s=n(86462),i=n(48995),l=n(96044),r=n(9184),c=n(66054),m=n(92121);t.default=()=>{const e=(0,s.useLocation)(),{isDark:t}=(0,m.G)();return a.createElement(r.p,{title:"Box"},a.createElement("div",{className:"content"},a.createElement("a",{id:"Identity"},a.createElement("h2",null,"Box")),a.createElement("p",null,"The ",a.createElement("code",null,"Box")," component is a versatile, theme-aware container in Sistent, ideal for styling and layout customization. It supports the sx prop for easy, responsive styling and can render as any HTML element."),a.createElement("div",{className:"filterBtns"},a.createElement(l.default,{className:"/projects/sistent/components/box"===e.pathname?"active":"",onClick:()=>(0,o.navigate)("/projects/sistent/components/box"),title:"Overview"}),a.createElement(l.default,{className:"/projects/sistent/components/box/guidance"===e.pathname?"active":"",onClick:()=>(0,o.navigate)("/projects/sistent/components/box/guidance"),title:"Guidance"}),a.createElement(l.default,{className:"/projects/sistent/components/box/code"===e.pathname?"active":"",onClick:()=>(0,o.navigate)("/projects/sistent/components/box/code"),title:"Code"})),a.createElement("div",{className:"main-content"},a.createElement("p",null,"The ",a.createElement("code",null,"Box")," component is a flexible and foundational container in Sistent, designed to structure and style content. It provides quick access to the theme and CSS utilities, allowing for easy customization and responsive design. Using the sx prop, developers can apply CSS styles directly with theme-aware properties, making Box ideal for layouts, spacing, and other UI adjustments. It can render as any HTML element using the component prop, offering high versatility in both structure and styling."),a.createElement("a",{id:"Usage"},a.createElement("h2",null,"Usage")),a.createElement("p",null,"The Box component differs from other containers available in Sistent in that its usage is intended to be multipurpose and open-ended, just like a ",a.createElement("code",null,"`div`"),". Components like Container, Stack and Paper, by contrast, feature usage-specific props that make them ideal for certain use cases: Container for main layout orientation, Stack for one-dimensional layouts, and Paper for elevated surfaces."),a.createElement("h3",null,"Box component"),a.createElement("p",null,"The Box component renders as a ",a.createElement("code",null,"`div`")," by default, but you can swap in any other valid HTML tag or React component using the component prop. The demo below replaces the ",a.createElement("code",null,"`div`"),"with a ",a.createElement("code",null,"`section`")," element:"),a.createElement(c.fI,{$Hcenter:!0,className:"image-container"},a.createElement(i.SistentThemeProvider,{initialMode:t?"dark":"light"},a.createElement(i.Box,{component:"section",sx:{p:2,border:"1px dashed grey"}},"This Box renders as an HTML section element."))),a.createElement("a",{id:"Customization"},a.createElement("h2",null,"Customization")),a.createElement("p",null,"The Box component can be styled flexibly with Sistent",a.createElement("code",null,"sx"),"prop and custom themes. The sx prop allows quick application of CSS styles that are theme-aware, enabling responsive and consistent design."),a.createElement("h3",null,"Using the sx Prop"),a.createElement("p",null,"The sx prop supports a wide range of style properties, including colors, spacing, and responsive adjustments. It directly accesses theme values, allowing you to apply theme-based styles to a Box with minimal code."),a.createElement(c.fI,{$Hcenter:!0,className:"image-container"},a.createElement(i.SistentThemeProvider,{initialMode:t?"dark":"light"},a.createElement(i.Box,{sx:{width:100,height:100,borderRadius:1,bgcolor:"primary.main","&:hover":{bgcolor:"primary.dark"}}}))))))}}}]);
//# sourceMappingURL=component---src-sections-projects-sistent-components-box-index-js-9adeeb4a3108d8ec36eb.js.map