{"version":3,"file":"component---src-sections-projects-sistent-components-badge-code-js-2be381e87a43e8dbb237.js","mappings":"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","sources":["webpack://Layer5/./node_modules/@mui/icons-material/esm/Mail.js","webpack://Layer5/./src/sections/Projects/Sistent/components/badge/code.js","webpack://Layer5/./src/sections/Projects/Sistent/components/button/code-block.js","webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4-8 5-8-5V6l8 5 8-5z\"\n}), 'Mail');","import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport { Badge, SistentThemeProvider, Avatar } from \"@sistent/sistent\";\nimport { CodeBlock } from \"../button/code-block\";\nimport MailIcon from \"@mui/icons-material/Mail\";\nimport { SistentLayout } from \"../../sistent-layout\";\n\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\nconst codes = [\n  `  <SistentThemeProvider>\n       <Badge badgeContent={4} color=\"primary\">\n         <MailIcon />\n       </Badge>\n  </SistentThemeProvider>`,\n  `  <SistentThemeProvider>\n       <Badge variant=\"dot\" color=\"secondary\">\n         <MailIcon />\n       </Badge>\n  </SistentThemeProvider>`,\n  `  <SistentThemeProvider>\n       <Badge badgeContent={4} color=\"primary\" />\n       <Badge badgeContent={4} color=\"secondary\" />\n       <Badge badgeContent={4} color=\"error\" />\n       <Badge badgeContent={4} color=\"warning\" />\n       <Badge badgeContent={4} color=\"success\" />\n  </SistentThemeProvider>`,\n  `  <SistentThemeProvider>\n       <Badge \n         badgeContent={4} \n         color=\"primary\"\n         anchorOrigin={{\n           vertical: 'top',\n           horizontal: 'right',\n         }}\n       >\n         <MailIcon />\n       </Badge>\n  </SistentThemeProvider>`,\n  `  <SistentThemeProvider>\n       <Avatar>\n         <Badge\n           overlap=\"circular\"\n           anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n           variant=\"dot\"\n           color=\"success\"\n         >\n           U\n         </Badge>\n       </Avatar>\n  </SistentThemeProvider>`,\n];\n\nconst BadgeCode = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n\n  return (\n    <SistentLayout title=\"Badge\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Badge</h2>\n        </a>\n        <p>\n          A badge is a small piece of information that is used to convey a\n          specific message or status. It is often used to provide additional\n          context or information about an item, such as a notification count,\n          status indicator, or label.\n        </p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/badge\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/badge\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/badge/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/badge/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/badge/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/badge/code\")}\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <p>\n            Badges display counts, small information indicators, or status\n            markers that are attached to other interface elements.\n          </p>\n          <a id=\"Basic Badge\">\n            <h2>Basic Badge</h2>\n          </a>\n          <p>\n            Examples of badges containing text, primarily using the badgeContent\n            prop.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Badge badgeContent={4} color=\"primary\">\n                  <MailIcon />\n                </Badge>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"basic-badge\" code={codes[0]} />\n          </div>\n          <h3>Dot Badge</h3>\n          <p>The dot badge shows a small dot indicator without any content.</p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Badge variant=\"dot\" color=\"secondary\">\n                  <MailIcon />\n                </Badge>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"dot-badge\" code={codes[1]} />\n          </div>\n          <h3>Badge Colors</h3>\n          <p>Use the color prop to apply theme palette colors to badges.</p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    gap: \"20px\",\n                  }}\n                >\n                  <Badge badgeContent={4} color=\"primary\">\n                    <MailIcon />\n                  </Badge>\n                  <Badge badgeContent={4} color=\"secondary\">\n                    <MailIcon />\n                  </Badge>\n                  <Badge badgeContent={4} color=\"error\">\n                    <MailIcon />\n                  </Badge>\n                  <Badge badgeContent={4} color=\"warning\">\n                    <MailIcon />\n                  </Badge>\n                  <Badge badgeContent={4} color=\"success\">\n                    <MailIcon />\n                  </Badge>\n                </div>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"badge-colors\" code={codes[2]} />\n          </div>\n          <a id=\"Badge Position\">\n            <h2>Badge Position</h2>\n          </a>\n          <p>Use the anchorOrigin prop to change the position of the badge.</p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    gap: \"20px\",\n                  }}\n                >\n                  <Badge\n                    badgeContent={4}\n                    color=\"primary\"\n                    anchorOrigin={{\n                      vertical: \"top\",\n                      horizontal: \"right\",\n                    }}\n                  >\n                    <MailIcon />\n                  </Badge>\n                  <Badge\n                    badgeContent={4}\n                    color=\"primary\"\n                    anchorOrigin={{\n                      vertical: \"top\",\n                      horizontal: \"left\",\n                    }}\n                  >\n                    <MailIcon />\n                  </Badge>\n                  <Badge\n                    badgeContent={4}\n                    color=\"primary\"\n                    anchorOrigin={{\n                      vertical: \"bottom\",\n                      horizontal: \"right\",\n                    }}\n                  >\n                    <MailIcon />\n                  </Badge>\n                  <Badge\n                    badgeContent={4}\n                    color=\"primary\"\n                    anchorOrigin={{\n                      vertical: \"bottom\",\n                      horizontal: \"left\",\n                    }}\n                  >\n                    <MailIcon />\n                  </Badge>\n                </div>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"badge-position\" code={codes[3]} />\n          </div>\n          <a id=\"Badge with Avatar\">\n            <h2>Badge with Avatar</h2>\n          </a>\n          <p>Badges can be used with avatars to show user status.</p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Avatar>\n                  <Badge\n                    overlap=\"circular\"\n                    anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n                    variant=\"dot\"\n                    color=\"success\"\n                  >\n                    U\n                  </Badge>\n                </Avatar>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"badge-avatar\" code={codes[4]} />\n          </div>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default BadgeCode;\n","import React, { useState } from \"react\";\nimport Code from \"../../../../../components/CodeBlock\";\n\nexport const CodeBlock = ({ name, code }) => {\n  const [showCode, setShowCode] = useState(false);\n  const onChange = () => {\n    setShowCode((prev) => !prev);\n  };\n  return (\n    <div className=\"show-code\">\n      <input type=\"checkbox\" name={name} id={name} onChange={onChange} />\n      <label htmlFor={name} className=\"label\">\n        Show Code\n      </label>\n      {showCode && (\n        <Code codeString={code} language=\"javascript\" />\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n"],"names":["d","codes","BadgeCode","location","useLocation","isDark","useStyledDarkMode","React","SistentLayout","title","className","id","TabButton","pathname","onClick","navigate","SistentThemeProvider","initialMode","Badge","badgeContent","color","MailIcon","CodeBlock","name","code","variant","style","display","justifyContent","gap","anchorOrigin","vertical","horizontal","Avatar","overlap","_ref","showCode","setShowCode","useState","type","onChange","prev","htmlFor","Code","codeString","language","JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","contents","setContents","useEffect","anchors","document","querySelectorAll","console","log","Array","from","map","a","link","text","intapath","setIntapath","path","window","x","key","Link","to","activeClassName","children","SistentWrapper","TOC","Container","SistentPagination","IntraPage"],"sourceRoot":""}