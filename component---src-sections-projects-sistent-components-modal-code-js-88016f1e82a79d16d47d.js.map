{"version":3,"file":"component---src-sections-projects-sistent-components-modal-code-js-88016f1e82a79d16d47d.js","mappings":"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","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/button/code-block.js","webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js","webpack://Layer5/./node_modules/@mui/icons-material/esm/Info.js","webpack://Layer5/./node_modules/@mui/icons-material/esm/PersonAdd.js","webpack://Layer5/./src/sections/Projects/Sistent/components/modal/code.js","webpack://Layer5/./node_modules/@mui/icons-material/esm/Error.js","webpack://Layer5/./node_modules/@mui/icons-material/esm/CheckCircle.js","webpack://Layer5/./node_modules/@mui/icons-material/esm/Warning.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Code from \"../../../../../components/CodeBlock\";\n\nexport const CodeBlock = ({ name, code }) => {\n  const [showCode, setShowCode] = useState(false);\n  const onChange = () => {\n    setShowCode((prev) => !prev);\n  };\n  return (\n    <div className=\"show-code\">\n      <input type=\"checkbox\" name={name} id={name} onChange={onChange} />\n      <label htmlFor={name} className=\"label\">\n        Show Code\n      </label>\n      {showCode && (\n        <Code codeString={code} language=\"javascript\" />\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-6h2zm0-8h-2V7h2z\"\n}), 'Info');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m-9-2V7H4v3H1v2h3v3h2v-3h3v-2zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4\"\n}), 'PersonAdd');","import React, { useState } from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport { SistentLayout } from \"../../sistent-layout\";\nimport {\n  Box,\n  Button,\n  Modal,\n  ModalBody,\n  ModalButtonDanger,\n  ModalButtonPrimary,\n  ModalButtonSecondary,\n  ModalFooter,\n  SistentThemeProvider,\n  TextField,\n  Typography,\n} from \"@sistent/sistent\";\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\nimport { CodeBlock } from \"../button/code-block\";\nimport { ActionBox } from \"../../sistent.style\";\nimport WarningIcon from \"@mui/icons-material/Warning\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport ErrorIcon from \"@mui/icons-material/Error\";\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\n\nconst CustomInput = ({ label, placeholder }) => (\n  <Box sx={{ mb: 2 }}>\n    <Typography variant=\"subtitle1\" gutterBottom>\n      {label}\n    </Typography>\n    <TextField label={placeholder} variant=\"outlined\" fullWidth />\n  </Box>\n);\n\nconst codes = [\n  // Basic Modal\n  `import { \n    Button, \n    Modal, \n    ModalBody, \n    ModalFooter, \n    ModalButtonSecondary \n  } from \"@sistent/sistent\";\n\nfunction BasicModal() {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <Button \n        variant=\"contained\" \n        onClick={() => setOpen(true)}\n      >\n        Open Modal\n      </Button>\n      <Modal \n        open={open} \n        closeModal={() => setOpen(false)} \n        title=\"Basic Modal\"\n      >\n        <ModalBody>\n          <Typography>\n            This is a basic modal with simple content.\n          </Typography>\n        </ModalBody>\n        <ModalFooter variant=\"filled\">\n          <ModalButtonSecondary \n            onClick={() => setOpen(false)}\n          >\n            Close\n          </ModalButtonSecondary>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}`,\n\n  // Confirmation Modal\n  `import { \n    Button, \n    Modal, \n    ModalBody, \n    ModalFooter, \n    ModalButtonSecondary, \n    ModalButtonDanger,\n    Box,\n    Typography \n  } from \"@sistent/sistent\";\nimport WarningIcon from \"@mui/icons-material/Warning\";\n\nfunction ConfirmationModal() {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <Button \n        variant=\"contained\" \n        color=\"error\" \n        onClick={() => setOpen(true)}\n      >\n        Delete Item\n      </Button>\n      <Modal \n        open={open} \n        closeModal={() => setOpen(false)} \n        title=\"Confirm Deletion\"\n      >\n        <ModalBody>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n            <WarningIcon color=\"warning\" />\n            <Typography>\n              This action is irreversible! Are you sure?\n            </Typography>\n          </Box>\n        </ModalBody>\n        <ModalFooter variant=\"filled\">\n          <ModalButtonSecondary \n            onClick={() => setOpen(false)}\n          >\n            Cancel\n          </ModalButtonSecondary>\n          <ModalButtonDanger \n            onClick={() => setOpen(false)}\n          >\n            Delete\n          </ModalButtonDanger>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}`,\n\n  // Action Modal\n  `import { \n    Button, \n    Modal, \n    ModalBody, \n    ModalFooter, \n    ModalButtonSecondary, \n    ModalButtonPrimary, \n    TextField,\n    Box,\n    Typography\n  } from \"@sistent/sistent\";\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\n\nfunction ActionModal() {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <Button \n        variant=\"contained\" \n        onClick={() => setOpen(true)}\n      >\n        Add New User\n      </Button>\n      <Modal \n        open={open} \n        closeModal={() => setOpen(false)} \n        title=\"Add New User\"\n      >\n        <ModalBody>\n          <Box sx={{ \n            display: 'flex', \n            alignItems: 'center', \n            gap: 2, \n            mb: 3 \n          }}>\n            <PersonAddIcon color=\"primary\" />\n            <Typography>Create a new user account:</Typography>\n          </Box>\n          <TextField \n            label=\"Full Name\" \n            fullWidth \n            margin=\"normal\" \n          />\n          <TextField \n            label=\"Email\" \n            fullWidth \n            margin=\"normal\" \n          />\n          <TextField \n            label=\"Role\" \n            fullWidth \n            margin=\"normal\" \n          />\n        </ModalBody>\n        <ModalFooter variant=\"filled\">\n          <ModalButtonSecondary \n            onClick={() => setOpen(false)}\n          >\n            Cancel\n          </ModalButtonSecondary>\n          <ModalButtonPrimary \n            onClick={() => setOpen(false)}\n          >\n            Create User\n          </ModalButtonPrimary>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}`,\n\n  // Informational Modal\n  `import { \n    Button, \n    Modal, \n    ModalBody, \n    ModalFooter, \n    ModalButtonSecondary,\n    Box,\n    Typography\n  } from \"@sistent/sistent\";\nimport InfoIcon from \"@mui/icons-material/Info\";\n\nfunction InformationalModal() {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <Button \n        variant=\"outlined\" \n        onClick={() => setOpen(true)}\n      >\n        View Information\n      </Button>\n      <Modal \n        open={open} \n        closeModal={() => setOpen(false)} \n        title=\"System Information\"\n      >\n        <ModalBody>\n          <Box sx={{ \n            display: 'flex', \n            alignItems: 'flex-start', \n            gap: 2 \n          }}>\n            <InfoIcon color=\"info\" />\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>\n                About This Feature\n              </Typography>\n              <Typography variant=\"body1\" paragraph>\n                This feature helps you manage workflow efficiently.\n              </Typography>\n              <Typography variant=\"body2\">\n                Last updated: January 2025 • Version 2.1.0\n              </Typography>\n            </Box>\n          </Box>\n        </ModalBody>\n        <ModalFooter variant=\"filled\">\n          <ModalButtonSecondary \n            onClick={() => setOpen(false)}\n          >\n            Got it\n          </ModalButtonSecondary>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}`,\n\n  // Warning Modal\n  `import { \n    Button, \n    Modal, \n    ModalBody, \n    ModalFooter, \n    ModalButtonSecondary, \n    ModalButtonPrimary,\n    Box,\n    Typography\n  } from \"@sistent/sistent\";\nimport WarningIcon from \"@mui/icons-material/Warning\";\n\nfunction WarningModal() {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        sx={{ backgroundColor: \"warning.main\", color: \"white\" }}\n        onClick={() => setOpen(true)}\n      >\n        Proceed with Caution\n      </Button>\n      <Modal \n        open={open} \n        closeModal={() => setOpen(false)} \n        title=\"Warning\"\n      >\n        <ModalBody>\n          <Box sx={{ \n            display: 'flex', \n            alignItems: 'center', \n            gap: 2 \n          }}>\n            <WarningIcon sx={{ \n              color: \"warning.main\", \n              fontSize: 32 \n            }} />\n            <Box>\n              <Typography variant=\"body1\" paragraph>\n                This action may affect system performance.\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                Consider performing this during off-peak hours.\n              </Typography>\n            </Box>\n          </Box>\n        </ModalBody>\n        <ModalFooter variant=\"filled\">\n          <ModalButtonSecondary \n            onClick={() => setOpen(false)}\n          >\n            Cancel\n          </ModalButtonSecondary>\n          <ModalButtonPrimary \n            onClick={() => setOpen(false)}\n          >\n            Continue Anyway\n          </ModalButtonPrimary>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}`,\n\n  // Success Modal\n  `import { \n    Button, \n    Modal, \n    ModalBody, \n    ModalFooter, \n    ModalButtonPrimary,\n    Box,\n    Typography\n  } from \"@sistent/sistent\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\n\nfunction SuccessModal() {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <Button \n        variant=\"contained\" \n        color=\"success\" \n        onClick={() => setOpen(true)}\n      >\n        Complete Action\n      </Button>\n      <Modal \n        open={open} \n        closeModal={() => setOpen(false)} \n        title=\"Success!\"\n      >\n        <ModalBody>\n          <Box sx={{ \n            display: 'flex', \n            alignItems: 'center', \n            gap: 2 \n          }}>\n            <CheckCircleIcon color=\"success\" sx={{ fontSize: 48 }} />\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>\n                Operation Completed Successfully\n              </Typography>\n              <Typography variant=\"body1\">\n                Your changes have been saved and are now active.\n              </Typography>\n            </Box>\n          </Box>\n        </ModalBody>\n        <ModalFooter variant=\"filled\">\n          <ModalButtonPrimary \n            onClick={() => setOpen(false)}\n          >\n            Continue\n          </ModalButtonPrimary>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}`,\n\n  // Error Modal\n  `import { \n    Button, \n    Modal, \n    ModalBody, \n    ModalFooter, \n    ModalButtonSecondary, \n    ModalButtonPrimary,\n    Box,\n    Typography\n  } from \"@sistent/sistent\";\nimport ErrorIcon from \"@mui/icons-material/Error\";\n\nfunction ErrorModal() {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <Button \n        variant=\"contained\" \n        color=\"error\" \n        onClick={() => setOpen(true)}\n      >\n        Trigger Error\n      </Button>\n      <Modal \n        open={open} \n        closeModal={() => setOpen(false)} \n        title=\"Upload Failed\"\n      >\n        <ModalBody>\n          <Box sx={{ \n            display: 'flex', \n            alignItems: 'flex-start', \n            gap: 2 \n          }}>\n            <ErrorIcon color=\"error\" sx={{ fontSize: 32 }} />\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>\n                File Upload Failed\n              </Typography>\n              <Typography variant=\"body1\" paragraph>\n                The file could not be uploaded due to network issue.\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                <strong>What you can do:</strong>\n                 Check connection and try again.\n              </Typography>\n            </Box>\n          </Box>\n        </ModalBody>\n        <ModalFooter variant=\"filled\">\n          <ModalButtonSecondary \n            onClick={() => setOpen(false)}\n          >\n            Cancel\n          </ModalButtonSecondary>\n          <ModalButtonPrimary \n            onClick={() => setOpen(false)}\n          >\n            Try Again\n          </ModalButtonPrimary>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}`,\n\n  // Nested Modal\n  `import { \n    Button, \n    Modal, \n    ModalBody, \n    ModalFooter, \n    ModalButtonSecondary,\n    Typography\n  } from \"@sistent/sistent\";\n\nfunction NestedModalExample() {\n  const [parentOpen, setParentOpen] = useState(false);\n  const [childOpen, setChildOpen] = useState(false);\n\n  const handleParentClose = () => {\n    setParentOpen(false);\n    setChildOpen(false);\n  };\n\n  return (\n    <>\n      <Button \n        variant=\"contained\" \n        onClick={() => setParentOpen(true)}\n      >\n        Open Parent Modal\n      </Button>\n      \n      <Modal \n        open={parentOpen} \n        closeModal={handleParentClose} \n        title=\"Parent Modal\"\n      >\n        <ModalBody>\n          <Typography paragraph>\n            This is the parent modal. Click to open nested modal.\n          </Typography>\n          <Button \n            variant=\"outlined\" \n            onClick={() => setChildOpen(true)}\n          >\n            Open Nested Modal\n          </Button>\n        </ModalBody>\n        <ModalFooter variant=\"filled\">\n          <ModalButtonSecondary onClick={handleParentClose}>\n            Close Parent\n          </ModalButtonSecondary>\n        </ModalFooter>\n      </Modal>\n      \n      <Modal \n        open={childOpen} \n        closeModal={() => setChildOpen(false)} \n        title=\"Nested Modal\"\n      >\n        <ModalBody>\n          <Typography>\n            This nested modal appears on top of the parent.\n          </Typography>\n        </ModalBody>\n        <ModalFooter variant=\"filled\">\n          <ModalButtonSecondary \n            onClick={() => setChildOpen(false)}\n          >\n            Close Nested\n          </ModalButtonSecondary>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n}`\n];\n\nconst ModalCode = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n\n  const [openModals, setOpenModals] = useState({\n    basic: false,\n    confirmation: false,\n    action: false,\n    informational: false,\n    warning: false,\n    success: false,\n    error: false,\n    form: false,\n    nested: false\n  });\n\n  const [nestedModal, setNestedModal] = useState(false);\n\n  const toggleModal = (type) => {\n    setOpenModals(prev => ({\n      ...prev,\n      [type]: !prev[type]\n    }));\n  };\n\n  return (\n    <SistentLayout title=\"Modal\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Modal</h2>\n        </a>\n        <p>\n          Here are code examples for different variations and use cases of the Modal component.\n          Each example shows the implementation with a live preview and copyable code.\n        </p>\n\n        <div className=\"filterBtns\">\n          <TabButton\n            className={location.pathname === \"/projects/sistent/components/modal\" ? \"active\" : \"\"}\n            onClick={() => navigate(\"/projects/sistent/components/modal\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={location.pathname === \"/projects/sistent/components/modal/guidance\" ? \"active\" : \"\"}\n            onClick={() => navigate(\"/projects/sistent/components/modal/guidance\")}\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={location.pathname === \"/projects/sistent/components/modal/code\" ? \"active\" : \"\"}\n            onClick={() => navigate(\"/projects/sistent/components/modal/code\")}\n            title=\"Code\"\n          />\n        </div>\n\n        <div className=\"main-content\">\n          <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n\n            <a id=\"basic-modal\">\n              <h2>Basic Modal</h2>\n            </a>\n            <p>A simple modal with basic content and standard dismiss functionality.</p>\n            <div className=\"showcase\">\n              <div className=\"items\">\n                <Button variant=\"contained\" onClick={() => toggleModal(\"basic\")}>\n                  Open Basic Modal\n                </Button>\n                <Modal\n                  open={openModals.basic}\n                  closeModal={() => toggleModal(\"basic\")}\n                  title=\"Basic Modal\"\n                >\n                  <ModalBody>\n                    <Typography>\n                      This is a basic modal with simple content for displaying information.\n                    </Typography>\n                  </ModalBody>\n                  <ModalFooter variant=\"filled\">\n                    <ActionBox>\n                      <ModalButtonSecondary onClick={() => toggleModal(\"basic\")}>\n                        Close\n                      </ModalButtonSecondary>\n                    </ActionBox>\n                  </ModalFooter>\n                </Modal>\n              </div>\n              <CodeBlock name=\"modal-basic\" code={codes[0]} />\n            </div>\n\n            <a id=\"confirmation-modal\">\n              <h2>Confirmation Modal</h2>\n            </a>\n            <p>Confirmation modals for destructive or important actions requiring user consent.</p>\n            <div className=\"showcase\">\n              <div className=\"items\">\n                <Button variant=\"contained\" color=\"error\" onClick={() => toggleModal(\"confirmation\")}>\n                  Delete Item\n                </Button>\n                <Modal\n                  open={openModals.confirmation}\n                  closeModal={() => toggleModal(\"confirmation\")}\n                  title=\"Confirm Deletion\"\n                >\n                  <ModalBody>\n                    <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\n                      <WarningIcon color=\"warning\" />\n                      <Typography>\n                        This action is irreversible! Are you sure you want to delete this item?\n                      </Typography>\n                    </Box>\n                  </ModalBody>\n                  <ModalFooter variant=\"filled\">\n                    <ActionBox>\n                      <ModalButtonSecondary onClick={() => toggleModal(\"confirmation\")}>\n                        Cancel\n                      </ModalButtonSecondary>\n                      <ModalButtonDanger onClick={() => toggleModal(\"confirmation\")}>\n                        Delete\n                      </ModalButtonDanger>\n                    </ActionBox>\n                  </ModalFooter>\n                </Modal>\n              </div>\n              <CodeBlock name=\"modal-confirmation\" code={codes[1]} />\n            </div>\n\n            <a id=\"action-modal\">\n              <h2>Action Modal</h2>\n            </a>\n            <p>Action modals for task completion with forms and interactive elements.</p>\n            <div className=\"showcase\">\n              <div className=\"items\">\n                <Button variant=\"contained\" onClick={() => toggleModal(\"action\")}>\n                  Add New User\n                </Button>\n                <Modal\n                  open={openModals.action}\n                  closeModal={() => toggleModal(\"action\")}\n                  title=\"Add New User\"\n                >\n                  <ModalBody>\n                    <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2, mb: 3 }}>\n                      <PersonAddIcon color=\"primary\" />\n                      <Typography variant=\"body1\">\n                        Create a new user account with the following details:\n                      </Typography>\n                    </Box>\n                    <CustomInput label=\"Full Name\" placeholder=\"Enter user's full name\" />\n                    <CustomInput label=\"Email Address\" placeholder=\"Enter email address\" />\n                    <CustomInput label=\"Role\" placeholder=\"Select user role\" />\n                  </ModalBody>\n                  <ModalFooter variant=\"filled\">\n                    <ActionBox>\n                      <ModalButtonSecondary onClick={() => toggleModal(\"action\")}>\n                        Cancel\n                      </ModalButtonSecondary>\n                      <ModalButtonPrimary onClick={() => toggleModal(\"action\")}>\n                        Create User\n                      </ModalButtonPrimary>\n                    </ActionBox>\n                  </ModalFooter>\n                </Modal>\n              </div>\n              <CodeBlock name=\"modal-action\" code={codes[2]} />\n            </div>\n\n            <a id=\"informational-modal\">\n              <h2>Informational Modal</h2>\n            </a>\n            <p>Informational modals for displaying help content and contextual information.</p>\n            <div className=\"showcase\">\n              <div className=\"items\">\n                <Button variant=\"contained\" onClick={() => toggleModal(\"informational\")}>\n                  View Information\n                </Button>\n                <Modal\n                  open={openModals.informational}\n                  closeModal={() => toggleModal(\"informational\")}\n                  title=\"System Information\"\n                >\n                  <ModalBody>\n                    <Box sx={{ display: \"flex\", alignItems: \"flex-start\", gap: 2 }}>\n                      <InfoIcon color=\"info\" />\n                      <Box>\n                        <Typography variant=\"h6\" gutterBottom>\n                          About This Feature\n                        </Typography>\n                        <Typography variant=\"body1\" paragraph>\n                          This feature helps you manage your workflow efficiently with automated tools.\n                        </Typography>\n                        <Typography variant=\"body2\">\n                          Last updated: January 2025 • Version 2.1.0\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </ModalBody>\n                  <ModalFooter variant=\"filled\">\n                    <ActionBox>\n                      <ModalButtonSecondary onClick={() => toggleModal(\"informational\")}>\n                        Got it\n                      </ModalButtonSecondary>\n                    </ActionBox>\n                  </ModalFooter>\n                </Modal>\n              </div>\n              <CodeBlock name=\"modal-informational\" code={codes[3]} />\n            </div>\n\n            <a id=\"warning-modal\">\n              <h2>Warning Modal</h2>\n            </a>\n            <p>Warning modals to alert users about potential issues before proceeding.</p>\n            <div className=\"showcase\">\n              <div className=\"items\">\n                <Button\n                  variant=\"contained\"\n                  sx={{ backgroundColor: \"warning.main\", color: \"white\" }}\n                  onClick={() => toggleModal(\"warning\")}\n                >\n                  Proceed with Caution\n                </Button>\n                <Modal\n                  open={openModals.warning}\n                  closeModal={() => toggleModal(\"warning\")}\n                  title=\"Warning\"\n                >\n                  <ModalBody>\n                    <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\n                      <WarningIcon sx={{ color: \"warning.main\", fontSize: 32 }} />\n                      <Box>\n                        <Typography variant=\"body1\" paragraph>\n                          This action may affect system performance and could take several minutes.\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          Consider performing this during off-peak hours.\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </ModalBody>\n                  <ModalFooter variant=\"filled\">\n                    <ActionBox>\n                      <ModalButtonSecondary onClick={() => toggleModal(\"warning\")}>\n                        Cancel\n                      </ModalButtonSecondary>\n                      <ModalButtonPrimary onClick={() => toggleModal(\"warning\")}>\n                        Continue Anyway\n                      </ModalButtonPrimary>\n                    </ActionBox>\n                  </ModalFooter>\n                </Modal>\n              </div>\n              <CodeBlock name=\"modal-warning\" code={codes[4]} />\n            </div>\n\n            <a id=\"success-modal\">\n              <h2>Success Modal</h2>\n            </a>\n            <p>Success modals to provide positive feedback and confirm task completion.</p>\n            <div className=\"showcase\">\n              <div className=\"items\">\n                <Button variant=\"contained\" color=\"success\" onClick={() => toggleModal(\"success\")}>\n                  Complete Action\n                </Button>\n                <Modal\n                  open={openModals.success}\n                  closeModal={() => toggleModal(\"success\")}\n                  title=\"Success!\"\n                >\n                  <ModalBody>\n                    <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2, textAlign: \"center\" }}>\n                      <CheckCircleIcon color=\"success\" sx={{ fontSize: 48 }} />\n                      <Box>\n                        <Typography variant=\"h6\" gutterBottom>\n                          Operation Completed Successfully\n                        </Typography>\n                        <Typography variant=\"body1\">\n                          Your changes have been saved and are now active.\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </ModalBody>\n                  <ModalFooter variant=\"filled\">\n                    <ActionBox>\n                      <ModalButtonPrimary onClick={() => toggleModal(\"success\")}>\n                        Continue\n                      </ModalButtonPrimary>\n                    </ActionBox>\n                  </ModalFooter>\n                </Modal>\n              </div>\n              <CodeBlock name=\"modal-success\" code={codes[5]} />\n            </div>\n\n            <a id=\"error-modal\">\n              <h2>Error Modal</h2>\n            </a>\n            <p>Error modals to communicate failures and provide actionable solutions.</p>\n            <div className=\"showcase\">\n              <div className=\"items\">\n                <Button variant=\"contained\" color=\"error\" onClick={() => toggleModal(\"error\")}>\n                  Trigger Error\n                </Button>\n                <Modal\n                  open={openModals.error}\n                  closeModal={() => toggleModal(\"error\")}\n                  title=\"Upload Failed\"\n                >\n                  <ModalBody>\n                    <Box sx={{ display: \"flex\", alignItems: \"flex-start\", gap: 2 }}>\n                      <ErrorIcon color=\"error\" sx={{ fontSize: 32 }} />\n                      <Box>\n                        <Typography variant=\"h6\" gutterBottom>\n                          File Upload Failed\n                        </Typography>\n                        <Typography variant=\"body1\" paragraph>\n                          The file could not be uploaded due to a network connectivity issue.\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          <strong>What you can do:</strong> Check your internet connection and try again.\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </ModalBody>\n                  <ModalFooter variant=\"filled\">\n                    <ActionBox>\n                      <ModalButtonSecondary onClick={() => toggleModal(\"error\")}>\n                        Cancel\n                      </ModalButtonSecondary>\n                      <ModalButtonPrimary onClick={() => toggleModal(\"error\")}>\n                        Try Again\n                      </ModalButtonPrimary>\n                    </ActionBox>\n                  </ModalFooter>\n                </Modal>\n              </div>\n              <CodeBlock name=\"modal-error\" code={codes[6]} />\n            </div>\n\n            <a id=\"nested-modal\">\n              <h2>Nested Modal</h2>\n            </a>\n            <p>Nested modals for multi-step workflows and complex interactions.</p>\n            <div className=\"showcase\">\n              <div className=\"items\">\n                <Button variant=\"contained\" onClick={() => toggleModal(\"nested\")}>\n                  Open Parent Modal\n                </Button>\n                <Modal\n                  open={openModals.nested}\n                  closeModal={() => toggleModal(\"nested\")}\n                  title=\"Parent Modal\"\n                >\n                  <ModalBody>\n                    <Typography paragraph>\n                      This is the parent modal. You can open a nested modal from here.\n                    </Typography>\n                    <Button variant=\"outlined\" onClick={() => setNestedModal(true)}>\n                      Open Nested Modal\n                    </Button>\n                  </ModalBody>\n                  <ModalFooter variant=\"filled\">\n                    <ActionBox>\n                      <ModalButtonSecondary onClick={() => toggleModal(\"nested\")}>\n                        Close\n                      </ModalButtonSecondary>\n                    </ActionBox>\n                  </ModalFooter>\n                </Modal>\n\n                <Modal\n                  open={nestedModal}\n                  closeModal={() => setNestedModal(false)}\n                  title=\"Nested Modal\"\n                >\n                  <ModalBody>\n                    <Typography>\n                      This is a nested modal that appears on top of the parent modal.\n                    </Typography>\n                  </ModalBody>\n                  <ModalFooter variant=\"filled\">\n                    <ActionBox>\n                      <ModalButtonSecondary onClick={() => setNestedModal(false)}>\n                        Close Nested\n                      </ModalButtonSecondary>\n                    </ActionBox>\n                  </ModalFooter>\n                </Modal>\n              </div>\n              <CodeBlock name=\"modal-nested\" code={codes[7]} />\n            </div>\n\n          </SistentThemeProvider>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default ModalCode;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-2h2zm0-4h-2V7h2z\"\n}), 'Error');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckCircle');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M1 21h22L12 2zm12-3h-2v-2h2zm0-4h-2v-4h2z\"\n}), 'Warning');"],"names":["CodeBlock","_ref","name","code","showCode","setShowCode","useState","React","className","type","id","onChange","prev","htmlFor","Code","codeString","language","JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","contents","setContents","useEffect","anchors","document","querySelectorAll","console","log","Array","from","map","a","link","text","intapath","setIntapath","path","window","location","pathname","x","key","Link","to","activeClassName","SistentLayout","title","children","SistentWrapper","TOC","Container","SistentPagination","IntraPage","d","CustomInput","label","placeholder","Box","sx","mb","Typography","variant","gutterBottom","TextField","fullWidth","codes","ModalCode","useLocation","isDark","useStyledDarkMode","openModals","setOpenModals","basic","confirmation","action","informational","warning","success","error","form","nested","nestedModal","setNestedModal","toggleModal","_objectSpread","TabButton","onClick","navigate","SistentThemeProvider","initialMode","Button","Modal","open","closeModal","ModalBody","ModalFooter","ActionBox","ModalButtonSecondary","color","display","alignItems","gap","WarningIcon","ModalButtonDanger","PersonAddIcon","ModalButtonPrimary","InfoIcon","paragraph","backgroundColor","fontSize","textAlign","CheckCircleIcon","ErrorIcon"],"sourceRoot":""}