{"version":3,"file":"component---src-sections-projects-sistent-components-pagination-code-js-cdf80819413a838c9ac0.js","mappings":"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","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/button/code-block.js","webpack://Layer5/./src/sections/Projects/Sistent/components/pagination/code.js","webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Code from \"../../../../../components/CodeBlock\";\n\nexport const CodeBlock = ({ name, code }) => {\n  const [showCode, setShowCode] = useState(false);\n  const onChange = () => {\n    setShowCode((prev) => !prev);\n  };\n  return (\n    <div className=\"show-code\">\n      <input type=\"checkbox\" name={name} id={name} onChange={onChange} />\n      <label htmlFor={name} className=\"label\">\n        Show Code\n      </label>\n      {showCode && (\n        <Code codeString={code} language=\"javascript\" />\n      )}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport { Pagination, SistentThemeProvider } from \"@sistent/sistent\";\nimport { SistentLayout } from \"../../sistent-layout\";\nimport { CodeBlock } from \"../button/code-block\";\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\nconst codes = [\n  // Basic pagination\n  `\n    <Pagination \n      count={10} \n      page={1} \n      onChange={(event, page) => handleChange(page)} \n    />\n  `,\n  // Pagination with size variants\n  `\n    <Pagination size=\"small\" count={10} />\n    <Pagination size=\"medium\" count={10} />\n    <Pagination size=\"large\" count={10} />\n  `,\n  // Pagination with custom styling\n  `\n    <Pagination\n      count={10}\n      color=\"primary\"\n      variant=\"outlined\"\n      shape=\"rounded\"\n    />\n  `,\n  // Pagination with an outline\n  `\n    <Pagination\n      count={10}\n      variant=\"outlined\"\n      color=\"secondary\"\n    />\n  `,\n];\n\nconst PaginationCode = () => {\n  const { isDark } = useStyledDarkMode();\n  const location = useLocation();\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handlePageChange = (event, value) => {\n    setCurrentPage(value);\n  };\n\n  return (\n    <SistentLayout title=\"Pagination\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Pagination</h2>\n        </a>\n        <p>\n        The Pagination component helps users navigate through multiple pages\n          of content. It provides a clear interface for moving between pages and\n          understanding the current position within a larger dataset.\n        </p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/pagination\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/pagination\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/pagination/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/pagination/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/pagination/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/pagination/code\")\n            }\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          {/* Basic Pagination */}\n          <a id=\"Basic Pagination\">\n            <h3>Basic Pagination</h3>\n          </a>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Pagination\n                  count={10}\n                  page={currentPage}\n                  onChange={handlePageChange}\n                />\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"basic-pagination\" code={codes[0]} />\n          </div>\n\n          {/* Pagination Sizes */}\n          <a id=\"Sizes\">\n            <h3>Pagination Sizes</h3>\n          </a>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: \"1rem\",\n                  }}\n                >\n                  <Pagination size=\"small\" count={10} />\n                  <Pagination size=\"medium\" count={10} />\n                  <Pagination size=\"large\" count={10} />\n                </div>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"pagination-sizes\" code={codes[1]} />\n          </div>\n\n          {/* Custom Styling */}\n          <a id=\"Styling\">\n            <h3>Custom Styling</h3>\n          </a>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Pagination\n                  count={10}\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  shape=\"rounded\"\n                />\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"styled-pagination\" code={codes[2]} />\n          </div>\n\n          {/* Pagination with Outline */}\n          <a id=\"Outline\">\n            <h3>Pagination with Outline</h3>\n          </a>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Pagination\n                  count={10}\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                />\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"pagination-outline\" code={codes[3]} />\n          </div>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default PaginationCode;","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n"],"names":["CodeBlock","_ref","name","code","showCode","setShowCode","useState","React","className","type","id","onChange","prev","htmlFor","Code","codeString","language","codes","PaginationCode","isDark","useStyledDarkMode","location","useLocation","currentPage","setCurrentPage","SistentLayout","title","TabButton","pathname","onClick","navigate","SistentThemeProvider","initialMode","Pagination","count","page","handlePageChange","event","value","style","display","flexDirection","gap","size","color","variant","shape","JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","contents","setContents","useEffect","anchors","document","querySelectorAll","console","log","Array","from","map","a","link","text","intapath","setIntapath","path","window","x","key","Link","to","activeClassName","children","SistentWrapper","TOC","Container","SistentPagination","IntraPage"],"sourceRoot":""}