{"version":3,"file":"component---src-sections-projects-sistent-components-circularprogress-index-js-c258dc1d1312570492f8.js","mappings":"yMA+GA,UAtGgCA,KAC9B,MAAMC,GAAWC,EAAAA,EAAAA,gBACX,OAAEC,IAAWC,EAAAA,EAAAA,KAEnB,OACEC,EAAAA,cAACC,EAAAA,EAAa,CAACC,MAAM,qBACnBF,EAAAA,cAAA,OAAKG,UAAU,WACbH,EAAAA,cAAA,KAAGI,GAAG,YACJJ,EAAAA,cAAA,UAAI,sBAENA,EAAAA,cAAA,SAAG,yPAKHA,EAAAA,cAAA,OAAKG,UAAU,cACbH,EAAAA,cAACK,EAAAA,QAAS,CACRF,UACwB,kDAAtBP,EAASU,SACL,SACA,GAENC,QAASA,KAAMC,EAAAA,EAAAA,UAAS,iDACxBN,MAAM,aAERF,EAAAA,cAACK,EAAAA,QAAS,CACRF,UAEI,2DADFP,EAASU,SAEL,SACA,GAENC,QAASA,KACPC,EAAAA,EAAAA,UAAS,0DAEXN,MAAM,aAERF,EAAAA,cAACK,EAAAA,QAAS,CACRF,UACwB,uDAAtBP,EAASU,SACL,SACA,GAENC,QAASA,KAAMC,EAAAA,EAAAA,UAAS,sDACxBN,MAAM,UAGVF,EAAAA,cAAA,OAAKG,UAAU,gBACbH,EAAAA,cAAA,SAAG,2PAKHA,EAAAA,cAAA,KAAGI,GAAG,SACJJ,EAAAA,cAAA,UAAI,UAENA,EAAAA,cAAA,SAAG,mDAGHA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAGA,EAAAA,cAAA,SAAG,gBAAgB,8DAC1BA,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAGA,EAAAA,cAAA,SAAG,kBAAkB,6DAE9BA,EAAAA,cAAA,KAAGI,GAAG,iBACJJ,EAAAA,cAAA,UAAI,kBAENA,EAAAA,cAAA,SAAG,2EAGHA,EAAAA,cAAA,WACAA,EAAAA,cAACS,EAAAA,GAAG,CAACC,UAAQ,EAACP,UAAU,mBACtBH,EAAAA,cAACW,EAAAA,qBAAoB,CAACC,YAAad,EAAS,OAAS,SACnDE,EAAAA,cAACa,EAAAA,iBAAgB,QAGrBb,EAAAA,cAAA,WACAA,EAAAA,cAAA,KAAGI,GAAG,gBACJJ,EAAAA,cAAA,UAAI,iBAENA,EAAAA,cAAA,SAAG,wJAKHA,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAGA,EAAAA,cAAA,SAAG,gBAAgB,2CAC1BA,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAGA,EAAAA,cAAA,SAAG,kBAAkB,gEAE9BA,EAAAA,cAAA,UAAI,yBACJA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAGA,EAAAA,cAAA,SAAG,SAAS,gDACnBA,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAGA,EAAAA,cAAA,SAAG,cAAc,4CACxBA,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAGA,EAAAA,cAAA,SAAG,UAAU,qDACpBA,EAAAA,cAAA,UAAIA,EAAAA,cAAA,SAAGA,EAAAA,cAAA,SAAG,UAAU,4DAIZ,C","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/circularprogress/index.js"],"sourcesContent":["import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport { SistentThemeProvider, CircularProgress } from \"@sistent/sistent\";\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { SistentLayout } from \"../../sistent-layout\";\nimport { Row } from \"../../../../../reusecore/Layout\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\nconst SistentCircularprogress = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n\n  return (\n    <SistentLayout title=\"Circular Progress\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Circular Progress</h2>\n        </a>\n        <p>\n          The Circular Progress component displays a circular loading indicator that represents\n          either determinate or indeterminate progress in your application. It's commonly used\n          to show loading states, progress of operations, or completion percentages.\n        </p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/circularprogress\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/circularprogress\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n                \"/projects/sistent/components/circularprogress/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/circularprogress/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/circularprogress/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/circularprogress/code\")}\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <p>\n            Circular Progress indicators inform users about the status of ongoing processes,\n            such as loading an application, submitting a form, or updating data. They help\n            maintain user engagement by providing visual feedback about the progress of operations.\n          </p>\n          <a id=\"Usage\">\n            <h2>Usage</h2>\n          </a>\n          <p>\n            The component can be used in two main variants:\n          </p>\n          <ul>\n            <li><p><b>Determinate:</b> Shows definite progress with a specific percentage value</p></li>\n            <li><p><b>Indeterminate:</b> Shows an animation indicating an unspecified wait time</p></li>\n          </ul>\n          <a id=\"Basic Example\">\n            <h3>Basic Example</h3>\n          </a>\n          <p>\n            Below is a simple example of how to use the CircularProgress component.\n          </p>\n          <br />\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <CircularProgress />\n            </SistentThemeProvider>\n          </Row>\n          <br />\n          <a id=\"Key Features\">\n            <h2>Key Features</h2>\n          </a>\n          <p>\n            You can customize the appearance of the Circular Progress using\n            various props to define how the component\n            renders relative to its container element.\n          </p>\n          <h3>Variants</h3>\n          <ul>\n            <li><p><b>Determinate:</b> Displays specific progress percentage</p></li>\n            <li><p><b>Indeterminate:</b> Shows continuous animation for unknown duration processes</p></li>\n          </ul>\n          <h3>Customization Options</h3>\n          <ul>\n            <li><p><b>Size:</b> Adjustable diameter of the progress circle</p></li>\n            <li><p><b>Thickness:</b> Controllable width of the progress arc</p></li>\n            <li><p><b>Color:</b> Customizable colors for both track and progress</p></li>\n            <li><p><b>Value:</b> Percentage complete (0-100) for determinate variant</p></li>\n          </ul>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default SistentCircularprogress;"],"names":["SistentCircularprogress","location","useLocation","isDark","useStyledDarkMode","React","SistentLayout","title","className","id","TabButton","pathname","onClick","navigate","Row","$Hcenter","SistentThemeProvider","initialMode","CircularProgress"],"sourceRoot":""}