{"version":3,"file":"component---src-sections-projects-sistent-components-button-index-js-1132702689d435106232.js","mappings":"wMAiMA,UAvLsBA,KACpB,MAAMC,GAAWC,EAAAA,EAAAA,gBACX,OAAEC,IAAWC,EAAAA,EAAAA,KAEnB,OACEC,EAAAA,cAACC,EAAAA,EAAa,CAACC,MAAM,UACnBF,EAAAA,cAAA,OAAKG,UAAU,WACbH,EAAAA,cAAA,KAAGI,GAAG,YACJJ,EAAAA,cAAA,UAAI,WAENA,EAAAA,cAAA,SAAG,4JAKHA,EAAAA,cAAA,OAAKG,UAAU,cACbH,EAAAA,cAACK,EAAAA,QAAS,CACRF,UACwB,wCAAtBP,EAASU,SACL,SACA,GAENC,QAASA,KAAMC,EAAAA,EAAAA,UAAS,uCACxBN,MAAM,aAERF,EAAAA,cAACK,EAAAA,QAAS,CACRF,UAEE,iDADAP,EAASU,SAEL,SACA,GAENC,QAASA,KACPC,EAAAA,EAAAA,UAAS,gDAEXN,MAAM,aAERF,EAAAA,cAACK,EAAAA,QAAS,CACRF,UACwB,6CAAtBP,EAASU,SACL,SACA,GAENC,QAASA,KAAMC,EAAAA,EAAAA,UAAS,4CACxBN,MAAM,UAGVF,EAAAA,cAAA,OAAKG,UAAU,gBACbH,EAAAA,cAAA,SAAG,8RAOHA,EAAAA,cAAA,KAAGI,GAAG,SACJJ,EAAAA,cAAA,UAAI,UAENA,EAAAA,cAAA,SAAG,6QAOHA,EAAAA,cAAA,UAAI,UACJA,EAAAA,cAAA,SAAG,8OAMHA,EAAAA,cAACS,EAAAA,GAAG,CAACC,UAAQ,EAACP,UAAU,mBACtBH,EAAAA,cAACW,EAAAA,qBAAoB,CAACC,YAAad,EAAS,OAAS,SACnDE,EAAAA,cAACa,EAAAA,OAAM,CAACC,QAAQ,YAAYC,MAAM,SAASC,KAAK,aAGpDhB,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAAA,SAAG,sSAOHA,EAAAA,cAACS,EAAAA,GAAG,CAACC,UAAQ,EAACP,UAAU,mBACtBH,EAAAA,cAACW,EAAAA,qBAAoB,CAACC,YAAad,EAAS,OAAS,SACnDE,EAAAA,cAACa,EAAAA,OAAM,CAACC,QAAQ,WAAWC,MAAM,WAAWC,KAAK,aAGrDhB,EAAAA,cAAA,UAAI,QACJA,EAAAA,cAAA,SAAG,4OAMHA,EAAAA,cAACS,EAAAA,GAAG,CAACC,UAAQ,EAACP,UAAU,mBACtBH,EAAAA,cAACW,EAAAA,qBAAoB,CAACC,YAAad,EAAS,OAAS,SACnDE,EAAAA,cAACa,EAAAA,OAAM,CAACC,QAAQ,OAAOC,MAAM,OAAOC,KAAK,aAG7ChB,EAAAA,cAAA,KAAGI,GAAG,SACJJ,EAAAA,cAAA,UAAI,UAENA,EAAAA,cAAA,SAAG,ufAUHA,EAAAA,cAAA,UAAI,iBACJA,EAAAA,cAAA,SAAG,yOAMHA,EAAAA,cAACS,EAAAA,GAAG,CAACC,UAAQ,EAACP,UAAU,mBACtBH,EAAAA,cAACW,EAAAA,qBAAoB,CAACC,YAAad,EAAS,OAAS,SACnDE,EAAAA,cAACa,EAAAA,OAAM,CAACC,QAAQ,YAAYC,MAAM,gBAAgBC,KAAK,YAG3DhB,EAAAA,cAAA,UAAI,eACJA,EAAAA,cAAA,SAAG,+LAKHA,EAAAA,cAACS,EAAAA,GAAG,CAACC,UAAQ,EAACP,UAAU,mBACtBH,EAAAA,cAACW,EAAAA,qBAAoB,CAACC,YAAad,EAAS,OAAS,SACnDE,EAAAA,cAACa,EAAAA,OAAM,CAACC,QAAQ,YAAYC,MAAM,cAAcC,KAAK,aAGzDhB,EAAAA,cAAA,UAAI,cACJA,EAAAA,cAAA,SAAG,iOAMHA,EAAAA,cAACS,EAAAA,GAAG,CAACC,UAAQ,EAACP,UAAU,mBACtBH,EAAAA,cAACiB,EAAAA,GAAG,CAACC,GAAI,IACPlB,EAAAA,cAACW,EAAAA,qBAAoB,CAACC,YAAad,EAAS,OAAS,SACnDE,EAAAA,cAACa,EAAAA,OAAM,CAACC,QAAQ,YAAYC,MAAM,aAAaI,WAAS,OAI9DnB,EAAAA,cAAA,SACEA,EAAAA,cAAA,cAAQ,UAEVA,EAAAA,cAAA,SAAG,wbASHA,EAAAA,cAAA,KAAGI,GAAG,gBACJJ,EAAAA,cAAA,UAAI,iBAENA,EAAAA,cAAA,SAAG,sgBAYO,C","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/button/index.js"],"sourcesContent":["import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport { SistentThemeProvider, Button } from \"@sistent/sistent\";\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { SistentLayout } from \"../../sistent-layout\";\nimport { Col, Row } from \"../../../../../reusecore/Layout\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\nconst SistentButton = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n\n  return (\n    <SistentLayout title=\"Button\" >\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Button</h2>\n        </a>\n        <p>\n          A button is an interactive element that triggers a specific action,\n          takes users where they need to go, and points out what happens next in\n          a given flow.\n        </p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/button\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/button\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/button/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/button/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/button/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/button/code\")}\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <p>\n            Buttons are crucial and integral elements in an interface. They are\n            mostly used to trigger actions and in so doing, take users to where\n            they need to be in any step of a flow. Buttons can be used in tandem\n            with other elements to piece designs together and convey digital\n            experiences.\n          </p>\n          <a id=\"Types\">\n            <h2>Types</h2>\n          </a>\n          <p>\n            In order to establish hierarchy, prominence and flexibility,\n            multiple types of buttons exist that can assist users to achieve\n            different aims. With the different styling on these buttons, it\n            makes it easier for users to navigate and arrive at their solutions\n            faster.\n          </p>\n          <h3>Filled</h3>\n          <p>\n            Filled buttons are buttons that consist a background color fill and\n            a text in it. Depending on the theme or intended action, the color\n            fill can range from a primary brand color to any other applicable\n            color in a brandâ€™s color palette.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Button variant=\"contained\" label=\"Filled\" size=\"medium\" />\n            </SistentThemeProvider>\n          </Row>\n          <h3>Outlined</h3>\n          <p>\n            Outlined buttons are buttons that do not have a fill, but have a\n            border or stroke to define its bounding box as well as a text label\n            to convey a thought for users to take action upon. Colors can also\n            be used to style these buttons in order to fit into the theme align\n            with brand guidelines.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Button variant=\"outlined\" label=\"Outlined\" size=\"medium\" />\n            </SistentThemeProvider>\n          </Row>\n          <h3>Text</h3>\n          <p>\n            Also known as ghost buttons, text buttons are mostly just what the\n            name implies; they are buttons without fills or borders which might\n            just have a specific text styling and color to denote different\n            states for easier identification.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Button variant=\"text\" label=\"Text\" size=\"medium\" />\n            </SistentThemeProvider>\n          </Row>\n          <a id=\"Sizes\">\n            <h2>Sizes</h2>\n          </a>\n          <p>\n            For buttons to be fully effective, they can be adjusted in size to\n            accommodate multiple use cases where they may apply. These size\n            changes are usually done to the height of the buttons and not the\n            width since buttons usually grow to contain their content. The\n            height that makes up the different sizes of our buttons are gotten\n            from our spacing system to retain space consistency. We have chosen\n            two different sizes of buttons to provide options and more sizes can\n            be added to fill the growing needs.\n          </p>\n          <h3>56px / 3.5rem</h3>\n          <p>\n            The 56px button is the first button size. It is currently the\n            largest button available for use and it is available for both mobile\n            and desktop resolutions, but it serves in different capacities\n            across these different resolutions.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Button variant=\"contained\" label=\"56px / 3.5rem\" size=\"large\" />\n            </SistentThemeProvider>\n          </Row>\n          <h3>48px / 3rem</h3>\n          <p>\n            The 48px button is the second button size currently in use and it is\n            available from mobile to desktop resolutions, even though it serves\n            in different capacities across these screen sizes.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Button variant=\"contained\" label=\"48px / 3rem\" size=\"medium\" />\n            </SistentThemeProvider>\n          </Row>\n          <h3>Full width</h3>\n          <p>\n            Full width buttons are more efficient in mobile designs and rightly\n            so in order to offer users with a wider touch area since the input\n            devices - the fingers, are a lot larger than the cursor on a desktop\n            or larger screen.\n          </p>\n          <Row $Hcenter className=\"image-container\">\n            <Col sm={12}>\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Button variant=\"contained\" label=\"Full width\" fullWidth />\n              </SistentThemeProvider>\n            </Col>\n          </Row>\n          <p>\n            <strong>NOTE:</strong>\n          </p>\n          <p>\n            These sizes are being specified with numerical values because though\n            the same size is used across screen resolutions, they have different\n            roles. On desktop for instance, the 56px button is a the default\n            size, and 48px the small size, while on mobile, 56px is large and\n            48px is the default size. Preferred button sizes (height) are\n            usually arrived at through exploration and proper consideration of\n            industry standards and best practices.\n          </p>\n          <a id=\"Adding Icons\">\n            <h2>Adding Icons</h2>\n          </a>\n          <p>\n            Sometimes, icons are used alongside labels in buttons to pass across\n            specific information or relay added information for a higher level\n            of understanding and better comprehension. Depending on the\n            information being conveyed, the icons can be placed on the left side\n            of the label text or on the right side of the label text. No\n            specific rules apply apart from spacing tips which may be considered\n            here. For full width buttons, if icons must be added, they should be\n            centered in the button alongside the label text.\n          </p>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default SistentButton;\n"],"names":["SistentButton","location","useLocation","isDark","useStyledDarkMode","React","SistentLayout","title","className","id","TabButton","pathname","onClick","navigate","Row","$Hcenter","SistentThemeProvider","initialMode","Button","variant","label","size","Col","sm","fullWidth"],"sourceRoot":""}