{"version":3,"file":"component---src-sections-projects-sistent-components-popper-code-js-2ad786b745d216199ca3.js","mappings":"gKAGO,MAAMA,EAAYC,IAAqB,IAApB,KAAEC,EAAI,KAAEC,GAAMF,EACtC,MAAM,EAACG,EAAS,EAACC,IAAeC,EAAAA,EAAAA,WAAS,GAIzC,OACEC,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,SAAOE,KAAK,WAAWP,KAAMA,EAAMQ,GAAIR,EAAMS,SALhCA,KACfN,GAAaO,IAAUA,GAAK,IAK1BL,EAAAA,cAAA,SAAOM,QAASX,EAAMM,UAAU,SAAQ,aAGvCJ,GACCG,EAAAA,cAACO,EAAAA,GAAI,CAACC,WAAYZ,EAAMa,SAAS,eAE/B,C,wHCFV,MAAMC,EAAQ,CACZ,mYAaA,iwFA+TF,UAhNmBC,KACjB,MAAM,OAAEC,IAAWC,EAAAA,EAAAA,KACbC,GAAWC,EAAAA,EAAAA,gBAEX,EAACC,EAAS,EAACC,IAAelB,EAAAA,EAAAA,UAAS,OACnC,EAACmB,EAAU,EAACC,IAAgBpB,EAAAA,EAAAA,UAAS,WACrC,EAACqB,EAAK,EAACC,IAAWtB,EAAAA,EAAAA,WAAS,GAE3BuB,EAAeC,GAAkBC,IACrCP,EAAYO,EAAMC,eAClBJ,GAAShB,GAASa,IAAcK,IAAiBlB,IACjDc,EAAaI,EAAa,EAG5B,OACEvB,EAAAA,cAAC0B,EAAAA,EAAa,CAACC,MAAM,UACnB3B,EAAAA,cAAA,OAAKC,UAAU,WACbD,EAAAA,cAAA,KAAGG,GAAG,YACJH,EAAAA,cAAA,UAAI,WAENA,EAAAA,cAAA,SAAG,kRAMHA,EAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,cAAC4B,EAAAA,QAAS,CACR3B,UACwB,wCAAtBa,EAASe,SACL,SACA,GAENC,QAASA,KAAMC,EAAAA,EAAAA,UAAS,uCACxBJ,MAAM,aAER3B,EAAAA,cAAC4B,EAAAA,QAAS,CACR3B,UAEE,iDADAa,EAASe,SAEL,SACA,GAENC,QAASA,KACPC,EAAAA,EAAAA,UAAS,gDAEXJ,MAAM,aAER3B,EAAAA,cAAC4B,EAAAA,QAAS,CACR3B,UACwB,6CAAtBa,EAASe,SACL,SACA,GAENC,QAASA,KAAMC,EAAAA,EAAAA,UAAS,4CACxBJ,MAAM,UAGV3B,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAACgC,EAAAA,qBAAoB,CAACC,YAAarB,EAAS,OAAS,SACnDZ,EAAAA,cAAA,SAAG,0IAKHA,EAAAA,cAAA,KAAGG,GAAG,gBACJH,EAAAA,cAAA,UAAI,iBAENA,EAAAA,cAACgC,EAAAA,qBAAoB,CAACC,YAAarB,EAAS,OAAS,SACnDZ,EAAAA,cAACkC,EAAAA,OAAM,CAACd,KAAMA,EAAMJ,SAAUA,EAAUE,UAAWA,GACjDlB,EAAAA,cAACmC,EAAAA,IAAG,CAACC,GAAI,CAAEC,OAAQ,EAAGC,EAAG,EAAGC,QAAS,qBAAsB,gCAK/DvC,EAAAA,cAAA,OAAKC,UAAU,YACbD,EAAAA,cAAA,OAAKC,UAAU,SACbD,EAAAA,cAACwC,EAAAA,OAAM,CACLC,QAAQ,YACRC,MAAM,gBACNC,KAAK,SACLb,QAASR,EAAY,aAGzBtB,EAAAA,cAACP,EAAAA,EAAS,CAACE,KAAK,eAAeC,KAAMc,EAAM,MAE7CV,EAAAA,cAAA,KAAGG,GAAG,sBACJH,EAAAA,cAAA,UAAI,uBAENA,EAAAA,cAAA,SAAG,uDACoD,IACrDA,EAAAA,cAAA,YAAM,aAAgB,qEAGxBA,EAAAA,cAAA,OAAKC,UAAU,YACbD,EAAAA,cAAA,OAAKC,UAAU,SACbD,EAAAA,cAACmC,EAAAA,IAAG,CAACC,GAAI,CAAEQ,MAAO,MAChB5C,EAAAA,cAAC6C,EAAAA,KAAI,CAACC,WAAS,EAACV,GAAI,CAAEW,eAAgB,WACpC/C,EAAAA,cAAC6C,EAAAA,KAAI,CAACG,MAAI,GACRhD,EAAAA,cAACwC,EAAAA,OAAM,CACLC,QAAQ,OACRC,MAAM,YACNC,KAAK,SACLb,QAASR,EAAY,eAEvBtB,EAAAA,cAACwC,EAAAA,OAAM,CACLC,QAAQ,OACRC,MAAM,MACNC,KAAK,SACLb,QAASR,EAAY,SAEvBtB,EAAAA,cAACwC,EAAAA,OAAM,CACLC,QAAQ,OACRC,MAAM,UACNC,KAAK,SACLb,QAASR,EAAY,eAI3BtB,EAAAA,cAAC6C,EAAAA,KAAI,CAACC,WAAS,EAACV,GAAI,CAAEW,eAAgB,WACpC/C,EAAAA,cAAC6C,EAAAA,KAAI,CAACG,MAAI,EAACC,GAAI,GACbjD,EAAAA,cAACwC,EAAAA,OAAM,CACLC,QAAQ,OACRC,MAAM,aACNC,KAAK,SACLb,QAASR,EAAY,gBAEvBtB,EAAAA,cAAA,WACAA,EAAAA,cAACwC,EAAAA,OAAM,CACLC,QAAQ,OACRC,MAAM,OACNC,KAAK,SACLb,QAASR,EAAY,UAEvBtB,EAAAA,cAAA,WACAA,EAAAA,cAACwC,EAAAA,OAAM,CACLC,QAAQ,OACRC,MAAM,WACNC,KAAK,SACLb,QAASR,EAAY,eAGzBtB,EAAAA,cAAC6C,EAAAA,KAAI,CACHG,MAAI,EACJF,WAAS,EACTG,GAAI,EACJC,UAAU,SACVd,GAAI,CAAEe,WAAY,aAElBnD,EAAAA,cAAC6C,EAAAA,KAAI,CAACG,MAAI,GACRhD,EAAAA,cAACwC,EAAAA,OAAM,CACLC,QAAQ,OACRC,MAAM,cACNC,KAAK,SACLb,QAASR,EAAY,kBAGzBtB,EAAAA,cAAC6C,EAAAA,KAAI,CAACG,MAAI,GACRhD,EAAAA,cAACwC,EAAAA,OAAM,CACLC,QAAQ,OACRC,MAAM,QACNC,KAAK,SACLb,QAASR,EAAY,YAGzBtB,EAAAA,cAAC6C,EAAAA,KAAI,CAACG,MAAI,GACRhD,EAAAA,cAACwC,EAAAA,OAAM,CACLC,QAAQ,OACRC,MAAM,YACNC,KAAK,SACLb,QAASR,EAAY,kBAK7BtB,EAAAA,cAAC6C,EAAAA,KAAI,CAACC,WAAS,EAACV,GAAI,CAAEW,eAAgB,WACpC/C,EAAAA,cAAC6C,EAAAA,KAAI,CAACG,MAAI,GACRhD,EAAAA,cAACwC,EAAAA,OAAM,CACLC,QAAQ,OACRC,MAAM,eACNC,KAAK,SACLb,QAASR,EAAY,kBAEvBtB,EAAAA,cAACwC,EAAAA,OAAM,CACLC,QAAQ,OACRC,MAAM,SACNC,KAAK,SACLb,QAASR,EAAY,YAEvBtB,EAAAA,cAACwC,EAAAA,OAAM,CACLC,QAAQ,OACRC,MAAM,aACNC,KAAK,SACLb,QAASR,EAAY,oBAM/BtB,EAAAA,cAACP,EAAAA,EAAS,CAACE,KAAK,qBAAqBC,KAAMc,EAAM,SAK3C,C,6HCpVpB,MAAM0C,E,SAAuBC,QAAOC,IAAGC,WAAA,CAAAC,YAAA,mCAAAC,YAAA,eAAVJ,CAAU,mjCAqGvC,MA5CA,WACE,MAAM,EAACK,EAAS,EAACC,IAAe5D,EAAAA,EAAAA,UAAS,KAEzC6D,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAUC,SAASC,iBAAiB,qBAC1CC,QAAQC,IAAIJ,GACRA,GACFF,EACEO,MAAMC,KAAKN,GAASO,KAAKC,IAAC,CACxBlE,GAAIkE,EAAElE,GACNmE,KAAM,IAAID,EAAElE,KACZoE,KAAMF,EAAElE,OAGd,GACC,IAEH,MAAM,EAACqE,EAAS,EAACC,IAAe1E,EAAAA,EAAAA,UAAS,MAMzC,OALA6D,EAAAA,EAAAA,YAAU,KACR,MAAMc,EAAOC,OAAO7D,SAASe,SAC7B4C,EAAYC,EAAK,GAChB,IAGD1E,EAAAA,cAACoD,EAAoB,KACnBpD,EAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,cAAA,UACG0D,EAASU,KAAKQ,GACb5E,EAAAA,cAAA,MAAI6E,IAAKD,EAAEzE,GAAIF,UAAU,QACvBD,EAAAA,cAAC8E,EAAAA,KAAI,CACHC,GAAI,GAAGP,IAAWI,EAAEN,OACpBO,IAAKD,EAAEzE,GACP6E,gBAAgB,UAEfJ,EAAEL,WAQnB,EChGO,MAAM7C,EAAgBhC,IAA0B,IAAzB,MAAEiC,EAAK,SAAEsD,GAAUvF,EAC/C,OACEM,EAAAA,cAACkF,EAAAA,EAAc,KACblF,EAAAA,cAAA,OAAKC,UAAU,uBACbD,EAAAA,cAAA,UAAK2B,IAEP3B,EAAAA,cAACmF,EAAAA,EAAG,MACJnF,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAACoF,EAAAA,GAAS,KACPH,EAAS,IAACjF,EAAAA,cAACqF,EAAAA,EAAiB,OAE/BrF,EAAAA,cAACsF,EAAS,OAEG,C","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/button/code-block.js","webpack://Layer5/./src/sections/Projects/Sistent/components/popper/code.js","webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Code from \"../../../../../components/CodeBlock\";\n\nexport const CodeBlock = ({ name, code }) => {\n  const [showCode, setShowCode] = useState(false);\n  const onChange = () => {\n    setShowCode((prev) => !prev);\n  };\n  return (\n    <div className=\"show-code\">\n      <input type=\"checkbox\" name={name} id={name} onChange={onChange} />\n      <label htmlFor={name} className=\"label\">\n        Show Code\n      </label>\n      {showCode && (\n        <Code codeString={code} language=\"javascript\" />\n      )}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport {\n  SistentThemeProvider,\n  Popper,\n  Button,\n  Box,\n  Grid,\n} from \"@sistent/sistent\";\nimport { SistentLayout } from \"../../sistent-layout\";\nimport { CodeBlock } from \"../button/code-block\";\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\nconst codes = [\n  `<Button\n    variant=\"contained\"\n    label=\"Toggle Popper\"\n    size=\"medium\"\n    onClick={handleClick()}\n  />\n  <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n    <Popper open={open} anchorEl={anchorEl}>\n      <Box sx={{ border: 1, p: 2, bgcolor: \"background.paper\" }}>\n        The content of the Popper.\n      </Box>\n    </Popper>\n  </SistentThemeProvider>`,\n  `<SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n    <Popper open={open} anchorEl={anchorEl} placement={placement}>\n      <Box sx={{ border: 1, p: 2, bgcolor: \"background.paper\" }}>\n        The content of the Popper.\n      </Box>\n    </Popper>\n  </SistentThemeProvider>\n  <Box sx={{ width: 500 }}>\n    <Grid container sx={{ justifyContent: \"center\" }}>\n      <Grid item>\n        <Button\n          variant=\"text\"\n          label=\"top-start\"\n          size=\"medium\"\n          onClick={handleClick(\"top-start\")}\n        />\n        <Button\n          variant=\"text\"\n          label=\"top\"\n          size=\"medium\"\n          onClick={handleClick(\"top\")}\n        />\n        <Button\n          variant=\"text\"\n          label=\"top-end\"\n          size=\"medium\"\n          onClick={handleClick(\"top-end\")}\n        />\n      </Grid>\n    </Grid>\n    <Grid container sx={{ justifyContent: \"center\" }}>\n      <Grid item xs={6}>\n        <Button\n          variant=\"text\"\n          label=\"left-start\"\n          size=\"medium\"\n          onClick={handleClick(\"left-start\")}\n        />\n        <br />\n        <Button\n          variant=\"text\"\n          label=\"left\"\n          size=\"medium\"\n          onClick={handleClick(\"left\")}\n        />\n        <br />\n        <Button\n          variant=\"text\"\n          label=\"left-end\"\n          size=\"medium\"\n          onClick={handleClick(\"left-end\")}\n        />\n      </Grid>\n      <Grid\n        item\n        container\n        xs={6}\n        direction=\"column\"\n        sx={{ alignItems: \"flex-end\" }}\n      >\n        <Grid item>\n          <Button\n            variant=\"text\"\n            label=\"right-start\"\n            size=\"medium\"\n            onClick={handleClick(\"right-start\")}\n          />\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"text\"\n            label=\"right\"\n            size=\"medium\"\n            onClick={handleClick(\"right\")}\n          />\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"text\"\n            label=\"right-end\"\n            size=\"medium\"\n            onClick={handleClick(\"right-end\")}\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n    <Grid container sx={{ justifyContent: \"center\" }}>\n      <Grid item>\n        <Button\n          variant=\"text\"\n          label=\"bottom-start\"\n          size=\"medium\"\n          onClick={handleClick(\"bottom-start\")}\n        />\n        <Button\n          variant=\"text\"\n          label=\"bottom\"\n          size=\"medium\"\n          onClick={handleClick(\"bottom\")}\n        />\n        <Button\n          variant=\"text\"\n          label=\"bottom-end\"\n          size=\"medium\"\n          onClick={handleClick(\"bottom-end\")}\n        />\n      </Grid>\n    </Grid>\n  </Box>`,\n];\n\nconst PooperCode = () => {\n  const { isDark } = useStyledDarkMode();\n  const location = useLocation();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [placement, setPlacement] = useState(\"bottom\");\n  const [open, setOpen] = useState(false);\n\n  const handleClick = (newPlacement) => (event) => {\n    setAnchorEl(event.currentTarget);\n    setOpen((prev) => placement !== newPlacement || !prev);\n    setPlacement(newPlacement);\n  };\n\n  return (\n    <SistentLayout title=\"Popper\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Popper</h2>\n        </a>\n        <p>\n          The Popper component provides a mechanism for positioning content\n          dynamically relative to a reference element. It is commonly used for\n          tooltips, dropdowns, and modals, enhancing the user experience by\n          presenting contextual information without overcrowding the interface.\n        </p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/popper\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/popper\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/popper/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/popper/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/popper/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/popper/code\")}\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n            <p>\n              Here’s a simple example of how to use the Popper component. In\n              this example, clicking the button toggles the visibility of the\n              popper:\n            </p>\n            <a id=\"Basic Popper\">\n              <h3>Basic Popper</h3>\n            </a>\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Popper open={open} anchorEl={anchorEl} placement={placement}>\n                <Box sx={{ border: 1, p: 2, bgcolor: \"background.paper\" }}>\n                  The content of the Popper.\n                </Box>\n              </Popper>\n            </SistentThemeProvider>\n            <div className=\"showcase\">\n              <div className=\"items\">\n                <Button\n                  variant=\"contained\"\n                  label=\"Toggle Popper\"\n                  size=\"medium\"\n                  onClick={handleClick(\"bottom\")}\n                />\n              </div>\n              <CodeBlock name=\"basic-popper\" code={codes[0]} />\n            </div>\n            <a id=\"Positioned Example\">\n              <h3>Positioned Example</h3>\n            </a>\n            <p>\n              You can specify the position of the Popper using the{\" \"}\n              <code>placement</code> prop. Here's an example of a Popper\n              positioned above its anchor:\n            </p>\n            <div className=\"showcase\">\n              <div className=\"items\">\n                <Box sx={{ width: 500 }}>\n                  <Grid container sx={{ justifyContent: \"center\" }}>\n                    <Grid item>\n                      <Button\n                        variant=\"text\"\n                        label=\"top-start\"\n                        size=\"medium\"\n                        onClick={handleClick(\"top-start\")}\n                      />\n                      <Button\n                        variant=\"text\"\n                        label=\"top\"\n                        size=\"medium\"\n                        onClick={handleClick(\"top\")}\n                      />\n                      <Button\n                        variant=\"text\"\n                        label=\"top-end\"\n                        size=\"medium\"\n                        onClick={handleClick(\"top-end\")}\n                      />\n                    </Grid>\n                  </Grid>\n                  <Grid container sx={{ justifyContent: \"center\" }}>\n                    <Grid item xs={6}>\n                      <Button\n                        variant=\"text\"\n                        label=\"left-start\"\n                        size=\"medium\"\n                        onClick={handleClick(\"left-start\")}\n                      />\n                      <br />\n                      <Button\n                        variant=\"text\"\n                        label=\"left\"\n                        size=\"medium\"\n                        onClick={handleClick(\"left\")}\n                      />\n                      <br />\n                      <Button\n                        variant=\"text\"\n                        label=\"left-end\"\n                        size=\"medium\"\n                        onClick={handleClick(\"left-end\")}\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      container\n                      xs={6}\n                      direction=\"column\"\n                      sx={{ alignItems: \"flex-end\" }}\n                    >\n                      <Grid item>\n                        <Button\n                          variant=\"text\"\n                          label=\"right-start\"\n                          size=\"medium\"\n                          onClick={handleClick(\"right-start\")}\n                        />\n                      </Grid>\n                      <Grid item>\n                        <Button\n                          variant=\"text\"\n                          label=\"right\"\n                          size=\"medium\"\n                          onClick={handleClick(\"right\")}\n                        />\n                      </Grid>\n                      <Grid item>\n                        <Button\n                          variant=\"text\"\n                          label=\"right-end\"\n                          size=\"medium\"\n                          onClick={handleClick(\"right-end\")}\n                        />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid container sx={{ justifyContent: \"center\" }}>\n                    <Grid item>\n                      <Button\n                        variant=\"text\"\n                        label=\"bottom-start\"\n                        size=\"medium\"\n                        onClick={handleClick(\"bottom-start\")}\n                      />\n                      <Button\n                        variant=\"text\"\n                        label=\"bottom\"\n                        size=\"medium\"\n                        onClick={handleClick(\"bottom\")}\n                      />\n                      <Button\n                        variant=\"text\"\n                        label=\"bottom-end\"\n                        size=\"medium\"\n                        onClick={handleClick(\"bottom-end\")}\n                      />\n                    </Grid>\n                  </Grid>\n                </Box>\n              </div>\n              <CodeBlock name=\"positioned-example\" code={codes[1]} />\n            </div>\n          </SistentThemeProvider>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default PooperCode;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n"],"names":["CodeBlock","_ref","name","code","showCode","setShowCode","useState","React","className","type","id","onChange","prev","htmlFor","Code","codeString","language","codes","PooperCode","isDark","useStyledDarkMode","location","useLocation","anchorEl","setAnchorEl","placement","setPlacement","open","setOpen","handleClick","newPlacement","event","currentTarget","SistentLayout","title","TabButton","pathname","onClick","navigate","SistentThemeProvider","initialMode","Popper","Box","sx","border","p","bgcolor","Button","variant","label","size","width","Grid","container","justifyContent","item","xs","direction","alignItems","JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","contents","setContents","useEffect","anchors","document","querySelectorAll","console","log","Array","from","map","a","link","text","intapath","setIntapath","path","window","x","key","Link","to","activeClassName","children","SistentWrapper","TOC","Container","SistentPagination","IntraPage"],"sourceRoot":""}