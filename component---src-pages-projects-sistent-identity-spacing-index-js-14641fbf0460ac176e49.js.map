{"version":3,"file":"component---src-pages-projects-sistent-identity-spacing-index-js-14641fbf0460ac176e49.js","mappings":"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","sources":["webpack://Layer5/./src/assets/images/app/projects/sistent/space-token-table-1-light.png","webpack://Layer5/./src/assets/images/app/projects/sistent/space-token-table-1-dark.png","webpack://Layer5/./src/sections/Projects/Sistent/identity/spacing/index.js","webpack://Layer5/./src/pages/projects/sistent/identity/spacing/index.js","webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/space-token-table-1-light-572827aaf4b90918a16c3dba03a37734.png\";","export default __webpack_public_path__ + \"static/space-token-table-1-dark-f2c31be5647082accfb9629bb79ce921.png\";","import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport { Col, Row } from \"../../../../../reusecore/Layout\";\nimport Button from \"../../../../../reusecore/Button\";\nimport SpaceTokenTable1 from \"../../../../../assets/images/app/projects/sistent/space-token-table-1-light.png\";\nimport SpaceTokenTable1Dark from \"../../../../../assets/images/app/projects/sistent/space-token-table-1-dark.png\";\n\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\nimport { SistentLayout } from \"../../sistent-layout\";\n\nconst SistentIdentitySpacing = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n\n  return (\n    <SistentLayout title=\"Spacing\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Spacing</h2>\n        </a>\n        <p>\n          Space is the unseen component in designed solutions that enables\n          clear, concise, and consistent arrangement of interface elements\n          across a screen.\n        </p>\n        <div className=\"filterBtns\">\n          <Button\n            className={\n              location.pathname === \"/projects/sistent/identity/spacing\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/identity/spacing\")}\n            title=\"Overview\"\n          />\n          <Button\n            className={\n              location.pathname ===\n              \"/projects/sistent/identity/spacing/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/identity/spacing/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <Button\n            className={\n              location.pathname === \"/projects/sistent/identity/spacing/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/identity/spacing/code\")}\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <p>\n            Spacing is a foundational consideration in any design endeavor. From\n            intra component spacing to space between elements in a given layout,\n            intentional application of spacing across a digital experience\n            elevates its usability, improves its (or the) experience, and\n            eventually generates much needed website traffic which is a primary\n            goal for most digital solutions.\n          </p>\n          <a id=\"The Basics\">\n            <h2>The Basics</h2>\n          </a>\n          <p>\n            A few concepts can be handy to keep in mind as we consider spacing\n            and its application throughout designs to ensure clarity and proper\n            understanding.\n          </p>\n          <h3>Inset</h3>\n          <p>\n            Inset describes the value of padding for any container in the\n            interface. The description of a container can range from full page\n            layouts, to page sections, all the way down to card containers and\n            even icon frames. Inset accounts for the values of both horizontal\n            and vertical padding. The horizontal and vertical paddings donâ€™t\n            need to have the same value, however, it is recommended that the\n            values for the horizontal padding are equivalent. This principle\n            applies to the values for the vertical paddings as well.\n          </p>\n          <h3>Stack</h3>\n          <p>\n            Stack in spacing is used to describe the space between vertically\n            arranged content in a digital interface. Since most digital content\n            is read from top to bottom, It is only right that they are arranged\n            in such a way that accurately conveys hierarchy, relationship and\n            spatial harmony.\n          </p>\n          <h3>Inline</h3>\n          <p>\n            This is the horizontal space consideration given to elements that\n            are being arranged in an interface. It can be the space between text\n            input, horizontally stacked elements like buttons and so on.\n          </p>\n          <a id=\"Scaling\">\n            <h2>Scaling</h2>\n          </a>\n          <p>\n            To properly implement spacing, a set of values have to be generated\n            using a scale just like was done in the case of typography. This\n            avails us with a fixed range of values that provide the much needed\n            flexibility required by interfaces to be consistent. This range\n            could be derived from a base spacing value which follows a principle\n            like a linear scale from the base value, multiples of the base\n            value, the golden ratio, or a modular scale.\n          </p>\n          <p>\n            Most digital screen resolutions are divisible by 16 which is a\n            multiple of eight and so, this makes it a good reason to utilize\n            eight as our base spacing value. Our scale, therefore, has been\n            derived from multiples of eight with a half and quarter step of\n            eight included in the scale to account for much smaller space\n            considerations, for example, icon padding. The half and quarter\n            steps have values of two and four respectively.\n          </p>\n          <Row Hcenter className=\"image-container\">\n            <Col md={8} lg={8} sm={12}>\n              <img\n                src={isDark ? SpaceTokenTable1Dark : SpaceTokenTable1}\n                alt=\"Space Token Table\"\n              />\n            </Col>\n          </Row>\n          <p>\n            From this scale of multiples of eight, space values for different\n            purposes can now be selected for use in an interface raging from gap\n            between elements on a page to size of elements, to corner radiuses\n            and other space considerations.\n          </p>\n          <a id=\"Text and Spacing\">\n            <h2>Text and Spacing</h2>\n          </a>\n          <p>\n            One factor that should be accounted for when sorting out spacing and\n            other considerations for spatial harmony is text size. Mostly this\n            affects the stack spacing values and their arrangement. Having all\n            text sizes in a multiple of the base spacing value is a principle\n            that can help to avoid inconsistent looking text and space across an\n            interface. This should also be the same for the line height that\n            accompanies these text sizes.\n          </p>\n          <p>\n            Mostly, the text is arranged in a pattern that takes into\n            consideration the line height of the different sizes of text used in\n            order to represent proper hierarchy and relationships between text\n            content in an interface.\n          </p>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default SistentIdentitySpacing;\n","import React from \"react\";\nimport SistentIdentitySpacing from \"../../../../../sections/Projects/Sistent/identity/spacing/index\";\n\nconst IdentitySpacingPage = () => {\n  return <SistentIdentitySpacing />;\n};\n\nexport default IdentitySpacingPage;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n"],"names":["SistentIdentitySpacing","location","useLocation","isDark","useStyledDarkMode","React","SistentLayout","title","className","id","Button","pathname","onClick","navigate","Row","Hcenter","Col","md","lg","sm","src","SpaceTokenTable1Dark","SpaceTokenTable1","alt","IdentitySpacingPage","JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","contents","setContents","useState","useEffect","anchors","document","querySelectorAll","console","log","Array","from","map","a","link","text","intapath","setIntapath","path","window","x","key","Link","to","activeClassName","_ref","children","SistentWrapper","TOC","Container","SistentPagination","IntraPage"],"sourceRoot":""}