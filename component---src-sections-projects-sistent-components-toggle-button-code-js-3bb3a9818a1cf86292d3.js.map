{"version":3,"file":"component---src-sections-projects-sistent-components-toggle-button-code-js-3bb3a9818a1cf86292d3.js","mappings":"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","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/button/code-block.js","webpack://Layer5/./src/sections/Projects/Sistent/components/toggle-button/code.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Code from \"../../../../../components/CodeBlock\";\n\nexport const CodeBlock = ({ name, code }) => {\n  const [showCode, setShowCode] = useState(false);\n  const onChange = () => {\n    setShowCode((prev) => !prev);\n  };\n  return (\n    <div className=\"show-code\">\n      <input type=\"checkbox\" name={name} id={name} onChange={onChange} />\n      <label htmlFor={name} className=\"label\">\n        Show Code\n      </label>\n      {showCode && (\n        <Code codeString={code} language=\"javascript\" />\n      )}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport {\n  SistentThemeProvider,\n  ToggleButton,\n  ToggleButtonGroup,\n} from \"@sistent/sistent\";\nimport { SistentLayout } from \"../../sistent-layout\";\nimport { CodeBlock } from \"../button/code-block\";\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\nconst codes = [\n  // For exclusive selection\n  `\n    <ToggleButtonGroup\n      value=\"left\"\n      exclusive\n    >\n      <ToggleButton value=\"left\">Left</ToggleButton>\n      <ToggleButton value=\"center\">Center</ToggleButton>\n      <ToggleButton value=\"right\">Right</ToggleButton>\n    </ToggleButtonGroup>\n  `,\n  // For multiple selection\n  `\n    <ToggleButtonGroup\n      value={[\"bold\", \"italic\"]}\n    >\n      <ToggleButton value=\"bold\">Toggle Button 1</ToggleButton>\n      <ToggleButton value=\"italic\">Toggle Button 1</ToggleButton>\n      <ToggleButton value=\"underline\">Toggle Button 1</ToggleButton>\n    </ToggleButtonGroup>\n  `,\n  // For size\n  `\n    <ToggleButtonGroup value=\"option1\" exclusive size=\"small\">\n      <ToggleButton value=\"option1\">Small</ToggleButton>\n      <ToggleButton value=\"option2\">Small</ToggleButton>\n    </ToggleButtonGroup>\n    <ToggleButtonGroup value=\"option1\" exclusive size=\"medium\">\n      <ToggleButton value=\"option1\">Medium</ToggleButton>\n      <ToggleButton value=\"option2\">Medium</ToggleButton>\n    </ToggleButtonGroup>\n    <ToggleButtonGroup value=\"option1\" exclusive size=\"large\">\n      <ToggleButton value=\"option1\">Large</ToggleButton>\n      <ToggleButton value=\"option2\">Large</ToggleButton>\n    </ToggleButtonGroup>\n  `,\n  // For color\n  `\n    <ToggleButtonGroup value=\"primary\" exclusive color=\"primary\">\n      <ToggleButton value=\"primary\">Primary</ToggleButton>\n      <ToggleButton value=\"secondary\">Secondary</ToggleButton>\n    </ToggleButtonGroup>\n  `,\n  // For vertical\n  `\n    <ToggleButtonGroup\n      orientation=\"vertical\"\n      value=\"option1\"\n      exclusive\n    >\n      <ToggleButton value=\"option1\">Vertical 1</ToggleButton>\n      <ToggleButton value=\"option2\">Vertical 2</ToggleButton>\n      <ToggleButton value=\"option3\">Vertical 3</ToggleButton>\n    </ToggleButtonGroup>\n  `,\n];\n\nconst ToggleButtonCode = () => {\n  const { isDark } = useStyledDarkMode();\n  const location = useLocation();\n  const [exclusiveSelected, setExclusiveSelected] = useState(\"left\");\n  const [multiSelected, setMultiSelected] = useState([\"bold\"]);\n  const [sizeSelected, setSizeSelected] = useState(\"small\");\n  const [colorSelected, setColorSelected] = useState(\"primary\");\n  const [verticalSelected, setVerticalSelected] = useState(\"left\");\n  const handleExclusiveToggle = (event, value) => {\n    setExclusiveSelected(value);\n  };\n\n  const handleMultiToggle = (event, value) => {\n    setMultiSelected(value);\n  };\n  const handleSizeToggle = (event, value) => {\n    setSizeSelected(value);\n  };\n  const handleColorToggle = (event, value) => {\n    setColorSelected(value);\n  };\n  const handleVerticalToggle = (event, value) => {\n    setVerticalSelected(value);\n  };\n\n  return (\n    <SistentLayout title=\"ToggleButton\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>ToggleButton</h2>\n        </a>\n        <p>\n          The `ToggleButton` and `ToggleButtonGroup` are versatile components\n          that can be used for a wide range of applications. Their intuitive\n          design ensures users can make selections easily and confidently.\n          Whether it's enabling a setting, selecting a mode, or choosing\n          multiple options, these components are built to enhance user\n          experience across different scenarios.\n        </p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/toggle-button\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/toggle-button\")\n            }\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/toggle-button/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/toggle-button/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/toggle-button/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/toggle-button/code\")\n            }\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <a id=\"Exclusive Selection\">\n            <h3>Exclusive Selection</h3>\n          </a>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <ToggleButtonGroup\n                  value={exclusiveSelected}\n                  exclusive\n                  onChange={handleExclusiveToggle}\n                >\n                  <ToggleButton value=\"left\">Left</ToggleButton>\n                  <ToggleButton value=\"center\">Center</ToggleButton>\n                  <ToggleButton value=\"right\">Right</ToggleButton>\n                </ToggleButtonGroup>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"exclusive-selection\" code={codes[0]} />\n          </div>\n\n          <a id=\"Multiple Selection\">\n            <h3>Multiple Selection</h3>\n          </a>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <ToggleButtonGroup\n                  value={multiSelected}\n                  onChange={handleMultiToggle}\n                >\n                  <ToggleButton value=\"bold\">Toggle Button 1</ToggleButton>\n                  <ToggleButton value=\"italic\">Toggle Button 2</ToggleButton>\n                  <ToggleButton value=\"underline\">Toggle Button 3</ToggleButton>\n                </ToggleButtonGroup>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"multiple-selection\" code={codes[1]} />\n          </div>\n\n          <a id=\"Sizes\">\n            <h3>ToggleButton Sizes</h3>\n          </a>\n          <p>\n            Adjust the size of the `ToggleButton` using the `size` prop.\n            Supported values include `small`, `medium`, and `large`.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: \"1rem\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <ToggleButtonGroup\n                    value={sizeSelected}\n                    onChange={handleSizeToggle}\n                    exclusive\n                    size=\"small\"\n                    style={{ width: \"70%\" }}\n                  >\n                    <ToggleButton value=\"option1\">Small</ToggleButton>\n                    <ToggleButton value=\"option2\">Small</ToggleButton>\n                  </ToggleButtonGroup>\n\n                  <ToggleButtonGroup\n                    value={sizeSelected}\n                    onChange={handleSizeToggle}\n                    exclusive\n                    size=\"medium\"\n                  >\n                    <ToggleButton value=\"option1\">Medium</ToggleButton>\n                    <ToggleButton value=\"option2\">Medium</ToggleButton>\n                  </ToggleButtonGroup>\n\n                  <ToggleButtonGroup\n                    value={sizeSelected}\n                    onChange={handleSizeToggle}\n                    exclusive\n                    size=\"large\"\n                    style={{ width: \"120%\" }}\n                  >\n                    <ToggleButton style={ { width: \"50%\" }} value=\"option1\">Large</ToggleButton>\n                    <ToggleButton style={ { width: \"50%\" }} value=\"option2\">Large</ToggleButton>\n                  </ToggleButtonGroup>\n                </div>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"toggle-button-sizes\" code={codes[2]} />\n          </div>\n\n          <a id=\"Colors\">\n            <h3>ToggleButton Colors</h3>\n          </a>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <ToggleButtonGroup\n                  value={colorSelected}\n                  onChange={handleColorToggle}\n                  exclusive\n                  color=\"primary\"\n                >\n                  <ToggleButton value=\"primary\">Primary</ToggleButton>\n                  <ToggleButton value=\"secondary\">Secondary</ToggleButton>\n                </ToggleButtonGroup>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"toggle-button-colors\" code={codes[3]} />\n          </div>\n\n          <a id=\"Vertical Buttons\">\n            <h3>Vertical Buttons</h3>\n          </a>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <ToggleButtonGroup\n                  orientation=\"vertical\"\n                  value={verticalSelected}\n                  onChange={handleVerticalToggle}\n                  exclusive\n                >\n                  <ToggleButton value=\"option1\">Vertical 1</ToggleButton>\n                  <ToggleButton value=\"option2\">Vertical 2</ToggleButton>\n                  <ToggleButton value=\"option3\">Vertical 3</ToggleButton>\n                </ToggleButtonGroup>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"vertical-toggle-buttons\" code={codes[4]} />\n          </div>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default ToggleButtonCode;\n"],"names":["CodeBlock","_ref","name","code","showCode","setShowCode","useState","React","className","type","id","onChange","prev","htmlFor","Code","codeString","language","codes","ToggleButtonCode","isDark","useStyledDarkMode","location","useLocation","exclusiveSelected","setExclusiveSelected","multiSelected","setMultiSelected","sizeSelected","setSizeSelected","colorSelected","setColorSelected","verticalSelected","setVerticalSelected","handleSizeToggle","event","value","SistentLayout","title","TabButton","pathname","onClick","navigate","SistentThemeProvider","initialMode","ToggleButtonGroup","exclusive","handleExclusiveToggle","ToggleButton","handleMultiToggle","style","display","flexDirection","gap","alignItems","size","width","handleColorToggle","color","orientation","handleVerticalToggle"],"sourceRoot":""}