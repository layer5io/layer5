{"version":3,"file":"component---src-pages-projects-sistent-identity-color-index-js-cb7549a158eef79c5d3e.js","mappings":"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","sources":["webpack://Layer5/./src/assets/images/app/projects/sistent/context-visuals-1.png","webpack://Layer5/./src/assets/images/app/projects/sistent/context-visuals-2.png","webpack://Layer5/./src/assets/images/app/projects/sistent/context-visuals-3.png","webpack://Layer5/./src/assets/images/app/projects/sistent/context-visuals-4.png","webpack://Layer5/./node_modules/@mui/icons-material/esm/ContentCopy.js","webpack://Layer5/./src/sections/Projects/Sistent/identity/color/index.js","webpack://Layer5/./src/pages/projects/sistent/identity/color/index.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/context-visuals-1-87dde2e31da6ac24398052c332e5ff89.png\";","export default __webpack_public_path__ + \"static/context-visuals-2-1484f9530dcc6b1fbbca57c1b30a900c.png\";","export default __webpack_public_path__ + \"static/context-visuals-3-d8895f69abd841050c85e52f75bd387e.png\";","export default __webpack_public_path__ + \"static/context-visuals-4-cbb4beb9d2c46d3e2def75c67f5039fc.png\";","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2m0 16H8V7h11z\"\n}), 'ContentCopy');","import React, { useState } from \"react\";\nimport { navigate } from \"gatsby\";\nimport { Row, Col } from \"../../../../../reusecore/Layout\";\nimport { useLocation } from \"@reach/router\";\nimport Button from \"../../../../../reusecore/Button\";\nimport ContextVisuals1 from \"../../../../../assets/images/app/projects/sistent/context-visuals-1.png\";\nimport ContextVisuals2 from \"../../../../../assets/images/app/projects/sistent/context-visuals-2.png\";\nimport ContextVisuals3 from \"../../../../../assets/images/app/projects/sistent/context-visuals-3.png\";\nimport ContextVisuals4 from \"../../../../../assets/images/app/projects/sistent/context-visuals-4.png\";\nimport { useTheme, Tooltip, Snackbar, IconButton, styled, NoSsr } from \"@sistent/sistent\";\nimport { SistentLayout } from \"../../sistent-layout\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\n\nconst ColorCards = styled(\"div\")(() => ({\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  gap: \"2rem\",\n  margin: \"2rem 0\",\n  justifyContent: \"center\",\n}));\n\nconst ColorCard = styled(\"div\")(() => ({\n  width: \"300px\",\n  borderRadius: \"8px\",\n  boxShadow: \"0px 5px 10px 1px rgba(0, 179, 159, 0.5)\",\n  cursor: \"pointer\",\n  userSelect: \"none\",\n}));\n\nconst Swatch = styled(\"div\")(({ color }) => ({\n  height: \"100px\",\n  borderRadius: \"8px 8px 0 0\",\n  backgroundColor: color,\n}));\n\nconst ColorInfo = styled(\"div\")(() => ({\n  padding: \"1rem\",\n  textAlign: \"center\",\n}));\n\nconst CodeRow = styled(\"div\")(() => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  gap: \"0.5rem\",\n  fontFamily: \"monospace\",\n  fontSize: \"0.85rem\",\n  userSelect: \"text\",\n  padding: \"6px 10px\",\n}));\n\nconst SistentIdentityColor = () => {\n  const location = useLocation();\n  const theme = useTheme();\n\n  const colors = [\n    {\n      name: \"Keppel Green\",\n      color: \"#00B39F\",\n      hex: \"#00B39F\",\n      rgb: \"rgb(0, 179, 159)\",\n      token: \"theme.palette.background.brand.default\",\n    },\n    {\n      name: \"Caribbean Green\",\n      color: \"#00D3A9\",\n      hex: \"#00D3A9\",\n      rgb: \"rgb(0, 211, 169)\",\n      token: \"theme.palette.background.graphics.default\",\n    },\n    {\n      name: \"Saffron Yellow\",\n      color: \"#EBC017\",\n      hex: \"#EBC017\",\n      rgb: \"rgb(235, 192, 23)\",\n      token: \"theme.palette.background.cta.default\",\n    },\n    {\n      name: \"Charcoal\",\n      color: \"#3C494F\",\n      hex: \"#3C494F\",\n      rgb: \"rgb(60, 73, 79)\",\n      token: \"theme.palette.background.default\",\n    },\n    {\n      name: \"Accent Grey\",\n      color: \"#647881\",\n      hex: \"#647881\",\n      rgb: \"rgb(100, 120, 129)\",\n      token: \"theme.palette.background.secondary\",\n    },\n  ];\n\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMsg, setSnackbarMsg] = useState(\"\");\n\n  const handleCopy = (text) => {\n    navigator.clipboard.writeText(text).then(() => {\n      setSnackbarMsg(`Copied ${text} to clipboard!`);\n      setSnackbarOpen(true);\n    });\n  };\n\n  return (\n    <SistentLayout title=\"Color\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Color</h2>\n        </a>\n        <p>\n          Colors when accurately applied can be a potent tool that enables\n          designers and developers to implement solutions with speed and\n          efficiency. Here are a couple of things to keep in mind.\n        </p>\n        <div className=\"filterBtns\">\n          <Button\n            className={\n              location.pathname === \"/projects/sistent/identity/color\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/identity/color\")}\n            title=\"Overview\"\n          />\n          <Button\n            className={\n              location.pathname === \"/projects/sistent/identity/color/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/identity/color/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <Button\n            className={\n              location.pathname === \"/projects/sistent/identity/color/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/identity/color/code\")}\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <p>\n            In order to achieve the aim of maintaining a consistent and engaging\n            digital interface across Layer5, whether it is in the form of\n            websites, applications, or experiences, a detailed explanation of\n            color application along with practical use cases is needed. To this\n            end, the following concepts help to shape a suitable identity as we\n            aim for balance throughout our User Interface.\n          </p>\n          <a id=\"Introduction\">\n            <h2>Introduction</h2>\n          </a>\n          <p>\n            When the color palette is accurately put to use, it ensures a\n            recognizable consistency in Layer5's array of digital interfaces and\n            products. This is made possible due to adherence to well defined\n            rules which though specific, are also flexible and give ample room\n            for professionals to curate appealing solutions across themes.\n          </p>\n          <a id=\"The Basics\">\n            <h2>The Basics</h2>\n          </a>\n          <p>\n            Let's start with a few of the common terms that we will come across\n            frequently, as understanding what they mean will inform us of\n            applicable use cases and proper procedures that should not be\n            overlooked.\n          </p>\n          <h3>Theme</h3>\n          <p>\n            By definition, a theme is a cohesive and consistent look and feel\n            for a product. This consistent look can be achieved with the use of\n            harmonious color palettes, legible fonts and layout patterns.\n            Currently, sistent outlines specifications for light and dark\n            themes.\n          </p>\n          <h3>Value</h3>\n          <p>\n            A value is the unique visual attribute assigned to a token through\n            the use of themes. This could range from hex codes to rgba values\n            which are used to highlight specific colors in any given instance.\n            We highly recommend that no exact values be referenced anywhere in\n            the design in order to avoid errors and ensure consistency. Instead,\n            tokens should be used to curate and implement the reusable values.\n            More on tokens next.\n          </p>\n          <h3>Tokens</h3>\n          <p>\n            Tokens can be regarded as a shared language between design and\n            development for communicating detailed information about how to\n            build user interfaces. Generally, a rule of thumb is to represent\n            the context (background, text, component), role (success, warning,\n            brand, inverse), and modifier(s) (secondary, tertiary, hover) in a\n            string of text that will represent set values gotten from the colors\n            in the color palette.\n          </p>\n          <h3>Role</h3>\n          <p>\n            Roles are parameters that specify the context that colors are being\n            applied to and while different roles can share the same value, the\n            token structure means that they will have different use cases. These\n            values can be different though depending on the current theme.\n          </p>\n          <a id=\"Color Anatomy\">\n            <h2>Color Anatomy</h2>\n          </a>\n          <p>\n            Sistent's default themes are derived from Layer5's color palette of\n            which the Keppel Green color serves as the dominant primary action\n            color with subtle shifts in value to enable the required visual\n            accessibility as recommended in the WCAG (Web Content Accessibility\n            Guidelines) 2.1 compliance standards. It is also sometimes combined\n            with Saffron Yellow and Caribbean Green colors accentuate some other\n            parts of the user interface like CTA buttons as well as\n            illustrations and icons.\n          </p>\n          <p>\n            The Charcoal color as well as another accent grey serve as neutrals\n            to complement these greens and create harmonious implementations.\n            These five colors combine to form a foundation for the color system.\n          </p>\n          <NoSsr>\n            <ColorCards>\n              {colors.map(({ name, color, hex, token, rgb }, idx) => (\n                <ColorCard key={idx}>\n                  <Swatch color={color} />\n                  <ColorInfo>\n                    <h4>{name}</h4>\n                    <CodeRow>\n                      <span>HEX: {hex}</span>\n                      <Tooltip title=\"Copy HEX\">\n                        <IconButton\n                          onClick={() => handleCopy(hex)}\n                          aria-label={`Copy HEX color code of ${name}`}\n                          sx={{\n                            color: theme.palette.icon?.default,\n                            \"&:hover\": {\n                              color: theme.palette.icon?.brand,\n                            },\n                          }}\n                        >\n                          <ContentCopyIcon />\n                        </IconButton>\n                      </Tooltip>\n                    </CodeRow>\n                    <CodeRow>\n                      <span>Sistent Token</span>\n                      <Tooltip title={`Copy Token: ${token}`}>\n                        <IconButton\n                          onClick={() => handleCopy(token)}\n                          aria-label={`Copy Sistent token of ${name}`}\n                          sx={{\n                            color: theme.palette.icon?.default,\n                            \"&:hover\": {\n                              color: theme.palette.icon?.brand,\n                            },\n                          }}\n                        >\n                          <ContentCopyIcon />\n                        </IconButton>\n                      </Tooltip>\n                    </CodeRow>\n                    <CodeRow>\n                      <span>RGB</span>\n                      <Tooltip title={`Copy RBG: ${rgb}`}>\n                        <IconButton\n                          onClick={() => handleCopy(rgb)}\n                          aria-label={`Copy RGB of ${name}`}\n                          sx={{\n                            color: theme.palette.icon?.default,\n                            \"&:hover\": {\n                              color: theme.palette.icon?.brand,\n                            },\n                          }}\n                        >\n                          <ContentCopyIcon />\n                        </IconButton>\n                      </Tooltip>\n                    </CodeRow>\n                  </ColorInfo>\n                </ColorCard>\n              ))}\n            </ColorCards>\n          </NoSsr>\n          <a id=\"Layer Hierarchy\">\n            <h2>Layer Hierarchy</h2>\n          </a>\n          <p>\n            For backgrounds and surfaces, colors in the neutral palettes are\n            used cohesively to create depth and spatial associations. This\n            hierarchical pattern defines the logic of how colors stack on top of\n            each other in a UI when implementing Sistent themes. This logical\n            pattern goes beyond just themes but is also built across components\n            and accounted for in suggested color tokens as well.\n          </p>\n          <p>\n            There is an alternate relationship between the layer hierarchy in\n            both light and dark themes:\n            <ul>\n              <li>\n                In the light theme, as layers are stacked towards the topmost\n                surface, they become progressively darker.\n              </li>\n              <li>\n                In the dark theme, as layers are stacked towards the topmost\n                surface, they become progressively lighter.\n              </li>\n            </ul>\n            This means, in effect, that while there is a fine blend of surfaces\n            on any given UI theme, there is also strict adherence to\n            accessibility guidelines and recommendations.\n          </p>\n          <Row Hcenter className=\"image-container\">\n            <Col md={8} lg={8} sm={12}>\n              <img src={ContextVisuals1} alt=\"Context Visuals\" />\n            </Col>\n          </Row>\n          <p>\n            A similar hierarchy pattern as above is adopted for brilliantly\n            colored backgrounds like brand and alert colors when it comes to\n            interactive states. So as interactions progress from default to\n            hover to pressed, this same principle may apply. However, when\n            trying to establish prominence for other user interface needs, an\n            inverse relationship may be more suitable. Hence, for these\n            brilliant colors:\n          </p>\n          <ul>\n            <li>\n              In the light theme, as prominence reduces, layers become\n              progressively lighter.\n            </li>\n            <li>\n              In the dark theme, as prominence reduces, layers become\n              progressively darker.\n            </li>\n          </ul>\n          <Row Hcenter className=\"image-container\">\n            <Col md={8} lg={8} sm={12}>\n              <img src={ContextVisuals2} alt=\"Context Visuals\" />\n            </Col>\n          </Row>\n          <a id=\"Green Color Accessbility\">\n            <h2>Green Color Accessbility</h2>\n          </a>\n          <p>\n            In the use of green, Sistent design system ensures compliance with\n            WCAG 2.1 standards for distinguishable text and color.{\" \"}\n            <strong>\n              <a href=\"https://www.figma.com/exit?url=https%3A%2F%2Fwww.w3.org%2FTR%2FWCAG21%2F%23use-of-color\">\n                (See criteria 1.4.1 and 1.4.3)\n              </a>\n            </strong>{\" \"}\n            Accessibility is a major consideration for Sistent, and as such,\n            accessibility research and guidelines are kept at the core of the\n            color selection process.There is further specification on how to\n            maintain compliance with these standards in both light and dark\n            themes:\n          </p>\n          <h3>Light Theme</h3>\n          <p>\n            In order to ensure the minimum contrast of the Keppel Green in the\n            the light theme, a variation of it is used in the light theme to\n            ensure proper contrast.\n          </p>\n          <Row Hcenter className=\"image-container\">\n            <Col md={8} lg={8} sm={12}>\n              <img src={ContextVisuals3} alt=\"Context Visuals\" />\n            </Col>\n          </Row>\n          <h3>Dark Theme</h3>\n          <p>\n            For the dark theme, the Keppel Green meets the contrast requirement\n            easily and as such can be used as the primary accent color for all\n            necessary use cases.\n          </p>\n          <Row Hcenter className=\"image-container\">\n            <Col md={8} lg={8} sm={12}>\n              <img src={ContextVisuals4} alt=\"Context Visuals\" />\n            </Col>\n          </Row>\n          <p>\n            <strong>NOTE:</strong>\n          </p>\n          <p>\n            Take note that if the primary accent color in use meets\n            accessibility standards for both intended backgrounds in the light\n            and dark themes, there might be no need to have a variation of its\n            hue represent it, as is evident in the example above.\n          </p>\n        </div>\n      </div>\n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={1500}\n        onClose={() => setSnackbarOpen(false)}\n        message={snackbarMsg}\n      />\n    </SistentLayout>\n  );\n};\n\nexport default SistentIdentityColor;\n","import React from \"react\";\nimport SistentIdentityColor from \"../../../../../sections/Projects/Sistent/identity/color\";\n\nconst SistentIdentityColorPage = () => {\n  return <SistentIdentityColor />;\n};\n\nexport default SistentIdentityColorPage;\n"],"names":["createSvgIcon","d","ColorCards","styled","display","flexWrap","gap","margin","justifyContent","ColorCard","width","borderRadius","boxShadow","cursor","userSelect","Swatch","_ref","color","height","backgroundColor","ColorInfo","padding","textAlign","CodeRow","alignItems","fontFamily","fontSize","SistentIdentityColor","location","useLocation","theme","useTheme","snackbarOpen","setSnackbarOpen","useState","snackbarMsg","setSnackbarMsg","handleCopy","text","navigator","clipboard","writeText","then","React","SistentLayout","title","className","id","Button","pathname","onClick","navigate","NoSsr","name","hex","rgb","token","map","_ref2","idx","_theme$palette$icon","_theme$palette$icon2","_theme$palette$icon3","_theme$palette$icon4","_theme$palette$icon5","_theme$palette$icon6","key","Tooltip","IconButton","sx","palette","icon","default","brand","ContentCopyIcon","Row","Hcenter","Col","md","lg","sm","src","ContextVisuals1","alt","ContextVisuals2","href","ContextVisuals3","ContextVisuals4","Snackbar","open","autoHideDuration","onClose","message","SistentIdentityColorPage"],"sourceRoot":""}