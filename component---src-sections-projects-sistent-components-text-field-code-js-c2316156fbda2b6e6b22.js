"use strict";(self.webpackChunkLayer5=self.webpackChunkLayer5||[]).push([[1242],{5168:function(e,l,t){t.d(l,{N:function(){return i}});var a=t(96540),n=t(79147);const i=e=>{let{name:l,code:t}=e;const{0:i,1:d}=(0,a.useState)(!1);return a.createElement("div",{className:"show-code"},a.createElement("input",{type:"checkbox",name:l,id:l,onChange:()=>{d((e=>!e))}}),a.createElement("label",{htmlFor:l,className:"label"},"Show Code"),i&&a.createElement(n.Ay,{codeString:t,language:"javascript"}))}},5434:function(e,l,t){t.r(l);var a=t(96540),n=t(64810),i=t(86462),d=t(48995),r=t(5168),o=t(9184),u=t(96044),s=t(92121);const m=['<Box\n    component="form"\n    sx={{ \'& .MuiTextField-root\': { m: 1, width: \'25ch\' } }}\n    noValidate\n    autoComplete="off"\n  >\n    <div>\n      <TextField\n        required\n        id="outlined-required"\n        label="Required"\n        defaultValue="Hello World"\n      />\n      <TextField\n        disabled\n        id="outlined-disabled"\n        label="Disabled"\n        defaultValue="Hello World"\n      />\n      <TextField\n        id="outlined-password-input"\n        label="Password"\n        type="password"\n        autoComplete="current-password"\n      />\n      <TextField\n        id="outlined-number"\n        label="Number"\n        type="number"\n      />\n      <TextField id="outlined-search" label="Search field" type="search" />\n      <TextField\n        id="outlined-helperText"\n        label="Helper text"\n        defaultValue="Default Value"\n        helperText="Some important text"\n      />\n    </div>\n    <div>\n      <TextField\n        required\n        id="filled-required"\n        label="Required"\n        defaultValue="Hello World"\n        variant="filled"\n      />\n      <TextField\n        disabled\n        id="filled-disabled"\n        label="Disabled"\n        defaultValue="Hello World"\n        variant="filled"\n      />\n      <TextField\n        id="filled-password-input"\n        label="Password"\n        type="password"\n        autoComplete="current-password"\n        variant="filled"\n      />\n      <TextField\n        id="filled-number"\n        label="Number"\n        type="number"\n        variant="filled"\n      />\n      <TextField\n        id="filled-search"\n        label="Search field"\n        type="search"\n        variant="filled"\n      />\n      <TextField\n        id="filled-helperText"\n        label="Helper text"\n        defaultValue="Default Value"\n        helperText="Some important text"\n        variant="filled"\n      />\n    </div>\n    <div>\n      <TextField\n        required\n        id="standard-required"\n        label="Required"\n        defaultValue="Hello World"\n        variant="standard"\n      />\n      <TextField\n        disabled\n        id="standard-disabled"\n        label="Disabled"\n        defaultValue="Hello World"\n        variant="standard"\n      />\n      <TextField\n        id="standard-password-input"\n        label="Password"\n        type="password"\n        autoComplete="current-password"\n        variant="standard"\n      />\n      <TextField\n        id="standard-number"\n        label="Number"\n        type="number"\n        variant="standard"\n      />\n      <TextField\n        id="standard-search"\n        label="Search field"\n        type="search"\n        variant="standard"\n      />\n      <TextField\n        id="standard-helperText"\n        label="Helper text"\n        defaultValue="Default Value"\n        helperText="Some important text"\n        variant="standard"\n      />\n    </div>\n  </Box>','  <Box\n      component="form"\n      sx={{ \'& .MuiTextField-root\': { m: 1, width: \'25ch\' } }}\n      noValidate\n      autoComplete="off"\n    >\n      <div>\n        <TextField\n          error\n          id="outlined-error"\n          label="Error"\n          defaultValue="Hello World"\n        />\n        <TextField\n          error\n          id="outlined-error-helper-text"\n          label="Error"\n          defaultValue="Hello World"\n          helperText="Incorrect entry."\n        />\n      </div>\n      <div>\n        <TextField\n          error\n          id="filled-error"\n          label="Error"\n          defaultValue="Hello World"\n          variant="filled"\n        />\n        <TextField\n          error\n          id="filled-error-helper-text"\n          label="Error"\n          defaultValue="Hello World"\n          helperText="Incorrect entry."\n          variant="filled"\n        />\n      </div>\n      <div>\n        <TextField\n          error\n          id="standard-error"\n          label="Error"\n          defaultValue="Hello World"\n          variant="standard"\n        />\n        <TextField\n          error\n          id="standard-error-helper-text"\n          label="Error"\n          defaultValue="Hello World"\n          helperText="Incorrect entry."\n          variant="standard"\n        />\n      </div>\n    </Box>','  <Box\n      component="form"\n      sx={{ \'& .MuiTextField-root\': { m: 1, width: \'25ch\' } }}\n      noValidate\n      autoComplete="off"\n    >\n      <div>\n        <TextField\n          id="outlined-multiline-flexible"\n          label="Multiline"\n          multiline\n          maxRows={4}\n        />\n        <TextField\n          id="outlined-textarea"\n          label="Multiline Placeholder"\n          placeholder="Placeholder"\n          multiline\n        />\n        <TextField\n          id="outlined-multiline-static"\n          label="Multiline"\n          multiline\n          rows={4}\n          defaultValue="Default Value"\n        />\n      </div>\n      <div>\n        <TextField\n          id="filled-multiline-flexible"\n          label="Multiline"\n          multiline\n          maxRows={4}\n          variant="filled"\n        />\n        <TextField\n          id="filled-textarea"\n          label="Multiline Placeholder"\n          placeholder="Placeholder"\n          multiline\n          variant="filled"\n        />\n        <TextField\n          id="filled-multiline-static"\n          label="Multiline"\n          multiline\n          rows={4}\n          defaultValue="Default Value"\n          variant="filled"\n        />\n      </div>\n      <div>\n        <TextField\n          id="standard-multiline-flexible"\n          label="Multiline"\n          multiline\n          maxRows={4}\n          variant="standard"\n        />\n        <TextField\n          id="standard-textarea"\n          label="Multiline Placeholder"\n          placeholder="Placeholder"\n          multiline\n          variant="standard"\n        />\n        <TextField\n          id="standard-multiline-static"\n          label="Multiline"\n          multiline\n          rows={4}\n          defaultValue="Default Value"\n          variant="standard"\n        />\n      </div>\n    </Box>','  <Box\n      component="form"\n      sx={{ \'& .MuiTextField-root\': { m: 1, width: \'25ch\' } }}\n      noValidate\n      autoComplete="off"\n    >\n      <div>\n        <TextField\n          label="Size"\n          id="outlined-size-small"\n          defaultValue="Small"\n          size="small"\n        />\n        <TextField label="Size" id="outlined-size-normal" defaultValue="Normal" />\n      </div>\n      <div>\n        <TextField\n          label="Size"\n          id="filled-size-small"\n          defaultValue="Small"\n          variant="filled"\n          size="small"\n        />\n        <TextField\n          label="Size"\n          id="filled-size-normal"\n          defaultValue="Normal"\n          variant="filled"\n        />\n      </div>\n      <div>\n        <TextField\n          label="Size"\n          id="standard-size-small"\n          defaultValue="Small"\n          size="small"\n          variant="standard"\n        />\n        <TextField\n          label="Size"\n          id="standard-size-normal"\n          defaultValue="Normal"\n          variant="standard"\n        />\n      </div>\n    </Box>',' <Box sx={{ width: 600, maxWidth: \'100%\' }}>\n      <TextField fullWidth label="fullWidth" id="fullWidth" />\n  </Box>'];l.default=()=>{const e=(0,i.useLocation)(),{isDark:l}=(0,s.G)();return a.createElement(o.p,{title:"TextField"},a.createElement("div",{className:"content"},a.createElement("a",{id:"Identity"},a.createElement("h2",null,"Text Field")),a.createElement("p",null,"The TextField component is a versatile input field used to capture user input in forms and user interfaces. It can handle a variety of input types, such as text, numbers, emails, and passwords, and offers built-in styling and validation features."),a.createElement("div",{className:"filterBtns"},a.createElement(u.default,{className:"/projects/sistent/components/text-field"===e.pathname?"active":"",onClick:()=>(0,n.navigate)("/projects/sistent/components/text-field"),title:"Overview"}),a.createElement(u.default,{className:"/projects/sistent/components/text-field/guidance"===e.pathname?"active":"",onClick:()=>(0,n.navigate)("/projects/sistent/components/text-field/guidance"),title:"Guidance"}),a.createElement(u.default,{className:"/projects/sistent/components/text-field/code"===e.pathname?"active":"",onClick:()=>(0,n.navigate)("/projects/sistent/identity/color/code"),title:"Code"})),a.createElement("div",{className:"main-content"},a.createElement("p",null,"A TextField allow user to enter and edit any text. It mostly present in Forms or dialogue box in UI. TextField are crucial and integral elements in an interface. It allows to get data from enetered user."),a.createElement("a",{id:"Form Props"},a.createElement("h2",null,"Form Props")),a.createElement("p",null,"Standard form attributes are supported, for example required, disabled, type, etc. HelperText attributes is used to give context about a field's input, such as how the input will be used."),a.createElement("div",{className:"showcase"},a.createElement("div",{className:"tf-items"},a.createElement(d.SistentThemeProvider,{initialMode:l?"dark":"light"},a.createElement(d.Box,{component:"form",sx:{"& .MuiTextField-root":{m:1,width:"25ch"}},noValidate:!0,autoComplete:"off"},a.createElement("div",null,a.createElement(d.TextField,{required:!0,id:"outlined-required",label:"Required",defaultValue:"Hello World"}),a.createElement(d.TextField,{disabled:!0,id:"outlined-disabled",label:"Disabled",defaultValue:"Hello World"}),a.createElement(d.TextField,{id:"outlined-password-input",label:"Password",type:"password",autoComplete:"current-password"}),a.createElement(d.TextField,{id:"outlined-number",label:"Number",type:"number"}),a.createElement(d.TextField,{id:"outlined-search",label:"Search field",type:"search"}),a.createElement(d.TextField,{id:"outlined-helperText",label:"Helper text",defaultValue:"Default Value",helperText:"Some important text"})),a.createElement("div",null,a.createElement(d.TextField,{required:!0,id:"filled-required",label:"Required",defaultValue:"Hello World",variant:"filled"}),a.createElement(d.TextField,{disabled:!0,id:"filled-disabled",label:"Disabled",defaultValue:"Hello World",variant:"filled"}),a.createElement(d.TextField,{id:"filled-password-input",label:"Password",type:"password",autoComplete:"current-password",variant:"filled"}),a.createElement(d.TextField,{id:"filled-number",label:"Number",type:"number",variant:"filled"}),a.createElement(d.TextField,{id:"filled-search",label:"Search field",type:"search",variant:"filled"}),a.createElement(d.TextField,{id:"filled-helperText",label:"Helper text",defaultValue:"Default Value",helperText:"Some important text",variant:"filled"})),a.createElement("div",null,a.createElement(d.TextField,{required:!0,id:"standard-required",label:"Required",defaultValue:"Hello World",variant:"standard"}),a.createElement(d.TextField,{disabled:!0,id:"standard-disabled",label:"Disabled",defaultValue:"Hello World",variant:"standard"}),a.createElement(d.TextField,{id:"standard-password-input",label:"Password",type:"password",autoComplete:"current-password",variant:"standard"}),a.createElement(d.TextField,{id:"standard-number",label:"Number",type:"number",variant:"standard"}),a.createElement(d.TextField,{id:"standard-search",label:"Search field",type:"search",variant:"standard"}),a.createElement(d.TextField,{id:"standard-helperText",label:"Helper text",defaultValue:"Default Value",helperText:"Some important text",variant:"standard"}))))),a.createElement(r.N,{name:"form-props",code:m[0]})),a.createElement("a",{id:"Validation"},a.createElement("h2",null,"Validation")),a.createElement("p",null,"The error property toggles the error state. The helperText prop can then be used to provide feedback to the user about the error. As shown below it can be used with variant such as outlined (default), filled, and standard."),a.createElement("div",{className:"showcase"},a.createElement("div",{className:"tf-items"},a.createElement(d.SistentThemeProvider,{initialMode:l?"dark":"light"},a.createElement(d.Box,{component:"form",sx:{"& .MuiTextField-root":{m:1,width:"25ch"}},noValidate:!0,autoComplete:"off"},a.createElement("div",null,a.createElement(d.TextField,{error:!0,id:"outlined-error",label:"Error",defaultValue:"Hello World"}),a.createElement(d.TextField,{error:!0,id:"outlined-error-helper-text",label:"Error",defaultValue:"Hello World",helperText:"Incorrect entry."})),a.createElement("div",null,a.createElement(d.TextField,{error:!0,id:"filled-error",label:"Error",defaultValue:"Hello World",variant:"filled"}),a.createElement(d.TextField,{error:!0,id:"filled-error-helper-text",label:"Error",defaultValue:"Hello World",helperText:"Incorrect entry.",variant:"filled"})),a.createElement("div",null,a.createElement(d.TextField,{error:!0,id:"standard-error",label:"Error",defaultValue:"Hello World",variant:"standard"}),a.createElement(d.TextField,{error:!0,id:"standard-error-helper-text",label:"Error",defaultValue:"Hello World",helperText:"Incorrect entry.",variant:"standard"}))))),a.createElement(r.N,{name:"validation",code:m[0]})),a.createElement("a",{id:"Multiline"},a.createElement("h2",null,"Multiline")),a.createElement("p",null,"The multiline prop transforms the text field into a TextareaAutosize element. Unless the rows prop is set, the height of the text field dynamically matches its content (using TextareaAutosize). You can use the minRows and maxRows props to bound it."),a.createElement("div",{className:"showcase"},a.createElement("div",{className:"tf-items"},a.createElement(d.SistentThemeProvider,{initialMode:l?"dark":"light"},a.createElement(d.Box,{component:"form",sx:{"& .MuiTextField-root":{m:1,width:"25ch"}},noValidate:!0,autoComplete:"off"},a.createElement("div",null,a.createElement(d.TextField,{id:"outlined-multiline-flexible",label:"Multiline",multiline:!0,maxRows:4}),a.createElement(d.TextField,{id:"outlined-textarea",label:"Multiline Placeholder",placeholder:"Placeholder",multiline:!0}),a.createElement(d.TextField,{id:"outlined-multiline-static",label:"Multiline",multiline:!0,rows:4,defaultValue:"Default Value"})),a.createElement("div",null,a.createElement(d.TextField,{id:"filled-multiline-flexible",label:"Multiline",multiline:!0,maxRows:4,variant:"filled"}),a.createElement(d.TextField,{id:"filled-textarea",label:"Multiline Placeholder",placeholder:"Placeholder",multiline:!0,variant:"filled"}),a.createElement(d.TextField,{id:"filled-multiline-static",label:"Multiline",multiline:!0,rows:4,defaultValue:"Default Value",variant:"filled"})),a.createElement("div",null,a.createElement(d.TextField,{id:"standard-multiline-flexible",label:"Multiline",multiline:!0,maxRows:4,variant:"standard"}),a.createElement(d.TextField,{id:"standard-textarea",label:"Multiline Placeholder",placeholder:"Placeholder",multiline:!0,variant:"standard"}),a.createElement(d.TextField,{id:"standard-multiline-static",label:"Multiline",multiline:!0,rows:4,defaultValue:"Default Value",variant:"standard"}))))),a.createElement(r.N,{name:"multi-line",code:m[2]})),a.createElement("a",{id:"Sizes"},a.createElement("h2",null,"Sizes")),a.createElement("p",null,"TextField can have small or normal field sizes. According the requirement it can be adjusted."),a.createElement("div",{className:"showcase"},a.createElement("div",{className:"tf-items"},a.createElement(d.SistentThemeProvider,{initialMode:l?"dark":"light"},a.createElement(d.Box,{component:"form",sx:{"& .MuiTextField-root":{m:1,width:"25ch"}},noValidate:!0,autoComplete:"off"},a.createElement("div",null,a.createElement(d.TextField,{label:"Size",id:"outlined-size-small",defaultValue:"Small",size:"small"}),a.createElement(d.TextField,{label:"Size",id:"outlined-size-normal",defaultValue:"Normal"})),a.createElement("div",null,a.createElement(d.TextField,{label:"Size",id:"filled-size-small",defaultValue:"Small",variant:"filled",size:"small"}),a.createElement(d.TextField,{label:"Size",id:"filled-size-normal",defaultValue:"Normal",variant:"filled"})),a.createElement("div",null,a.createElement(d.TextField,{label:"Size",id:"standard-size-small",defaultValue:"Small",size:"small",variant:"standard"}),a.createElement(d.TextField,{label:"Size",id:"standard-size-normal",defaultValue:"Normal",variant:"standard"}))))),a.createElement(r.N,{name:"sizes",code:m[3]})),a.createElement("a",{id:"Full Width"},a.createElement("h2",null,"Full Width")),a.createElement("p",null,"FullWidth attribute can be used to make the input take up the full width of its container."),a.createElement("div",{className:"showcase"},a.createElement("div",{className:"tf-items"},a.createElement(d.SistentThemeProvider,{initialMode:l?"dark":"light"},a.createElement(d.Box,{sx:{width:600,maxWidth:"100%"}},a.createElement(d.TextField,{fullWidth:!0,label:"fullWidth",id:"fullWidth"})))),a.createElement(r.N,{name:"filled-button",code:m[4]})))))}}}]);
//# sourceMappingURL=component---src-sections-projects-sistent-components-text-field-code-js-c2316156fbda2b6e6b22.js.map