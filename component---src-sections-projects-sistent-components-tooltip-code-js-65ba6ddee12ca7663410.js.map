{"version":3,"file":"component---src-sections-projects-sistent-components-tooltip-code-js-65ba6ddee12ca7663410.js","mappings":"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","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/button/code-block.js","webpack://Layer5/./src/sections/Projects/Sistent/components/tooltip/code.js","webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Code from \"../../../../../components/CodeBlock\";\n\nexport const CodeBlock = ({ name, code }) => {\n  const [showCode, setShowCode] = useState(false);\n  const onChange = () => {\n    setShowCode((prev) => !prev);\n  };\n  return (\n    <div className=\"show-code\">\n      <input type=\"checkbox\" name={name} id={name} onChange={onChange} />\n      <label htmlFor={name} className=\"label\">\n        Show Code\n      </label>\n      {showCode && (\n        <Code codeString={code} language=\"javascript\" />\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport {\n  SistentThemeProvider,\n  Button,\n  Box,\n  Grid,\n  CustomTooltip,\n} from \"@sistent/sistent\";\nimport { SistentLayout } from \"../../sistent-layout\";\nimport { CodeBlock } from \"../button/code-block\";\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\nconst codes = [\n  `<CustomTooltip title=\"Submit\">\n  <span>\n    <Button variant=\"contained\" label=\"Submit\" size=\"medium\" />\n  </span>\n</CustomTooltip>`,\n  `<Box sx={{ width: 500 }}>\n  <Grid container sx={{ justifyContent: \"center\" }}>\n    <Grid item>\n      <CustomTooltip title=\"Add\" placement=\"top-start\">\n        <span>\n          <Button>top-start</Button>\n        </span>\n      </CustomTooltip>\n      <CustomTooltip title=\"Add\" placement=\"top\">\n        <span>\n          <Button>top</Button>\n        </span>\n      </CustomTooltip>\n      <CustomTooltip title=\"Add\" placement=\"top-end\">\n        <span>\n          <Button>top-end</Button>\n        </span>\n      </CustomTooltip>\n    </Grid>\n  </Grid>\n  <Grid container sx={{ justifyContent: \"center\" }}>\n    <Grid item xs={6}>\n      <CustomTooltip title=\"Add\" placement=\"left-start\">\n        <span>\n          <Button>left-start</Button>\n        </span>\n      </CustomTooltip>\n      <br />\n      <CustomTooltip title=\"Add\" placement=\"left\">\n        <span>\n          <Button>left</Button>\n        </span>\n      </CustomTooltip>\n      <br />\n      <CustomTooltip title=\"Add\" placement=\"left-end\">\n        <span>\n          <Button>left-end</Button>\n        </span>\n      </CustomTooltip>\n    </Grid>\n    <Grid\n      item\n      container\n      xs={6}\n      direction=\"column\"\n      sx={{ alignItems: \"flex-end\" }}\n    >\n      <Grid item>\n        <CustomTooltip title=\"Add\" placement=\"right-start\">\n          <span>\n            <Button>right-start</Button>\n          </span>\n        </CustomTooltip>\n      </Grid>\n      <Grid item>\n        <CustomTooltip title=\"Add\" placement=\"right\">\n          <span>\n            <Button>right</Button>\n          </span>\n        </CustomTooltip>\n      </Grid>\n      <Grid item>\n        <CustomTooltip title=\"Add\" placement=\"right-end\">\n          <span>\n            <Button>right-end</Button>\n          </span>\n        </CustomTooltip>\n      </Grid>\n    </Grid>\n  </Grid>\n  <Grid container sx={{ justifyContent: \"center\" }}>\n    <Grid item>\n      <CustomTooltip title=\"Add\" placement=\"bottom-start\">\n        <span>\n          <Button>bottom-start</Button>\n        </span>\n      </CustomTooltip>\n      <CustomTooltip title=\"Add\" placement=\"bottom\">\n        <span>\n          <Button>bottom</Button>\n        </span>\n      </CustomTooltip>\n      <CustomTooltip title=\"Add\" placement=\"bottom-end\">\n        <span>\n          <Button>bottom-end</Button>\n        </span>\n      </CustomTooltip>\n    </Grid>\n  </Grid>\n</Box>`,\n  `<CustomTooltip\n  title=\"Add\"\n  slotProps={{\n    popper: {\n      modifiers: [\n        {\n          name: \"offset\",\n          options: {\n            offset: [0, -14],\n          },\n        },\n      ],\n    },\n  }}\n>\n  <span>\n    <Button variant=\"contained\" size=\"medium\">  \n      Offset\n    </Button>\n  </span>\n</CustomTooltip>`,\n  `<CustomTooltip title=\"Add\" variant=\"standard\">\n  <span>\n    <Button variant=\"contained\" size=\"medium\">\n      standard\n    </Button>\n  </span>\n</CustomTooltip>\n<CustomTooltip title=\"Add\" variant=\"small\">\n  <span>\n    <Button variant=\"contained\" size=\"medium\">\n      small\n    </Button>\n  </span>\n</CustomTooltip>`,\n  `<CustomTooltip title=\"Follow Cursor\" followCursor>\n  <span>\n    <Button variant=\"contained\" size=\"medium\">\n      Button\n    </Button>\n  </span>\n</CustomTooltip>`,\n  `<CustomTooltip title=\"Add\" enterDelay={500} leaveDelay={200}>\n  <span>\n    <Button variant=\"text\" size=\"medium\">\n      [500MS, 200MS]\n    </Button>\n  </span>\n</CustomTooltip>`,\n];\n\nconst TooltipCode = () => {\n  const { isDark } = useStyledDarkMode();\n  const location = useLocation();\n\n  return (\n    <SistentLayout title=\"Tooltip\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Tooltip</h2>\n        </a>\n        <p>\n          The Tooltip component displays informative text when users hover over,\n          focus on, or tap an element. Tooltips are designed to enhance\n          accessibility and user understanding of interface elements.\n        </p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/tooltip\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/tooltip\")\n            }\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/tooltip/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/tooltip/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/tooltip/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/tooltip/code\")\n            }\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <p>\n            The Tooltip component displays informative text when users hover\n            over, focus on, or tap an element. Tooltips are designed to enhance\n            accessibility and user understanding of interface elements.\n          </p>\n          <a id=\"Basic Tooltip\">\n            <h3>Basic Tooltip</h3>\n          </a>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <CustomTooltip title=\"Submit\">\n                  <span>\n                    <Button variant=\"contained\" label=\"Submit\" size=\"medium\" />\n                  </span>\n                </CustomTooltip>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"basic-Tooltip\" code={codes[0]} />\n          </div>\n          <a id=\"Positioned Example\">\n            <h3>Positioned Example</h3>\n          </a>\n          <p>\n            You can specify the position of the Popper using the{\" \"}\n            <code>placement</code> prop. Here's an example of a Tooltip\n            positioned above its anchor:\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box sx={{ width: 500 }}>\n                  <Grid container sx={{ justifyContent: \"center\" }}>\n                    <Grid item>\n                      <CustomTooltip title=\"Add\" placement=\"top-start\">\n                        <span>\n                          <Button>top-start</Button>\n                        </span>\n                      </CustomTooltip>\n                      <CustomTooltip title=\"Add\" placement=\"top\">\n                        <span>\n                          <Button>top</Button>\n                        </span>\n                      </CustomTooltip>\n                      <CustomTooltip title=\"Add\" placement=\"top-end\">\n                        <span>\n                          <Button>top-end</Button>\n                        </span>\n                      </CustomTooltip>\n                    </Grid>\n                  </Grid>\n                  <Grid container sx={{ justifyContent: \"center\" }}>\n                    <Grid item xs={6}>\n                      <CustomTooltip title=\"Add\" placement=\"left-start\">\n                        <span>\n                          <Button>left-start</Button>\n                        </span>\n                      </CustomTooltip>\n                      <br />\n                      <CustomTooltip title=\"Add\" placement=\"left\">\n                        <span>\n                          <Button>left</Button>\n                        </span>\n                      </CustomTooltip>\n                      <br />\n                      <CustomTooltip title=\"Add\" placement=\"left-end\">\n                        <span>\n                          <Button>left-end</Button>\n                        </span>\n                      </CustomTooltip>\n                    </Grid>\n                    <Grid\n                      item\n                      container\n                      xs={6}\n                      direction=\"column\"\n                      sx={{ alignItems: \"flex-end\" }}\n                    >\n                      <Grid item>\n                        <CustomTooltip title=\"Add\" placement=\"right-start\">\n                          <span>\n                            <Button>right-start</Button>\n                          </span>\n                        </CustomTooltip>\n                      </Grid>\n                      <Grid item>\n                        <CustomTooltip title=\"Add\" placement=\"right\">\n                          <span>\n                            <Button>right</Button>\n                          </span>\n                        </CustomTooltip>\n                      </Grid>\n                      <Grid item>\n                        <CustomTooltip title=\"Add\" placement=\"right-end\">\n                          <span>\n                            <Button>right-end</Button>\n                          </span>\n                        </CustomTooltip>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid container sx={{ justifyContent: \"center\" }}>\n                    <Grid item>\n                      <CustomTooltip title=\"Add\" placement=\"bottom-start\">\n                        <span>\n                          <Button>bottom-start</Button>\n                        </span>\n                      </CustomTooltip>\n                      <CustomTooltip title=\"Add\" placement=\"bottom\">\n                        <span>\n                          <Button>bottom</Button>\n                        </span>\n                      </CustomTooltip>\n                      <CustomTooltip title=\"Add\" placement=\"bottom-end\">\n                        <span>\n                          <Button>bottom-end</Button>\n                        </span>\n                      </CustomTooltip>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"positioned-example\" code={codes[1]} />\n          </div>\n          <a id=\"Distance from anchor\">\n            <h3>Distance from anchor</h3>\n          </a>\n          <p>\n            To adjust the distance between the tooltip and its anchor, you can\n            use the slotProps prop to modify the offset of the popper.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <CustomTooltip\n                  title=\"Add\"\n                  slotProps={{\n                    popper: {\n                      modifiers: [\n                        {\n                          name: \"offset\",\n                          options: {\n                            offset: [0, -14],\n                          },\n                        },\n                      ],\n                    },\n                  }}\n                >\n                  <span>\n                    <Button variant=\"contained\" size=\"medium\">\n                      Offset\n                    </Button>\n                  </span>\n                </CustomTooltip>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"distance-anchor\" code={codes[2]} />\n          </div>\n          <a id=\"Variable width\">\n            <h3>Variable width</h3>\n          </a>\n          <p>\n            The variant prop in Tooltip allows you to control the tooltips size\n            with predefined styles (standard or small). This makes it easier to\n            adjust the tooltip to fit various UI requirements quickly and\n            consistently.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    \"& > *\": {\n                      m: 1,\n                    },\n                  }}\n                >\n                  <CustomTooltip title=\"Add\" variant=\"standard\">\n                    <span>\n                      <Button variant=\"contained\" size=\"medium\">\n                        standard\n                      </Button>\n                    </span>\n                  </CustomTooltip>\n                  <CustomTooltip title=\"Add\" variant=\"small\">\n                    <span>\n                      <Button variant=\"contained\" size=\"medium\">\n                        small\n                      </Button>\n                    </span>\n                  </CustomTooltip>\n                </Box>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"variable-width\" code={codes[3]} />\n          </div>\n          <a id=\"Follow cursor\">\n            <h3>Follow Cursor</h3>\n          </a>\n          <p>\n            Tooltips can be configured to follow the cursor, making it easier to\n            read the content.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <CustomTooltip title=\"Follow Cursor\" followCursor>\n                  <span>\n                    <Button variant=\"contained\" size=\"medium\">\n                      Button\n                    </Button>\n                  </span>\n                </CustomTooltip>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"follow-cursor\" code={codes[4]} />\n          </div>\n          <a id=\"Showing and hiding\">\n            <h3>Showing and Hiding</h3>\n          </a>\n          <p>\n            A delay in showing or hiding the tooltip can be added through the{\" \"}\n            <code>enterDelay</code> and <code>leaveDelay</code> props.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <CustomTooltip title=\"Add\" enterDelay={500} leaveDelay={200}>\n                  <span>\n                    <Button variant=\"text\" size=\"medium\">\n                      [500MS, 200MS]\n                    </Button>\n                  </span>\n                </CustomTooltip>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"show-hide\" code={codes[5]} />\n          </div>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default TooltipCode;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n"],"names":["CodeBlock","_ref","name","code","showCode","setShowCode","useState","React","className","type","id","onChange","prev","htmlFor","Code","codeString","language","codes","TooltipCode","isDark","useStyledDarkMode","location","useLocation","SistentLayout","title","TabButton","pathname","onClick","navigate","SistentThemeProvider","initialMode","CustomTooltip","Button","variant","label","size","Box","sx","width","Grid","container","justifyContent","item","placement","xs","direction","alignItems","slotProps","popper","modifiers","options","offset","display","m","followCursor","enterDelay","leaveDelay","JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","contents","setContents","useEffect","anchors","document","querySelectorAll","console","log","Array","from","map","a","link","text","intapath","setIntapath","path","window","x","key","Link","to","activeClassName","children","SistentWrapper","TOC","Container","SistentPagination","IntraPage"],"sourceRoot":""}