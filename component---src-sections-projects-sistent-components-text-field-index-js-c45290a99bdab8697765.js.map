{"version":3,"file":"component---src-sections-projects-sistent-components-text-field-index-js-c45290a99bdab8697765.js","mappings":"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","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/text-field/index.js"],"sourcesContent":["import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport { Box, SistentThemeProvider, TextField } from \"@sistent/sistent\";\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { SistentLayout } from \"../../sistent-layout\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\nconst SistentTextField = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n\n  return (\n    <SistentLayout title=\"TextField\" >\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Text Field</h2>\n        </a>\n        <p>\n          The TextField component is a versatile input field used to capture user input in forms and user interfaces. It can handle a variety of input types, such as text, numbers, emails, and passwords, and offers built-in styling and validation features.\n        </p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/text-field\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/text-field\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n                \"/projects/sistent/components/text-field/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/text-field/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/text-field/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/text-field/code\")}\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <p>\n            A Text fileds allow user to enter and edit any text. It mostly present in Forms or dialogue box in UI.\n            TextField are crucial and integral elements in an interface. It allows to get data from enetered user.\n          </p>\n          <a id=\"Form Props\">\n            <h2>Form Props</h2>\n          </a>\n          <p>\n            Standard form attributes are supported, for example required, disabled, type, etc.\n            HelperText attributes is used to give context about a field's input,\n            such as how the input will be used.\n          </p>\n          <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n            <Box\n              component=\"form\"\n              sx={{ \"& .MuiTextField-root\": { m: 1, width: \"25ch\" } }}\n              noValidate\n              autoComplete=\"off\"\n            >\n              <div>\n                <TextField\n                  required\n                  id=\"outlined-required\"\n                  label=\"Required\"\n                  defaultValue=\"Hello World\"\n                />\n                <TextField\n                  disabled\n                  id=\"outlined-disabled\"\n                  label=\"Disabled\"\n                  defaultValue=\"Hello World\"\n                />\n                <TextField\n                  id=\"outlined-password-input\"\n                  label=\"Password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                />\n                <TextField\n                  id=\"outlined-number\"\n                  label=\"Number\"\n                  type=\"number\"\n                />\n                <TextField id=\"outlined-search\" label=\"Search field\" type=\"search\" />\n                <TextField\n                  id=\"outlined-helperText\"\n                  label=\"Helper text\"\n                  defaultValue=\"Default Value\"\n                  helperText=\"Some important text\"\n                />\n              </div>\n              <div>\n                <TextField\n                  required\n                  id=\"filled-required\"\n                  label=\"Required\"\n                  defaultValue=\"Hello World\"\n                  variant=\"filled\"\n                />\n                <TextField\n                  disabled\n                  id=\"filled-disabled\"\n                  label=\"Disabled\"\n                  defaultValue=\"Hello World\"\n                  variant=\"filled\"\n                />\n                <TextField\n                  id=\"filled-password-input\"\n                  label=\"Password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  variant=\"filled\"\n                />\n                <TextField\n                  id=\"filled-number\"\n                  label=\"Number\"\n                  type=\"number\"\n                  variant=\"filled\"\n                />\n                <TextField\n                  id=\"filled-search\"\n                  label=\"Search field\"\n                  type=\"search\"\n                  variant=\"filled\"\n                />\n                <TextField\n                  id=\"filled-helperText\"\n                  label=\"Helper text\"\n                  defaultValue=\"Default Value\"\n                  helperText=\"Some important text\"\n                  variant=\"filled\"\n                />\n              </div>\n              <div>\n                <TextField\n                  required\n                  id=\"standard-required\"\n                  label=\"Required\"\n                  defaultValue=\"Hello World\"\n                  variant=\"standard\"\n                />\n                <TextField\n                  disabled\n                  id=\"standard-disabled\"\n                  label=\"Disabled\"\n                  defaultValue=\"Hello World\"\n                  variant=\"standard\"\n                />\n                <TextField\n                  id=\"standard-password-input\"\n                  label=\"Password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  variant=\"standard\"\n                />\n                <TextField\n                  id=\"standard-number\"\n                  label=\"Number\"\n                  type=\"number\"\n                  variant=\"standard\"\n                />\n                <TextField\n                  id=\"standard-search\"\n                  label=\"Search field\"\n                  type=\"search\"\n                  variant=\"standard\"\n                />\n                <TextField\n                  id=\"standard-helperText\"\n                  label=\"Helper text\"\n                  defaultValue=\"Default Value\"\n                  helperText=\"Some important text\"\n                  variant=\"standard\"\n                />\n              </div>\n            </Box>\n          </SistentThemeProvider>\n          <a id=\"Validation\">\n            <h2>Validation</h2>\n          </a>\n          <p>\n            The error property toggles the error state. The helperText prop can then be used to provide feedback to the user about the error. As shown below it can be used with variant such as outlined (default), filled, and standard.\n          </p>\n          <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n            <Box\n              component=\"form\"\n              sx={{ \"& .MuiTextField-root\": { m: 1, width: \"25ch\" } }}\n              noValidate\n              autoComplete=\"off\"\n            >\n              <div>\n                <TextField\n                  error\n                  id=\"outlined-error\"\n                  label=\"Error\"\n                  defaultValue=\"Hello World\"\n                />\n                <TextField\n                  error\n                  id=\"outlined-error-helper-text\"\n                  label=\"Error\"\n                  defaultValue=\"Hello World\"\n                  helperText=\"Incorrect entry.\"\n                />\n              </div>\n              <div>\n                <TextField\n                  error\n                  id=\"filled-error\"\n                  label=\"Error\"\n                  defaultValue=\"Hello World\"\n                  variant=\"filled\"\n                />\n                <TextField\n                  error\n                  id=\"filled-error-helper-text\"\n                  label=\"Error\"\n                  defaultValue=\"Hello World\"\n                  helperText=\"Incorrect entry.\"\n                  variant=\"filled\"\n                />\n              </div>\n              <div>\n                <TextField\n                  error\n                  id=\"standard-error\"\n                  label=\"Error\"\n                  defaultValue=\"Hello World\"\n                  variant=\"standard\"\n                />\n                <TextField\n                  error\n                  id=\"standard-error-helper-text\"\n                  label=\"Error\"\n                  defaultValue=\"Hello World\"\n                  helperText=\"Incorrect entry.\"\n                  variant=\"standard\"\n                />\n              </div>\n            </Box>\n          </SistentThemeProvider>\n          <a id=\"Multiline\">\n            <h2>Multiline</h2>\n          </a>\n          <p>\n            The multiline prop transforms the text field into a TextareaAutosize element. Unless the rows prop is set, the height of the text field dynamically matches its content (using TextareaAutosize). You can use the minRows and maxRows props to bound it.\n          </p>\n          <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n            <Box\n              component=\"form\"\n              sx={{ \"& .MuiTextField-root\": { m: 1, width: \"25ch\" } }}\n              noValidate\n              autoComplete=\"off\"\n            >\n              <div>\n                <TextField\n                  id=\"outlined-multiline-flexible\"\n                  label=\"Multiline\"\n                  multiline\n                  maxRows={4}\n                />\n                <TextField\n                  id=\"outlined-textarea\"\n                  label=\"Multiline Placeholder\"\n                  placeholder=\"Placeholder\"\n                  multiline\n                />\n                <TextField\n                  id=\"outlined-multiline-static\"\n                  label=\"Multiline\"\n                  multiline\n                  rows={4}\n                  defaultValue=\"Default Value\"\n                />\n              </div>\n              <div>\n                <TextField\n                  id=\"filled-multiline-flexible\"\n                  label=\"Multiline\"\n                  multiline\n                  maxRows={4}\n                  variant=\"filled\"\n                />\n                <TextField\n                  id=\"filled-textarea\"\n                  label=\"Multiline Placeholder\"\n                  placeholder=\"Placeholder\"\n                  multiline\n                  variant=\"filled\"\n                />\n                <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"Multiline\"\n                  multiline\n                  rows={4}\n                  defaultValue=\"Default Value\"\n                  variant=\"filled\"\n                />\n              </div>\n              <div>\n                <TextField\n                  id=\"standard-multiline-flexible\"\n                  label=\"Multiline\"\n                  multiline\n                  maxRows={4}\n                  variant=\"standard\"\n                />\n                <TextField\n                  id=\"standard-textarea\"\n                  label=\"Multiline Placeholder\"\n                  placeholder=\"Placeholder\"\n                  multiline\n                  variant=\"standard\"\n                />\n                <TextField\n                  id=\"standard-multiline-static\"\n                  label=\"Multiline\"\n                  multiline\n                  rows={4}\n                  defaultValue=\"Default Value\"\n                  variant=\"standard\"\n                />\n              </div>\n            </Box>\n          </SistentThemeProvider>\n          <div style={{ paddingTop: \"10px\" }}>\n            <a id=\"Sizes\">\n              <h2>Sizes</h2>\n            </a>\n            <p>\n              TextField can have small or normal field sizes. According the requirement it can be adjusted.\n            </p>\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Box\n                component=\"form\"\n                sx={{ \"& .MuiTextField-root\": { m: 1, width: \"25ch\" } }}\n                noValidate\n                autoComplete=\"off\"\n              >\n                <div>\n                  <TextField\n                    label=\"Size\"\n                    id=\"outlined-size-small\"\n                    defaultValue=\"Small\"\n                    size=\"small\"\n                  />\n                  <TextField label=\"Size\" id=\"outlined-size-normal\" defaultValue=\"Normal\" />\n                </div>\n                <div>\n                  <TextField\n                    label=\"Size\"\n                    id=\"filled-size-small\"\n                    defaultValue=\"Small\"\n                    variant=\"filled\"\n                    size=\"small\"\n                  />\n                  <TextField\n                    label=\"Size\"\n                    id=\"filled-size-normal\"\n                    defaultValue=\"Normal\"\n                    variant=\"filled\"\n                  />\n                </div>\n                <div>\n                  <TextField\n                    label=\"Size\"\n                    id=\"standard-size-small\"\n                    defaultValue=\"Small\"\n                    size=\"small\"\n                    variant=\"standard\"\n                  />\n                  <TextField\n                    label=\"Size\"\n                    id=\"standard-size-normal\"\n                    defaultValue=\"Normal\"\n                    variant=\"standard\"\n                  />\n                </div>\n              </Box>\n            </SistentThemeProvider>\n          </div>\n          <div style={{ paddingTop: \"10px\" }}>\n            <a id=\"Full Width\">\n              <h2>Full Width</h2>\n            </a>\n            <p>\n              FullWidth attribute can be used to make the input take up the full width of its container.\n            </p>\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Box sx={{ width: 600, maxWidth: \"100%\" }}>\n                <TextField fullWidth label=\"fullWidth\" id=\"fullWidth\" />\n              </Box>\n            </SistentThemeProvider>\n          </div>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default SistentTextField;\n"],"names":["SistentTextField","location","useLocation","isDark","useStyledDarkMode","React","SistentLayout","title","className","id","TabButton","pathname","onClick","navigate","SistentThemeProvider","initialMode","Box","component","sx","m","width","noValidate","autoComplete","TextField","required","label","defaultValue","disabled","type","helperText","variant","error","multiline","maxRows","placeholder","rows","style","paddingTop","size","maxWidth","fullWidth"],"sourceRoot":""}