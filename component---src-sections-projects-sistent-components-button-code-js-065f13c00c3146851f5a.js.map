{"version":3,"file":"component---src-sections-projects-sistent-components-button-code-js-065f13c00c3146851f5a.js","mappings":"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","sources":["webpack://Layer5/./node_modules/@react-icons/all-files/fa/FaArrowRight.js","webpack://Layer5/./src/sections/Projects/Sistent/components/button/code-block.js","webpack://Layer5/./src/sections/Projects/Sistent/components/button/code.js"],"sourcesContent":["// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.FaArrowRight = function FaArrowRight (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 448 512\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z\"}}]})(props);\n};\n","import React, { useState } from \"react\";\nimport Code from \"../../../../../components/CodeBlock\";\n\nexport const CodeBlock = ({ name, code }) => {\n  const [showCode, setShowCode] = useState(false);\n  const onChange = () => {\n    setShowCode((prev) => !prev);\n  };\n  return (\n    <div className=\"show-code\">\n      <input type=\"checkbox\" name={name} id={name} onChange={onChange} />\n      <label htmlFor={name} className=\"label\">\n        Show Code\n      </label>\n      {showCode && (\n        <Code codeString={code} language=\"javascript\" />\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport { Button, SistentThemeProvider } from \"@sistent/sistent\";\nimport { CodeBlock } from \"./code-block\";\nimport { FaArrowRight } from \"@react-icons/all-files/fa/FaArrowRight\";\nimport { SistentLayout } from \"../../sistent-layout\";\n\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\n\nconst codes = [\n  `  <SistentThemeProvider>\n       <Button variant=\"contained\">Filled</Button>\n  </SistentThemeProvider>`,\n  `  <SistentThemeProvider>\n       <Button variant=\"outlined\">Outlined</Button>\n  </SistentThemeProvider>`,\n  `  <SistentThemeProvider>\n       <Button variant=\"text\">Text</Button>\n  </SistentThemeProvider>`,\n  `  <SistentThemeProvider>\n       <Button variant=\"contained\">48px Height</Button>\n       <Button variant=\"contained\">56px Height</Button>\n  </SistentThemeProvider>`,\n  `  <SistentThemeProvider>\n      <Button\n        variant=\"contained\"\n        size=\"medium\"\n        endIcon={<FaArrowRight size={12} />}\n      >\n        Next\n      </Button>\n  </SistentThemeProvider>`,\n];\n\nconst ButtonCode = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n\n  return (\n    <SistentLayout title=\"Button\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Button</h2>\n        </a>\n        <p>\n          A button is an interactive element that triggers a specific action,\n          takes users where they need to go, and points out what happens next in\n          a given flow.\n        </p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/button\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/button\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/button/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/button/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/button/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/identity/color/code\")}\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <p>\n            Buttons communicate actions to users and they can be placed at\n            several places throughout the user interface.\n          </p>\n          <a id=\"Basic Button\">\n            <h2>Basic Button</h2>\n          </a>\n          <p>The button comes in three types: Filled, Outlined, and Text.</p>\n          <h3>Filled Button</h3>\n          <p>\n            Mostly used for high-emphasis actions and are primarily\n            distinguished by their fill. They are used to represent actions that\n            are primary to the solution.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Button variant=\"contained\">Filled</Button>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"filled-button\" code={codes[0]} />\n          </div>\n          <h3>Outlined Button</h3>\n          <p>\n            Can be used for both medium and sometimes high-emphasis actions.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Button variant=\"outlined\">Outlined</Button>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"outlined-button\" code={codes[1]} />\n          </div>\n          <h3>Text Button</h3>\n          <p>\n            Mostly used for less pronounced and very low emphasis actions. Can\n            also be used for text links as well.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Button variant=\"text\">Text</Button>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"text-button\" code={codes[2]} />\n          </div>\n          <a id=\"Sizes\">\n            <h2>Sizes</h2>\n          </a>\n          <p>\n            For now, two different sizes of buttons exist: 56px height and 48px\n            height.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Button variant=\"contained\" size=\"medium\">\n                  48px Height\n                </Button>\n                <Button variant=\"contained\" size=\"large\">\n                  56px Height\n                </Button>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"button-sizes\" code={codes[3]} />\n          </div>\n          <a id=\"Adding Icons\">\n            <h2>Adding Icons</h2>\n          </a>\n          <p>\n            Icons are mostly added to filled and outlined buttons and they are\n            used to better describe the information being passed across by the\n            button’s label.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Button\n                  variant=\"contained\"\n                  size=\"medium\"\n                  endIcon={<FaArrowRight size={12} />}\n                >\n                  Next\n                </Button>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"adding-icons\" code={codes[4]} />\n          </div>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default ButtonCode;"],"names":["GenIcon","module","exports","props","CodeBlock","_ref","name","code","showCode","setShowCode","useState","React","className","type","id","onChange","prev","htmlFor","Code","codeString","language","codes","ButtonCode","location","useLocation","isDark","useStyledDarkMode","SistentLayout","title","TabButton","pathname","onClick","navigate","SistentThemeProvider","initialMode","Button","variant","size","endIcon","FaArrowRight"],"sourceRoot":""}